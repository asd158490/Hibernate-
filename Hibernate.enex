<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20200608T112643Z" application="Evernote/Windows" version="6.x">
<note><title>Javaee5层架构</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><div>Javaee5层架构</div><ul><li><div>Model层(传输层)：</div></li><ul><li><div>负责表达业务对象的属性，原则上每个数据库表对应一个Model类。</div></li></ul><li><div>DAO层(持久层):</div></li><ul><li><div>DAO层就是数据访问层，负责Model对象的持久化，将Model类对象保存到表的记录中，或将表的记录的字段值取出封装到Model对象的属性中。实现的功能是CUDR(增加，修改，删除，查询）</div></li></ul><li><div>Service层（业务服务层）</div></li><ul><li><div>负责模拟企业的业务处理，每个具体的业务处理，在Service层都有一个Service对象的方法对应。实现的功能就是业务处理方法。</div></li></ul><li><div>CO层（控制层）</div></li><ul><li><div>负责表示层与业务服务层直接的调度与协调，负责将表示层接收的数据转换为业务逻辑对象数据，负责表示层对象的调度和跳转。</div></li></ul><li><div>View层（表示层）</div></li><ul><li><div>负责系统用户操作界面的显示，接收用户的输入数据，显示用户查询的业务数据。</div></li></ul></ul><div>Hibernate概念</div><ul><li><div>Hibernate是基于Java应用的分层架构中DAO层的框架。Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。 Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序使用，也可以在Servlet/JSP的Web应用中使用。</div></li><li><div>常用的DAO层框架</div></li><ul><li><div>Hibernate</div></li><li><div>Mybatis</div></li><li><div>IBatis</div></li><li><div>JPA</div></li><li><div>TopLink(Oracle)</div></li><li><div>JDO</div></li></ul></ul><div>Hibernate的功能</div><ul><li><div>完成JavaEE 5层架构中的DAO层功能，实现对Model层对象的CUDR功能（增加，修改，删除，查询），参考上学期的JavaEE项目的5层架构编程和DAO层编程。</div></li><li><div>Hibernate遵循ORM映射原理，也是ORM的解决方案</div></li></ul><div>ORM概念和原理</div><ul><li><div>ORM- Object Relation Mapping 对象-关系-映射Java编程中一切都是对象，而关系数据库中都是表或实体，以及实体间关系。面向对象编程把所有实体看成对象（object），关系型数据库则是采用实体之间的关系（relation）连接数据。</div></li><li><div>ORM 就是通过操作实例对象，实现对关系型数据库的操作的解决方案和技术。</div></li></ul><div>Hibernate的组成</div><ul><li><div>Hibernate API： 接口和类</div></li></ul><div>对外部调用者提供了各种接口，通过这些接口提供的方法，调用者（一般是Service层对象）使用Hibernate提供的持久化功能完成对数据库的增、改，删和查询操作。</div><ul><li><div>配置文件：完成数据库的连接配置，指定要操作的数据库，数据库类型（方言），引入映射文件，全局配置等。</div></li><li><div>映射配置：完成ORM映射配置，即配置Model类到表的映射，Model属性到表字段的映射，主键字段生成配置，对象关联关系到表关联关系的映射配置。Hibernate支持XML文件方式和Annotation注解类方式实现映射配置，本课程重点介绍注解类映射配置方式。XML方式了解即可。</div></li><li><div>HQL：面向Model类对象的查询语言，用于实现直接对对象的查询，Hibernate框架自动将HQL翻译为SQL发送给数据库执行。</div></li></ul><div>Hibernate API组成</div><ul><li><div>Configuration类</div></li></ul><div>负责读取主配置文件的信息。包括如下内容：</div><div>Hibernate运行的底层信息：</div><div>数据库的URL、用户名、密码、JDBC驱动类，数据库Dialect,数据库连接池等（对应 hibernate.cfg.xml 文件）。</div><div>持久化类与数据表的映射关系（*.hbm.xml 文件）加载Xml文件（hibernate.cfg.xml）</div><div>创建对象方式Configuration cfg = new Configuration().configure();</div><ul><li><div>SessionFactory接口</div></li></ul><div>Configuration对象根据当前的配置信息生成 SessionFactory 对象，因此SessionFactory 对象中保存了当前的数据库配置信息和所有映射关系以及预定义的SQL语句。同时，SessionFactory还负责维护Hibernate的二级缓存。</div><div>获取SessionFactory的方式：&nbsp;Configuration cfg = new Configuration().configure();</div><div>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;SessionFactory sf = cfg.buildSessionFactory();</div><div>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;SessionFactory作用：是生成Session的工厂</div><div>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Session session = sf.openSession();</div><ul><li><div>Session接口是应用程序与数据库之间交互操作的核心对象，是 Hibernate 运作的中心，所有持久化对象（javabean）必须在 session 的管理下才可以进行持久化（更新数据库）操作。</div></li></ul><div>获取Session对象的方式：Session session &nbsp;= sessionFactory.openSession();</div><div>Session的主要方法简介：</div><div>取得持久化对象的方法：&nbsp;get() load()</div><div>持久化对象保存，更新和删除：save(),update(),saveOrUpdate(),delete()</div><div>开启事务:&nbsp; &nbsp;beginTransaction().</div><div>管理 Session 的方法：isOpen(),flush(), clear(), evict(), close()等</div><ul><li><div>Transaction接口</div></li></ul><div>代表一次数据库访问的最小操作，具有数据库事务的概念。</div><div>所有持久层都应该在事务管理下进行，即使是只读操作。</div><div>获取Transaction对象的方式：</div><div>Transaction tx =session.beginTransaction();</div><div>常用方法:commit():提交相关联的session实例</div><div>&nbsp; rollback():撤销事务操作</div><div>&nbsp; wasCommitted():检查事务是否提交Query接口</div><div>&nbsp;&nbsp;Query接口 ：封装数据库查询的返回结果(hql的查询方式)</div><div>&nbsp; 获取Query对象的方式：</div><div>&nbsp;Query query =&nbsp; &nbsp;session.createQuery(“hql&quot;);</div><div>&nbsp; 常用方法list():以集合的方式获取查询结果（Model对象集合）</div><div>&nbsp; uniqueResult():取得查询的单个Model对象。</div><div>Hibernate API的工作流程</div><div>1.应用程序先调用Configuration类,该类读取Hibernate配置文件及映射文件中的信息，</div><div>2.并用这些信息生成一个SessionFactory对象，</div><div>3.然后从SessionFactory对象生成一个Session对象，</div><div>4.并用Session对象生成Transaction对象；</div><div>5.可通过Session对象的get(),load(),save(),update(),delete()和saveOrUpdate()、createQuery()等方法对进行CURD等操作；</div><div>6.提交事务。</div><div>7.关闭Session.</div><div><en-media hash="4420c2b0b190add78ed1a5111ef8875d" type="image/png"/></div><div>Hibernate的总体架构结构</div><div><en-media hash="410f69c6154719ec3d938133fca66a75" type="image/png"/></div><div>Hibernate应用开发的基本流程</div><ul><li><div>在MySQL数据库中创建表</div></li></ul><div>根据业务需求和系统数据模型，取得表的名称，字段名和数据类型，表间关系。简单案例只需要创建一个表即可，表字段要少。</div><ul><li><div>引入Hibernate依赖类库</div></li><li><div>创建Model层的Model类，定义属性和set/get方法</div></li><li><div>使用Hibernate映射语法，配置Model类与表和字段的映射关系，推荐使用注解类方式，XML方式已经基本淘汰。</div></li><li><div>创建Hibernate配置文件: hibernate.cfg.xml，配置数据库连接池，数据库类型方言，指定映射Model类。</div></li><li><div>创建Service层接口,定义业务接口方法。</div></li><li><div>创建Service层实现类，实现Service接口的方法，使用Hibernate API完成持久层的增加，修改，删除功能。</div></li><li><div>编写表示层JSP，设计数据增加操作的表单和表单元素。</div></li><li><div>编写控制层Servlet（在没有学习Spring MVC之前使用Servlet），取得View层提交的数据，调用Service的方法，完成业务处理，如数据增加。</div></li></ul><div>1.创建数据库和表</div><ul><li><div>使用MySQL的客户端连接到MySQl Server（或MariaDB）上。</div></li><li><div>创建数据库：cityoa</div></li><li><div>创建表：oa_department</div></li></ul><div>-- 部门表</div><div>create table oa_department</div><div>(</div><div>&nbsp;&nbsp; DEPTNO int(10) primary key auto_increment,</div><div>&nbsp;&nbsp; DEPTCODE varchar(20),</div><div>&nbsp;&nbsp; DEPTNAME varchar(100)</div><div>);</div><div>2.Maven Web项目增加Hibernate依赖</div><ul><li><div>使用STS开发项目的工作区（已经创建好Maven Web项目的工作区）。</div></li><li><div>打开项目的pom.xml文件</div></li><li><div>增加如下Hibernate依赖</div></li></ul><div>3.创建Model类</div><ul><li><div>按照ORM的映射原则创建Model类。</div></li><li><div>类和属性创建</div></li></ul><div>创建Model类和属性，并使用Hibernate的映射注解类对类和属性进行注解。</div><div>@Entity</div><div>@Table(name=”oa_department”)</div><div>public class DepartmentModel {</div><div>@Id</div><div>@GeneratedValue(strategy = GenerationType.AUTO)</div><div>int no;</div><div>@Column(name=”DEPTCODE”)</div><div>String code;</div><div>@Column(name=”DEPTNAME”)</div><div>String name;</div><div>&nbsp;//set和get方法</div><div>}</div><div>4.创建Hibernate配置文件</div><ul><li><div>默认的配置文件名：hibernate.cfg.xml,存储位置是classpath的根目录，Maven Web项目的位置是：src/java/main/resources.</div></li><li><div>Hibernate的配置文件主要配置数据库连接，数据库类型的方言，引入有映射信息的Model类，或XML映射文件。（这里推荐使用注解类的Model类）。</div></li></ul><div><br/></div><div style="margin-left: 40px;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-configuration PUBLIC</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</div><div>&lt;hibernate-configuration&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;session-factory&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- property 元素用于配置Hibernate中的属性&nbsp;&nbsp;&nbsp;键:值&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.driver_class : 连接数据库的驱动&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.username : 连接数据库的用户名 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.username&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.password : 连接数据库的密码 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.password&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.url : 连接数据库的地址,路径 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3310/cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;c3p0.min_size&quot;&gt;1&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- show_sql: 操作数据库时,会 向控制台打印sql语句 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;show_sql&quot;&gt;true&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- format_sql: 打印sql语句前,会将sql语句先格式化&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;format_sql&quot;&gt;true&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hbm2ddl.auto: 生成表结构的策略配置</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update(最常用的取值): 如果当前数据库中不存在表结构,那么自动创建表结构.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果存在表结构,并且表结构与实体一致,那么不做修改</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果存在表结构,并且表结构与实体不一致,那么会修改表结构.会保留原有列.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create(很少):无论是否存在表结构.每次启动Hibernate都会重新创建表结构.(数据会丢失)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create-drop(极少): 无论是否存在表结构.每次启动Hibernate都会重新创建表结构.每次Hibernate运行结束时,删除表结构.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validate(很少):不会自动创建表结构.也不会自动维护表结构.Hibernate只校验表结构. 如果表结构不一致将会抛出异常.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hbm2ddl.auto&quot;&gt;update&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 数据库方言配置 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 引入ORM 映射文件&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;填写src之后的路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;mapping resource=&quot;com/city/oa/model/xml/DepartmentModel.hbm.xml&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;mapping class=&quot;com.city.oa.model.DepartmentModel&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/session-factory&gt;</div><div>&lt;/hibernate-configuration&gt;</div></div><div><br/></div></div><div>5.创建业务服务层接口</div><ul><li><div>业务层接口的方法模拟实际业务处理</div></li></ul><div>6.创建业务服务层实现类</div><ul><li><div>Service实现类实现Service接口的业务方法。</div></li><li><div>在实现类业务方法内使用Hibernate API完成对数据库表的增加操作。使用Hibernate API不再需要编写Java JDBC连接等操作，也不需要写SQL语句，Hibernate根据操作的Model对象，自动生成SQL语句。</div></li></ul><div><br/></div><div style="margin-left: 40px;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>package com.city.oa.service.impl;</div><div>import org.hibernate.Session;</div><div>import org.hibernate.SessionFactory;</div><div>import org.hibernate.Transaction;</div><div>import org.hibernate.cfg.Configuration;</div><div>import com.city.oa.model.DepartmentModel;</div><div>import com.city.oa.service.IDepartmentService;</div><div>//部门的业务实现类</div><div>public class DepartmentServiceImpl implements IDepartmentService {</div><div>@Override</div><div>public void add(DepartmentModel dm) throws Exception {</div><div>//使用Hibernate API完成增加功能</div><div>//创建配置类对象</div><div>Configuration cfg=new Configuration();</div><div>//读取hibernate.cfg.xml配置文件</div><div>cfg.configure();</div><div>//创建SessionFactory对象</div><div>SessionFactory sf=cfg.buildSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//完成Model对象增加到记录到表中</div><div>session.save(dm);</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>}</div><div>}</div></div><div><br/></div></div><div>7.创建增加部门的表示层</div><div>8.创建增加部门的控制层对象</div><ul><li><div>在没有学习Spring Web MVC的情况下，本案例使用Servlet作为Controller对象，未来使用Spring MVC的Controller类取代Controller.</div></li></ul><div><br/></div><div style="margin-left: 40px;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>package com.city.oa.controller;</div><div>import java.io.IOException;</div><div>import javax.servlet.ServletException;</div><div>import javax.servlet.annotation.WebServlet;</div><div>import javax.servlet.http.HttpServlet;</div><div>import javax.servlet.http.HttpServletRequest;</div><div>import javax.servlet.http.HttpServletResponse;</div><div>import com.city.oa.model.DepartmentModel;</div><div>import com.city.oa.service.IDepartmentService;</div><div>import com.city.oa.service.impl.DepartmentServiceImpl;</div><div>/**</div><div>* 部门增加后处理控制器</div><div>*/</div><div>@WebServlet(&quot;/department/add.do&quot;)</div><div>public class DepartmentAddController extends HttpServlet {</div><div>private static final long serialVersionUID = 1L;</div><div>/**</div><div>* @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</div><div>*/</div><div>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {</div><div><br/></div><div>String code=request.getParameter(&quot;code&quot;);</div><div>String name=request.getParameter(&quot;name&quot;);</div><div>//封装Model对象</div><div>DepartmentModel dm=new DepartmentModel();</div><div>dm.setCode(code);</div><div>dm.setName(name);</div><div>//取得业务层对象</div><div>IDepartmentService ds=new DepartmentServiceImpl();</div><div><br/></div><div>try {</div><div>ds.add(dm);</div><div><br/></div><div>} catch (Exception e) {</div><div><br/></div><div>e.printStackTrace();</div><div>}</div><div><br/></div><div>response.sendRedirect(&quot;add.jsp&quot;);</div><div>}</div><div>/**</div><div>* @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</div><div>*/</div><div>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {</div><div><br/></div><div>doGet(request, response);</div><div>}</div><div>}</div></div><div><br/></div></div><hr/><div>Hibernate配置的功能</div><ul><li><div>Hibernate框架依靠读取配置信息完成自身的初始化，并准备好完成ORM任务。</div></li><li><div>Hibernate配置的基本内容如下：</div></li><ul><li><div>配置Hibernate操作的数据库连接信息</div></li><li><div>配置Model类与表映射信息的位置</div></li><li><div>配置操作的数据库的类型（通过方言实现）</div></li><li><div>配置生成SQL的特性，如是否格式化显示SQL，是否显示SQL</div></li><li><div>配置Hibernate的缓存实现机制。</div></li><li><div>配置Hibernate全局的特性，如数据库记录抓取机制，批处理特性等等。</div></li></ul></ul><div>Hibernate配置的语法</div><ul><li><div>Hibernate所有的配置内容都使用提供的属性完成</div></li></ul><div>Hibernate框架预定义了所有其支持的属性名。并且所有属性均使用hibernate开头，属性名的语法如下：hibernate.主属性名.子属性名</div><ul><ul><li><div>hibernate.connection.driver_class&nbsp;是配置数据库连接驱动类的属性。</div></li><li><div>配置时为指定的属性给与指定的值即可。</div></li><li><div>配置时不需要为Hibernate所有的属性赋值，没有赋值的属性，Hibernate都给出的默认值。</div></li><li><div>实际配置时只给出关键的属性即可。</div></li></ul></ul><div>Hibernate配置的实现方式</div><div>Hibernate支持如下3种方式实现配置，并可以混合使用它们</div><ul><li><div>XML配置方式：通过XML文件配置Hibernate的基本特性</div></li><li><div>Java属性文件配置方式（hibernate.properties）</div></li><li><div>Java编程配置方式（通过Configuration类方法实现配置）</div></li></ul><div>1.XML文件方式实现Hibernate配置</div><ul><ul><li><div>Hibernate最常用的配置方式是使用XML文件方式，这种方式的优点是在设置Hibernate属性的同时可以设置读取映射信息。</div></li><li><div>XML配置文件的命名和存储：</div></li></ul></ul><div>Hibernate的默认配置文件名是：hibernate.cfg.xml, 将其保存到项目的classpath根目录，</div><div>（Maven Web项目的src/main/resources目录下）</div><ul><ul><li><div>Hibernate的XML文件的配置语法</div></li></ul></ul><div><br/></div><div style="margin-left: 80px;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-configuration SYSTEM</div><div>&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</div><div>&lt;hibernate-configuration&gt;</div><div>&nbsp;&nbsp;&nbsp;&lt;session-factory&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;属性名&quot;&gt;属性值&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&nbsp;&lt;/session-factory&gt;</div><div>&lt;/hibernate-configuration&gt;</div></div></div><div>Hibernate XML配置包含DOCTYPE头，根元素&lt;hibernate-configuration&gt;, 子元素&lt;session-factory&gt;，在&lt;session-factory&gt;下配置Hibernate的属性：&lt;property name=&quot;属性名&quot;&gt;属性值&lt;/property&gt;</div><div>注：XML文件配置时，属性前的hibernate可以省略，如hibernate.connection.driver_class，可以写成：connection.driver_class。</div><div>其他配置方式是不能省略hibernate前缀的</div><ul><ul><li><div>Hibernate XML配置文件的读取</div></li></ul><div>Hibernate API Configuration配置类对象的configure()方法自动读取默认的配置文件。</div><div>Configuration cfg=new Configuration();</div><div>//读取hibernate.cfg.xml配置文件</div><div>cfg.configure();</div><div>也可以定义任意的配置文件，如保存在src/main/resources/oa/conf/lhd.cfg.xml的配置文件，推荐使用“文件名.cfg.xml”格式的命名规范。</div><div>读取时使用如下方式即可读取：</div><div>cfg.configure(“hibernateconfig/lhd.cfg.xml”);</div><ul><li><div>XML配置文件引入映射信息</div></li></ul></ul><div><br/></div><div style="margin-left: 80px;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;mapping class=&quot;com.city.oa.model.DepartmentModel&quot;/&gt;</div><div>&lt;mapping package=&quot;com.city.oa.hr.model&quot;/&gt;</div><div>&lt;mapping package=&quot;com.city.oa.sales.model&quot;/&gt;</div><div>&lt;mapping package=&quot;com.city.oa.finance.model&quot;/&gt;</div><div>&lt;mapping resource=&quot;com/city/oa/model/DepartmentMode.hbm.xml&quot; /&gt;</div></div><div><br/></div></div><ul><ul><li><div>XML文件方式配置Hibernate的案例</div></li></ul></ul><div><br/></div><div style="margin-left: 80px;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>文件名:hibernate.cfg.xml</div><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-configuration PUBLIC</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</div><div>&lt;hibernate-configuration&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;session-factory&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- property 元素用于配置Hibernate中的属性&nbsp;&nbsp;&nbsp;键:值&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.driver_class : 连接数据库的驱动&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.username : 连接数据库的用户名 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.username&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.password : 连接数据库的密码 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.password&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.url : 连接数据库的地址,路径 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3310/cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;c3p0.min_size&quot;&gt;1&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- show_sql: 操作数据库时,会 向控制台打印sql语句 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;show_sql&quot;&gt;true&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- format_sql: 打印sql语句前,会将sql语句先格式化&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;format_sql&quot;&gt;true&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hbm2ddl.auto: 生成表结构的策略配置</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update(最常用的取值): 如果当前数据库中不存在表结构,那么自动创建表结构.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果存在表结构,并且表结构与实体一致,那么不做修改</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果存在表结构,并且表结构与实体不一致,那么会修改表结构.会保留原有列.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create(很少):无论是否存在表结构.每次启动Hibernate都会重新创建表结构.(数据会丢失)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;create-drop(极少): 无论是否存在表结构.每次启动Hibernate都会重新创建表结构.每次Hibernate运行结束时,删除表结构.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validate(很少):不会自动创建表结构.也不会自动维护表结构.Hibernate只校验表结构. 如果表结构不一致将会抛出异常.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hbm2ddl.auto&quot;&gt;update&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 数据库方言配置 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 引入ORM 映射文件&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;填写src之后的路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;mapping resource=&quot;com/city/oa/model/xml/DepartmentModel.hbm.xml&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;mapping class=&quot;com.city.oa.model.DepartmentModel&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/session-factory&gt;</div><div>&lt;/hibernate-configuration&gt;</div></div></div><div>2.Java属性文件方式实现Hibernate配置</div><ul><ul><li><div>Hibernate属性文件配置方式的优点就是代码编写简单，缺点是不能直接指定映射信息。</div></li><li><div>Hibernate Java属性配置文件的命名和存储</div></li></ul><div>hibernate.properties保存在项目classpath的根目录（Maven Web项目的src/main/resources是classpath的根目录）。</div><ul><li><div>属性文件配置的语法</div></li></ul><div>Hibernate属性名=值</div><div>注意：属性配置文件中属性的前缀hibernate是不能省略的。</div><ul><li><div>属性文件的配置案例：</div></li></ul><div>文件名：hibernate.properties</div><div>位置：src/main/resources</div><div>文件内容：</div><div>hibernate.connection.driver_class=com.mysql.jdbc.Driver</div><div>hibernate.connection.url=jdbc:<a href="mysql://localhost:33/">mysql://localhost:33</a>19/cityoa</div><div>hibernate.connection.username=root</div><div>hibernate.connection.password=roothibernate.dialect = org.hibernate.dialect.MySQL5Dialect</div><ul><li><div>属性配置文件的缺陷</div></li></ul><div>属性配置文件无法使用XML配置的&lt;mapping&gt;子元素，无法指定映射文件或映射Model类，因此无法指定映射信息。</div><div>使用属性配置文件还得需要XML配置文件或编程方式指定映射信息。</div><ul><li><div>属性配置文件的读取</div></li></ul><div>默认属性配置文件的读取，通过创建Configuration对象，在构造方法执行后，自动读取默认的属性配置文件。</div><div>Configuration cfg=new Configuration();</div><div>该配置类没有提供非默认配置属性文件的读取</div><div>3.Java编程方式实现Hibernate配置</div><ul><li><div>Hibernate支持无需配置文件的纯编程方式进行Hibernate配置，该方式通过Configuration对象的各种方法完成属性的设定，映射XML文件的引入和采用Java注释方式的持久类的引入。</div></li></ul><div>Hibernate API中的Configuration类既可以读取XML文件和属性配置文件，也可以通过其提供的方法自己设定属性值，引入映射文件，指定映射Model类型等等。</div><ul><ul><li><div>setProperty(String name,String value) 设定属性的方法&nbsp;</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Configuration cfg=new Configuration();</div><div>cfg.setProperty(&quot;hibernate.connection.driver_class&quot;,&quot;com.mysql.jdbc.Driver&quot;);</div><div>cfg.setProperty(&quot;hibernate.connection.url&quot;,&quot;jdbc:mysql://localhost:3306/cityoa&quot;);</div></div><ul><ul><ul><li><div>SetProperties(Properties prors)&nbsp;可以通过集合对象Properties设置多个属性</div></li><li><div>addResource(String filename) 取得XML映射文件方法</div></li></ul><div>读取指定的XML方式的映射文件。cfg.addResource(&quot;com/city/oa/model/DepartmentModel.hbm.xml&quot;)</div><ul><li><div>addClass(Class class) 读取使用XML配置的映射Model类</div></li></ul><div>Hibernate根据Model类自动定位XML文件：同包下的类名.hbm.xml</div><div>cfg.addClass(DepartmentModel.class);</div><div>则自动读取：com/city/oa/model/DepartmentModel.hbm.xml</div><ul><li><div>addAnnotatedClass(Class model类)</div></li></ul><div>引入使用了注解类注释的Model类，读取映射信息cfg.addAnnotatedClass(DepartmentModel.class)</div></ul></ul><div>4.Hibernate配置方式的优先级</div><ul><ul><li><div>最低是属性文件配置方式。</div></li><li><div>中间是XML文件配置方式</div></li><li><div>最高级是编程方式配置</div></li><li><div>如果每种方式有相同的属性和配置值，则高级配置会覆盖低级配置的值。</div></li></ul></ul><div>5.Hibernate基本配置属性</div><ul><ul><li><div>Hibernate的配置属性主要分如下类别</div></li><ul><li><div>数据库连接配置。</div></li><li><div>数据库方言配置。</div></li><li><div>生成数据表配置。</div></li><li><div>显示生成SQL语句配置</div></li><li><div>事务处理的配置</div></li><li><div>Hibernate缓存的配置</div></li></ul><li><div>XML方式的配置案例：</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;session-factory&gt;</div><div>&lt;property name=&quot;connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div>&lt;property name=&quot;connection.url&quot;&gt;jdbc:mysql://localhost:3306/cityoa&lt;/property&gt;</div><div>&lt;property name=&quot;connection.username&quot;&gt;root&lt;/property&gt;</div><div>&lt;property name=&quot;connection.password&quot;&gt;root&lt;/property&gt;</div><div>&lt;property name=&quot;connection.pool_size&quot;&gt;1&lt;/property&gt;</div><div>&lt;/session-factory&gt;</div></div><ul><div>注意：Hibernate框架自带连接池框架，但是此连接池框架一般只用于测试，不推荐在实际项目中使用。实际项目应该使用其他第三方连接池框架如C3P0,Proxoool等。</div><ul><li><div>数据库方言配置属性</div></li></ul><div>Hibernate通过属性hibernate.dialect配置数据库的方言，根据配置的方言，Hibernate自动生成对应该数据库的SQL语句。因为不同数据库使用的SQL语法是有区别的。</div><div>方言的配置如下：</div><ul><ul><li><div>XML方式：</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;</div></div><div><br/></div><ul><ul><ul><li><div>属性文件方法</div></li></ul><div>hibernate.dialect=org.hibernate.dialect.MySQLDialect</div><ul><li><div>编程方式：</div></li></ul><div>cfg.setProperty(&quot;hibernate.dialect&quot;,&quot;org.hibernate.dialect.MySQLDialect&quot;);</div><li><div>Hibernate处理检索配置</div></li></ul><div>Hibernate对执行查询的操作也提供了批处理设定属性，用于提高Hibernate执行检索时的速度，这些属性的设定需要根据不同的数据库和服务器的内存情况进行设定，一般要在项目测试和运行过程中进行不断的调整，以达到最佳的处理性能。</div><ul><li><div>SQL日志追踪配置</div></li></ul><div>测试Hibernate应用时，经常需要查看Hibernate生成的SQL语句进行代码的检查和验证，Hibernate提供了生成SQL日志的选项属性。</div><ul><ul><li><div>XML方式:</div></li></ul><div>&lt;property name=&quot;show_sql&quot;&gt;true&lt;/property&gt;&lt;property name=&quot;format_sql&quot;&gt;true&lt;/property&gt;</div><ul><li><div>编程方式：</div></li></ul></ul><div>cfg.setProperty(&quot;hibernate.show_sql&quot;, &quot;true&quot;);</div><div>cfg.setProperty(&quot;hibernate.format_sql&quot;, &quot;true&quot;);</div><ul><li><div>缓存策略设定配置</div></li></ul></ul><div>&lt;!-- 开启二级缓存 --&gt;</div><div>&lt;property name=&quot;hibernate.cache.use_second_level_cache&quot;&gt;true&lt;/property&gt;</div><div>&lt;!-- 二级缓存的提供类 在hibernate4.0版本以后我们都是配置这个属性来指定二级缓存的提供类--&gt;</div><div>&lt;property name=&quot;hibernate.cache.region.factory_class&quot;&gt;org.hibernate.cache.ehcache.EhCacheRegionFactory&lt;/property&gt;</div><div>&lt;!-- 二级缓存配置文件的位置 --&gt;</div><div>&lt;property name=&quot;hibernate.cache.provider_configuration_file_resource_path&quot;&gt;oa.ehcache.xml&lt;/property&gt;</div><ul><ul><li><div>事务处理和并性控制</div></li><li><div>Hibernate配置数据库连接</div></li></ul><div>Hibernate配置的核心是数据库连接配置，Hibernate使用数据库完成持久化操作。</div><div>Hibernate内置了简单的连接池框架，一般实际项目推荐使用第三方连接池框架产品，以提高系统的性能，如C3P0，Proxool等，在Web应用中可以JavaEE Server配置的连接池，并通过JNDI方式配置使用此连接池。</div><ul><li><div>配置Hibernate内置的数据库连接</div></li></ul><div>使用Hibernate内置的连接池框架，直接配置如下属性即可：</div><div>(1)hibernate.connection.driver_class</div><div>(2)hibernate.connection.url</div><div>(3)hibernate.connection.username</div><div>(4)hibernate.connection.password</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.username : 连接数据库的用户名 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.username&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.password : 连接数据库的密码 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.password&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.url : 连接数据库的地址,路径 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3310/cityoa&lt;/property&gt;</div><div>注意：Hibernate内置的连接池框架性能较差，不适合在实际项目中使用，只用于测试代码</div></div><ul><ul><li><div>使用C3P0配置数据库连接</div></li><li style="margin-left: 15pt; margin-right: 0pt; text-indent: 0pt; font-size: 16pt;"><div>项目中引入C3P0 JAR类库，以及Hibernate C3P0集成类库</div></li></ul></ul><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;dependency&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;com.mchange&lt;/groupId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;c3p0&lt;/artifactId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;0.9.5.5&lt;/version&gt;</div><div>&lt;/dependency&gt;</div><div>&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-c3p0 --&gt;</div><div>&lt;dependency&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;hibernate-c3p0&lt;/artifactId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;5.4.11.Final&lt;/version&gt;</div><div>&lt;/dependency&gt;</div><div>&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</div><div>&lt;dependency&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;log4j&lt;/groupId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;log4j&lt;/artifactId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;1.2.17&lt;/version&gt;</div><div>&lt;/dependency&gt;</div><div>注意:需要加入新版的Log4j依赖库，否则启动出现异常。</div></div><ul><ul><ul><li><div>在Hibernate配置中加入C3P0属性即可</div></li></ul><div>hibernate.c3p0.max_size &nbsp;&nbsp;最大连接个数，默认：2</div><div>hibernate.c3p0.min_size &nbsp;&nbsp;最小连接个数：默认：2</div><div>hibernate.c3p0.timeout &nbsp;&nbsp;连接超时时间，默认：5000毫秒</div><div>hibernate.c3p0.max_statements &nbsp;&nbsp;最多执行的SQL语句限制，默认：100</div><div>hibernate.c3p0.idle_test_period 连接的空隙时间。默认： 3000，超过空隙自动关闭</div><div>hibernate.c3p0.acquire_increment &nbsp;每次当连接个数不足时，自动增加连接的个数，默认： 2</div><div>hibernate.c3p0.validate &nbsp;是否验证，默认： false</div></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;session-factory&gt;</div><div>&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.username : 连接数据库的用户名 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.username&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.password : 连接数据库的密码 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.password&quot;&gt;cityoa&lt;/property&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- hibernate.connection.url : 连接数据库的地址,路径 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3319/cityoa&lt;/property&gt;</div><div>&lt;property name=&quot;hibernate.c3p0.max_size&quot;&gt;10&lt;/property&gt;</div><div>&lt;property name=&quot;hibernate.c3p0.min_size&quot;&gt;2&lt;/property&gt;</div><div>&lt;property name=&quot;c3p0.timeout&quot;&gt;4000&lt;/property&gt;</div><div>...</div><div>&lt;/session-factory&gt;</div></div><ul><ul><div>&nbsp;</div><li><div>使用Proxool框架配置数据库连接池</div></li><ul><li><div>引入类库依赖和Hibernate Proxool依赖库</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;!-- https://mvnrepository.com/artifact/com.cloudhopper.proxool/proxool --&gt;</div><div>&lt;dependency&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;com.cloudhopper.proxool&lt;/groupId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;proxool&lt;/artifactId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;0.9.1&lt;/version&gt;</div><div>&lt;/dependency&gt;</div><div>&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-proxool --&gt;</div><div>&lt;dependency&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;hibernate-proxool&lt;/artifactId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;5.4.11.Final&lt;/version&gt;</div><div>&lt;/dependency&gt;</div></div><ul><ul><li><div>使用JavaEE Server内置配置的数据库连接池</div></li><ul><li><div>当Hibernate使用在Web应用时，JavaEE Server如Tomcat Server可以配置内置数据库连接池</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;property name=&quot;hibernate.jndi.url&quot;&gt;java:comp/env/cityoa&lt;/property&gt;</div></div><ul><ul><li><div>需要在Tomcat中事先配置好数据库连接池。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;Resource</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name=&quot;cityoa&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auth=&quot;Container&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type=&quot;javax.sql.DataSource&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driverClassName=&quot;com.mysql.jdbc.Driver&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxIdle=&quot;2&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxWait=&quot;5000&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=&quot;jdbc:mysql://localhost:3319/cityoa&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username=&quot;root&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password=&quot;root&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxActive=&quot;20&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAbandoned=&quot;true&quot;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAbandonedTimeOut=&quot;5&quot;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logAbandoned=&quot;true&quot;</div><div>/&gt;</div></div><hr/><div>Hibernate简单映射</div><ul><li><div>Hibernate Model类的规范要求</div></li><ul><li><div>Model类必须是顶级类，不能是子类。</div></li><li><div>Model类不能是final类。</div></li><li><div>推荐实现串行化接口</div></li></ul><li><div>Hibernate Mapping的原理</div></li><ul><li><div>Hibernate应用开发的关键就是配置映射信息，通过配置映射信息，使用Hibernate API操作Model类对象，Hibernate自动生成SQL，完成对数据库的操作。</div></li><li><div>Hibernate Mapping是指ORM的映射，通过Hibernate支持的映射机制实现Java Model类与关系数据库表的映射，以及属性到字段的映射。</div></li></ul><li><div>Hibernate的映射的内容</div></li><ul><li><div>Model类和表的映射</div></li><li><div>普通属性和字段的映射</div></li><li><div>主属性和PK字段的映射。</div></li><li><div>主属性值自动生成的策略映射。</div></li><li><div>关联属性与外键字段FK的映射。</div></li></ul><li><div>Hibernate映射的实现方式</div></li><ul><li><div>Java注解类映射方式</div></li></ul><div>此方式直接在Model类上增加注解类完成映射，不需要定义单独的映射文件。减少了项目的文件数量，简化的项目的维护。此方式是目前项目开发推荐的映射配置方式，新项目开发尽可能使用注解类方式实现映射配置。</div><ul><li><div>XML文件映射方式</div></li></ul><div>此方式是创建单独的XML映射配置文件完成ORM映射配置。缺点是增加了项目的文件数量，增加了项目的维护难度。优点是修改映射信息，不需要重新编译整个项目。</div><div>XML方式一般用于维护原来老版本的Hibernate的项目，新项目不推荐使用。</div></ul><div>Hibernate映射的注解类实现方式</div><ul><li><div>Hibernate框架直接使用JavaEE JPA（Java Persistence API）提供的注解类实现映射配置，当JPA提供的注解类无法满足需求时，Hibernate同时提供了自己的注解类，一般用于主键生成器的配置。一般映射使用JPA的注解类已经完成满足需求。</div></li><li><div>JPA提供的注解类都定义在javax.persistence包中，Hibernate依赖库已经包含JPA的依赖</div></li><li><div>JPA提供的映射注解类包括：</div></li></ul><div>Model类级别上使用的注解类</div><div>完成Model类和数据表的映射关系。</div><div>Model属性级别上使用的注解类</div><div>完成Model属性与表字段的映射关系。</div><div>（1）主属性映射注解类</div><div>（2）主键值生成器注解类</div><div>（3）普通属性注解类</div><div>（4）关联属性注解类</div><div>JPA提供的Model类映射注解类汇总（非关联映射）</div><ul><li><div>完成简单的非关联的映射，掌握如下注解类基本就可以了。</div></li><ul><li><div>1.@Entity &nbsp;（类级别）用于标识Hibernate管理的Model类，也称持久类</div></li><li><div>2.@Table &nbsp;（类级别）指定Model类关联的表</div></li><li><div>3.@Id &nbsp;&nbsp;（属性级别）指定主属性，即PK字段对应的属性</div></li><li><div>4.@Column （属性级别） 指定Model属性对应的表的字段</div></li><li><div>5.@Basic &nbsp;（属性级别） 标识普通属性</div></li><li><div>6.@GeneratedValue&nbsp;（属性级别） 放在主属性变量前，配置主键生成器</div></li><li><div>7.@Lob &nbsp;（属性级别）标识大对象属性，与表的大对象字段对应。包含文本大对象和二进制大对象</div></li></ul><li><div>Hibernate注解类实现映射的案例</div></li><ul><li><div>如下代码演示了使用注解类实现员工Model类的映射配置代码</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;EMPID&quot;)</div><div>private String id=null; //主属性 员工ID</div><div>@Basic(optional=false) //不能为空</div><div>@Column(name=&quot;EMPID&quot;)</div><div>private String password=null;</div><div>@Column(name=&quot;EMPNAME&quot;)</div><div>private String name=null;</div><div>@Column(name=&quot;EMPSEX&quot;)</div><div>private String sex=null;</div><div>private int age=0;</div><div>private double salary=0;</div><div>private Date birthday=null;</div><div>private Date joinDate=null;</div><div>@Lob</div><div>private byte[] photo=null; //员工照片</div><div>private String photoFileName=null; //照片文件名</div><div>private String photoContentType=null; //照片文件类型</div><div>&nbsp;&nbsp;&nbsp;//set和get方法省略</div><div>}</div></div><ul><li><div>Hibernate映射中Model类级别的注解类</div></li><ul><li><div>javax.persistence.Entity：用于Model类级别注解，指定该Model类是Hibernate管理的持久化类。此注解不能省略。</div></li></ul></ul><div><br/></div><div style="min-height: 21pt; text-align: justify;"><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_department&quot;,schema=”cityoa”) //实际的表名：cityoa.oa_employee</div><div>public class DepartmentModel implements Serializable {}</div><div>属性：name=”Model类名” ： 用于HQL中指定类的名称。</div></div><div><br/></div></div><ul><ul><li><div>javax.persistence.Table：使用在类级别，用于指定对应的表的名称。参见上面案例。</div></li><ul><li><div>String name: 指定表的名称</div></li><li><div>String catalog：指定表的catalog。很多数据库服务器将table按catalog进行分类。</div></li><li><div>String schema：指定表的方案，Oracle中表属于schema,对应Oracle的用户名。</div></li></ul><div>案例参考上面的代码。</div></ul><li><div>Hibernate映射中Model属性级别的注解类</div></li><ul><li><div>@Id：功能：使用在Model类的属性或属性变量前，用于指定该属性是与数据库表主键PK对应的属性，是主属性。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id</div><div>@GeneratedValue(strategy = GenerationType.IDENTITY)</div><div>@Column(name=&quot;DEPTNO&quot;)</div><div>private int no=0;</div></div><ul><ul><li><div>@Column：用于Model类属性或属性变量前，用于指定属性对应的表的字段。如果省略@Column注解，默认字段名就是属性名。</div></li><ul><li><div>String name：指定字段的名。</div></li><li><div>boolean nullable: 指定字段值是否允许为null，一般在数据库定义中指定此约束，不用在注解类中设置。</div></li><li><div>boolean unique：指定字段值是否唯一，一般也是在数据库表定义中定义此约束。</div></li><li><div>boolean updatable：指定该字段是否出现在生成的update语句中。</div></li><li><div>boolean insertable：指定该字段是否出现在生成的insert into语句中。</div></li><li><div>int length：指定字段的字符串长度，用于varchar类型字段。</div></li><li><div>int precision：指定浮点类型字段的有效位数。一般不用设置。</div></li><li><div>int scale：指定浮点类型字段的小数位数。一般不用设置。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Column(name=&quot;DEPTNAME&quot;,updatable=false)</div><div>private String name=null;</div><div>当使用update=false时，执行修改操作，在update语句中不会包含此字段，即此字段是不可修改的。</div><div>生成的SQL语句：Hibernate: update oa_department set DEPTCODE=? where DEPTNO=?</div><div>案例：</div><div>@Column(name=&quot;DESC&quot;, nullable=false, length=512)</div><div>public String description;</div><div>案例：</div><div>@Column(name=&quot;ORDER_COST&quot;, updatable=false, precision=12, scale=2)</div><div>public BigDecimal getCost() { return cost; }</div></div><ul><ul><li><div>@Basic：使用在非主键非外键对应的Model类属性或属性变量前，用于指定该属性是普通属性。即非主键，非外键。省略该注解类，则默认就是@Basic标注的属性。</div></li><ul><li><div>属性：</div></li><li><div>（1）FetchType fetch：指定该字段的检索策略。取值是javax.persistence.FetchType的枚举值，包括：FetchType.EAGER 立即检索，FetchType.LAZY 延迟检索。默认是EAGER。</div></li><li><div>（2）boolean optional：指示该属性的值是否可以为null。默认为true</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Basic(fetch=FetchType.LAZY,optional=false)</div><div>@Column(name=&quot;DEPTCODE&quot;)</div><div>private String code=null;</div></div><ul><ul><li><div>@Transient:用于属性变量前，指定该属性是临时属性，不进行持久化操作</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>public class Employee {</div><div>@Id</div><div>int id;</div><div>@Transient</div><div>User currentUser;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>}</div></div><ul><ul><li><div>@Lob:用于属性或属性变量前，指示该属性对应的表的字段是大对象数据类型，包括文本大对象或二进制大对象。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Lob</div><div>@Basic(fetch=FetchType.LAZY)</div><div>@Column(name=&quot;REPORT&quot;)</div><div>protected String report;</div><div>使用案例2：二进制大对象</div><div>@Lob @Basic(fetch=LAZY)</div><div>@Column(name=&quot;EMP_PIC&quot;, columnDefinition=&quot;BLOB NOT NULL&quot;)</div><div>protected byte[] pic;</div></div><ul><li><div>使用注解类方式实现映射的配置文件</div></li><ul><li><div>使用XML配置文件方式</div></li></ul><div>对于使用注解类方式实现映射的情况下，在Hibernate配置文件中需要引入有注解类的Model类，使用&lt;mapping class=”类”&nbsp;&gt;</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-configuration PUBLIC</div><div>&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</div><div>&quot; http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;</div><div>&lt;hibernate-configuration&gt;</div><div>&lt;session-factory&gt;</div><div>&lt;property name=&quot;connection.driver_class&quot;&gt;org.h2.Driver&lt;/property&gt;</div><div>&lt;property name=&quot;connection.url&quot;&gt;jdbc:h2:file:./chapter2&lt;/property&gt;</div><div>&lt;property name=&quot;connection.username&quot;&gt;sa&lt;/property&gt;</div><div>&lt;property name=&quot;connection.password&quot;&gt;&lt;/property&gt;</div><div>&lt;property name=&quot;dialect&quot;&gt;org.hibernate.dialect.H2Dialect&lt;/property&gt;</div><div>&lt;property name=&quot;hbm2ddl.auto&quot;&gt;create&lt;/property&gt;</div><div>&lt;property name=&quot;show_sql&quot;&gt;true&lt;/property&gt;</div><div>&lt;!-- 引入注解类映射Model类 --&gt;</div><div>&lt;mapping class=&quot;com.city.oa.model.DepartmentModel&quot;/&gt;</div><div>&lt;mapping class=&quot;com.city.oa.model.EmployeeModel&quot;/&gt;</div><div>&lt;/session-factory&gt;</div><div>&lt;/hibernate-configuration&gt;</div><div>目前Hibernate只能指定单独的Model类，引入多个需要重复使用&lt;mapping class=”” /&gt;</div></div><ul><li><div>编程方式配置</div></li></ul><div>Configuration cfg=new Configuration();</div><div>cfg.addAnnotatedClass(DepartmentModel.class);</div><div>cfg.addAnnotatedClass(EmployeeModel.class);</div><div>Hibernate映射配置XML文件实现方式</div><ul><li><div>Hibernate支持使用单独的XML文件实现ORM映射。</div></li></ul><div>推荐为每个Model类创建一个单独的映射配置文件。</div><ul><li><div>XML映射配置文件命名与存储</div></li><ul><li><div>推荐使用：Model类名.hbm.xml</div></li></ul></ul><div>保存在与Model类项目的包下，Hibernate支持这种模式的文件的自动定位。</div><div>也可以保存在项目的任意路径下</div><ul><ul><li><div>XML映射配置方式常用的标记</div></li><ul><li><div>简单映射情况下需要掌握的标记如下：</div></li><li><div>&lt;hibernate-mapping&gt; 开始映射配置</div></li><li><div>&lt;class&gt;&nbsp; 配置Model类与表的映射</div></li><li><div>&lt;id&gt; 配置主属性，与PK自动映射</div></li><li><div>&lt;generator&gt; 主键生成器配置</div></li><li><div>&lt;property&gt;&nbsp; 普通属性映射（非主键，非外键字段）</div></li></ul><li><div>XML文件方式映射配置案例</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-mapping PUBLIC</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;&gt;</div><div>&lt;hibernate-mapping package=&quot;com.city.oa.model&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;class name=&quot;DepartmentModel&quot; table=&quot;OA_Department&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id name=&quot;no&quot; column=&quot;DEPTNO&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;generator class=&quot;native&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/id&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;code&quot; column=&quot;DEPTCODE&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;name&quot; column=&quot;DEPTNAME&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/class&gt;</div><div>&lt;/hibernate-mapping&gt;</div></div><ul><li><div>Hibernate映射XML方式的详解（非关联映射）</div></li><ul><li><div>&lt;hibernate-mapping&gt;:定义映射开始</div></li><ul><li><div>package：指定Model类默认的包名，Model类直接使用类名即可，无需使用类全名。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>定义配置的默认包</div><div>&lt;hibernate-mapping package=&quot;com.city.oa.model&quot;&gt;</div><div>&lt;class name=&quot;DepartmentModel&quot; table=&quot;oa_department&quot;&gt;</div><div>...</div><div>&lt;/class&gt;</div><div>&lt;/hibernate-mapping&gt;</div></div><ul><ul><li><div>&lt;class&gt;:用于Model类与表的映射</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;class&nbsp;&nbsp;name=&quot;ClassName&quot; table=&quot;tableName&quot; discriminator-value=&quot;discriminator_value&quot;</div><div>mutable=&quot;true|false&quot; schema=&quot;owner&quot; catalog=&quot;catalog&quot; proxy=&quot;ProxyInterface&quot;</div><div>dynamic-update=&quot;true|false&quot; dynamic-insert=&quot;true|false&quot; select-before-update=&quot;true|false&quot;</div><div>polymorphism=&quot;implicit|explicit&quot; where=&quot;arbitrary sql where condition&quot;</div><div>persister=&quot;PersisterClass&quot; batch-size=&quot;N&quot; optimistic-lock=&quot;none|version|dirty|all&quot;</div><div>lazy=&quot;true|false&quot;&nbsp;&nbsp;entity-name=&quot;EntityName&quot;</div><div>check=&quot;arbitrary sql check condition&quot;</div><div>rowid=&quot;rowid&quot;&nbsp;&nbsp;subselect=&quot;SQL expression&quot; abstract=&quot;true|false&quot;&nbsp;&nbsp;node=&quot;element-name&quot;</div><div>/&gt;</div></div><ul><ul><ul><li><div>主要属性说明：</div></li><ul><li><div>name: 类全名称，包名.类名， 如果&lt;hibernate-mapping&gt;指定了package, 可以是类名。</div></li><li><div>table:表名称</div></li><li><div>mutable：true|false 是否是可更改的. true 可更改</div></li><li><div>dynamic-update：true|false 生成update 语句时是否包含未修改值的字段</div></li><li><div>dynamic-insert：true|false, 生成insert语句时是否包含null字段。</div></li><li><div>lazy：指定是否延迟检索, 指定除主属性之外其他属性是否延迟检索。</div></li></ul></ul><li><div>&lt;id&gt;标记:配置主键PK对应的属性的映射。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;id</div><div>name=&quot;propertyName&quot;</div><div>type=&quot;typename&quot;</div><div>column=&quot;column_name&quot;</div><div>unsaved-value=&quot;null|any|none|undefined|id_value&quot;</div><div>access=&quot;field|property|ClassName&quot;&gt;</div><div>node=&quot;element-name|@attribute-name|element/@attribute|.&quot;</div><div>&lt;generator class=&quot;generatorClass&quot;/&gt;</div><div>&lt;/id&gt;</div></div><ul><ul><ul><li><div>name：指定Model类的属性</div></li><li><div>column: 指定属性对应的PK的字段名。</div></li></ul><li><div>&lt;propery&gt;标记:映射普通属性，即非主键和非外键字段对应的属性。主键属性使用&lt;id&gt;映射，而外键字段对应的是Model对象，不是普通属性，而是关联对象属性。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;property</div><div>name=&quot;propertyName&quot;</div><div>column=&quot;column_name&quot;</div><div>type=&quot;typename&quot;</div><div>update=&quot;true|false&quot;</div><div>insert=&quot;true|false&quot;</div><div>formula=&quot;arbitrary SQL expression&quot;</div><div>access=&quot;field|property|ClassName&quot;</div><div>lazy=&quot;true|false&quot;</div><div>unique=&quot;true|false&quot;</div><div>not-null=&quot;true|false&quot;</div><div>optimistic-lock=&quot;true|false&quot;</div><div>generated=&quot;never|insert|always&quot;</div><div>node=&quot;element-name|@attribute-name|element/@attribute|.&quot;</div><div>index=&quot;index_name&quot;</div><div>unique_key=&quot;unique_key_id&quot;</div><div>length=&quot;L&quot;</div><div>precision=&quot;P&quot;</div><div>scale=&quot;S&quot;</div><div>/&gt;</div><div>常用属性：</div><div>name：指定属性的名称</div><div>column：属性对应的字段名</div><div>type: Hibernate类型</div><div>update: true|false, 是否包含在生成的update语句中</div><div>insert: true|false&nbsp;&nbsp;是否包含在生成的insert 语句中</div><div>lazy:true|false 是否是延迟检索</div><div>unique:true|false 值是否唯一</div><div>普通属性映射标记&lt;property&gt;的配置案例：</div><div>&lt;property name=&quot;description&quot; column=&quot;DESCRIPTION&quot; type=&quot;string&quot;/&gt;</div><div>&lt;property name=&quot;description&quot; column=&quot;DESCRIPTION&quot;/&gt;</div><div>&lt;property name=&quot;lastModified&quot; column=&quot;LAST_MODIFIED&quot; update=&quot;false&quot; insert=&quot;false&quot; generated=&quot;always&quot;/&gt;</div><div>&lt;property name=&quot;description&quot; column=&quot;DESCRIPTION&quot; type=&quot;string&quot;/&gt;</div></div><ul><li><div>Hibernate配置引入XML映射文件</div></li><ul><li><div>Hibernate属性配置方式无法引入XML映射配置文件。只能在XML配置文件或Java配置类中实现。</div></li><li><div>XML配置方式\</div></li></ul><div>当使用XML方式实现Model映射时，在Hibernate的默认配置文件hibernate.cfg.xml中需要使用&lt;mapping resource=”XML映射文件”&nbsp;/&gt;&lt;mapping resource=&quot;com/city/oa/model/DepartmentModel.hbm.xml&quot;/&gt;</div><ul><li><div>Java编程方式引入XML映射文件</div></li><ul><li><div>Hibernate配置类Configuration，提供了引入映射类的方法addResource, 可以引入单独的XML映射文件。cfg.addResource(&quot;com/city/oa/model/DepartmentModel.hbm.xml&quot;);</div></li><li><div>通过addClass(Model类)方法引入XML映射配置，此时需要映射文件必须命名为：Model类名.hbm.xml，并且存储在与Model类响应的包中。</div></li><li><div>cfg.addClass(DepartmentModel.class);</div></li><li><div>此时自动引入映射文件：DepartmentModel.hbm.xml</div></li></ul></ul></ul><div>Hibernate 第03-2讲 Hibernate主键生成器</div><div>主键生成器概述</div><ul><li><div>Hibernate主键生成器概念</div></li></ul><div>Hibernate主键生成器是负责生成Model类对应表的主键（PK）字段值的机制。</div><div>Hibernate提供了各种生成主键值生成器类型，根据应用的实际需要选择不同的主键生成器，是设计Hibernate应用的一个关键因素。</div><ul><li><div>项目中表的主键字段的设计原则</div></li><ul><li><div>所有的表必须有主键字段，主键字段的值来唯一确定实体实例，即记录，对应到Model类即Model类的对象，Hibernate通过主属性来决定一个唯一的Model类对象。</div></li><li><div>在设计表的主键字段时，尽可能使用代理主键。代理主键的含义是主键在定义实体对象时，没有任何实际意义，只是一个能自动增量的序列号。</div></li><li><div>主键字段的类型尽可能是整数类型</div></li></ul><li><div>Hibernate主键生成器功能:为主属性和主键字段生成值。</div></li><ul><li><div>绝大部分主键生成器都是自动生成主键值，只有一种assigned类型的主键生成器不自动生成主键值。</div></li></ul><li><div>Hibernate主键生成器类型</div></li></ul><div>根据主键生成器生成值的方式，Hibernate支持3大类的主键生成器，每种类型中又包含若干个具体的主键生成器。</div><ul><ul><li><div>数据库负责值生成的主键生成器：依靠连接的数据库负责完成主键值的生成，Hibernate本身不参与值的生成。即主键的值由数据库生成</div></li><li><div>Hibernate框架内置的负责主键值生成的生成器：主键值的生成由Hibernate框架提供的算法完成。</div></li><li><div>应用程序负责主键值生成的生成器：此种生成器模式下，由应用程序自己确定主键的值，一般是用户输入主键值，通过控制层，业务层，传递给Hibernate，写入到数据库中。</div></li></ul><li><div>数据库负责主键值生成的生成器类型</div></li></ul><div>Hibernate提供了如下类型的生成器，这些生成器由数据库负责生成主键值。</div><ul><ul><li><div>identity：数据库的自增量字段</div></li><li><div>sequence 序列：支持有序列的数据库，如Oracle</div></li><li><div>guid：由数据库生成UUID编码。</div></li><li><div>native：让数据库自己选择合适的主键生成器</div></li><li><div>select</div></li></ul><li><div>Hibernate负责主键值生成的生成器类型</div></li><ul><li><div>(1)increment</div></li><li><div>(2)hilo</div></li><li><div>(3)seqhilo</div></li><li><div>(4) uuid</div></li><li><div>(5) foreign</div></li><li><div>Hibernate执行一对一关系时通过查询语句获取。</div></li><li><div>sequence-identity</div></li></ul><li><div>应用程序自己负责的主键生成器</div></li></ul><div>应用程序负责的主键生成器只有一种。</div><ul><ul><li><div>assigned:此主键生成器是默认的主键生成器，当在Hibernate映射Model类时，如果没有指定其他类型的主键生成器，则默认使用assigned主键生成器。</div></li></ul><li><div>Hibernate主键生成器的配置方式</div></li></ul><div>Hibernate的主键值生成器配置一般与Hibernate映射配置一起完成。因此根据映射的配置方式，主键值生成器的配置也是可以通过如下2种方式完成</div><ul><ul><li><div>Java Annotation配置方式</div></li></ul><div>JPA提供了常用的生成器配置的注解类，对于一些复杂的生成器配置，在JPA注解类之外，Hibernate框架提供了扩充的注解类用于生成器的配置。</div><ul><li><div>XML文件配置方式。</div></li></ul><div>在XML映射配置文件中，在主键配置标记&lt;id&gt;中提供了子标记&lt;generator&gt;用于配置各种主键生成器。</div></ul><div>注解类方式配置注解生成器</div><ul><li><div>JPA提供的主键生成器注解类</div></li><ul><li><div>JPA提供了主键生成器的注解类 @GeneratedValue，用于Model类中的主属性前面映射中配置主键生成器。该注解类的属性strategy用于确定主键生成器类型，其使用语法如下：</div></li></ul><div>@Id</div><div>@GeneratedValue(strategy=GenerationType.生成器类型值)</div><div>private 类型 主属性变量=初值;</div><div>JPA提供了枚举类GenerationType定义了JPA支持的主键生成器类型。该枚举类的取值：GenerationType.AUTO,IDENTITY，SEQUENCE，TABLE。</div><ul><ul><li><div>支持数据库的自增量字段的主键生成器：GenerationType.IDENTITY</div></li><ul><li><div>使用自增长主键生成策略是只需要声明strategy = GenerationType.IDENTITY即可。</div></li><li><div>配置案例：</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id&nbsp;&nbsp;</div><div>@GeneratedValue(strategy = GenerationType.IDENTITY)&nbsp;&nbsp;</div><div>@Column(name=&quot;DEPTNO&quot;)</div><div>private int no=0;</div></div><ul><ul><ul><li><div>支持数据库的序列的主键生成器：GenerationType.SEQUENCE</div></li><ul><li><div>使用该序列主键生成器，需要另一个JPA的注解类@SequenceGenerator配合完成。</div></li></ul></ul></ul></ul><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id&nbsp;&nbsp;</div><div>@GeneratedValue(strategy = GenerationType.SEQUENCE,generator=&quot;dept_seq&quot;)&nbsp;&nbsp;</div><div>@SequenceGenerator(name=&quot;dept_seq&quot;, sequenceName=&quot;SQ_DEPT&quot;)</div><div>@Column(name=&quot;DEPTNO&quot;)</div><div>private int no=0;</div><div>案例中，通过@SequenceGenerator定义序列生成器，属性sequenceName指定数据库的序列， name指定序列生成器的名称，供@GeneratedValue使用。</div></div><div><br/></div><ul><ul><ul><li><div>支持数据库自动选择的主键生成器：GenerationType.AUTO，自动选择JPA支持的3种策略的一种。</div></li><ul><li><div>由于JPA默认的生成策略就是GenerationType.AUTO,所以使用此种策略时.可以显式的指定@GeneratedValue(strategy = GenerationType.AUTO)也可以直接使用@GeneratedValue，不指定strategy属性值即可。</div></li></ul><li><div>GenerationType.TABLE：使用一个特定的数据库表格来保存主键,</div></li></ul><li><div>除JPA提供的主键生成器之外的生成器配置</div></li><ul><li><div>可以配置Hibernate支持的各种主键生成器，我们可以根据实际项目需要进行选择。（推荐尽可能选择JPA提供的生成器类型）</div></li><li><div>这些生成器的配置方式是使用Hibernate提供的注解类@GenericGenerator先声明Hibernate支持的生成器类型，再使用@GeneratedValue注解类引用即可。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@GenericGenerator(name = &quot;生成器名称&quot;, strategy = &quot;生成器类型&quot;)</div><div>@GeneratedValue(generator = &quot;生成器名称&quot;)</div></div><ul><ul><ul><li><div>increment 主键生成器：该增量类型的生成器是使用“select max(PK字段)+1 from 表 ”的查询语句取得当前主键的最大值加1算法，为新记录的PK字段设置新值。在Web等多线程应用中无法保证PK值的唯一性。不推荐使用，了解即可。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id</div><div>@GeneratedValue(generator = &quot;department_increment&quot;)</div><div>@GenericGenerator(name = &quot;department_increment&quot;, strategy = &quot;increment&quot;)</div><div>@Column(name=”DEPTNO”)</div><div>private int no=0;</div></div><ul><ul><ul><li><div>UUID 主键生成器：Hibernate支持的UUID生成器配置</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id</div><div>@Column(name=&quot;EMPID&quot;)</div><div>@GeneratedValue(generator = &quot;EMPID_UUID&quot;)</div><div>@GenericGenerator(name = &quot;EMPID_UUID&quot;, strategy = &quot;uuid&quot;)</div><div>private String id=null;</div><div>此生成器要求主键字段必须是VARCHAR类型， Model类对应属性应该是String类型。</div></div><ul><ul><ul><li><div>native：对于orcale采用Sequence方式，对于MySQL和SQL Server采用identity(处境主键生成机制)，native就是将主键的生成工作将由数据库完成，hibernate不管（不常用）</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id</div><div>@GeneratedValue(generator = &quot;DEPT_ID&quot;)</div><div>@GenericGenerator(name = &quot;DEPT_ID&quot;, strategy = &quot;native&quot;)</div><div>private int no=0;</div></div><ul><ul><ul><li><div>assigned：在插入数据的时候主键由程序处理（很常用），这是&lt;generator&gt;元素没有指定时的默认生成策略</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Id</div><div>@GeneratedValue(generator = &quot;paymentableGenerator&quot;)</div><div>@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;assigned&quot;)</div><div>private String id=null;</div><div>此生成器是唯一需要程序设定主键值的。 没有配置主键生成器时，是默认的类型。</div><div>与下面等价：</div><div>@Id</div><div>private String id=null;</div></div><ul><ul><ul><li><div>identity：使用SQL Server和MySQL的自增字段，这个方法不能放到Oracle中，Oracle不支持自增字段，要设定sequence(MySQL和SQL Server中很常用)。等同于JPA中的IDENTITY</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@GeneratedValue(generator = &quot;paymentableGenerator&quot;)</div><div>@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;identity&quot;)</div></div><ul><ul><ul><li><div>guid：采用数据库底层的guid算法机制，对应MySQL的uuid()函数，SQL Server的newid()函数，ORCALE的rawtohex(sys_guid())函数等。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@GeneratedValue(generator = &quot;paymentableGenerator&quot;)</div><div>@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;guid&quot;)</div><div>执行时，先运行数据库提供的uuid函数。</div><div>Hibernate: select uuid()</div><div>Hibernate: insert into oa_employee (age, birthday, CARDCODE, joinDate, mail, mobile, EMPNAME, EMPPASSWORD, photo, photoContentType, photoFileName, salary, EMPSEX, EMPID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)</div></div><div>XML方式配置主键值生成器</div><ul><li><div>XML方式配置主键生成器的语法</div></li><ul><li><div>配置的位置：在Model类的映射配置文件中配置主键生成器。Model类名.hbm.xml</div></li><li><div>配置的语法：</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>使用主属性映射配置标记&lt;id&gt;的子标记&lt;generator&gt;</div><div>&lt;id&nbsp;&nbsp;name=”” column=””&gt;</div><div>&nbsp;&nbsp;&lt;generator class=&quot;Hibernate生成器类型&quot;/&gt;</div><div>&lt;/id&gt;</div><div>&lt;id&nbsp;&nbsp;name=”” column=””&gt;</div><div>&nbsp;&nbsp;&lt;generator class=&quot;Hibernate生成器类型&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;param name=”参数名”&gt;参数值&lt;/param&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&lt;/generator&gt;</div><div>&lt;/id&gt;</div></div><ul><li><div>数据库负责主键值生成的生成器配置</div></li><ul><li><div>identity主键值生成器：支持自增量字段的数据库：DB2，MySQL，SQL Server，Sybase等。要求的主键类型是long, int, short。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;id name=&quot;id&quot; type=&quot;long&quot; column=&quot;person_id&quot; unsaved-value=&quot;0&quot;&gt;</div><div>&lt;generator class=&quot;identity&quot;/&gt;</div><div>&lt;/id&gt;</div><div>配置的案例：DepartmentModel.hbm.xml</div><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-mapping PUBLIC</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;&gt;</div><div>&lt;hibernate-mapping package=&quot;com.city.oa.model&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;class name=&quot;DepartmentModel&quot; table=&quot;OA_Department&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id name=&quot;no&quot; column=&quot;DEPTNO&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;generator class=&quot;indentity&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/id&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;code&quot; column=&quot;DEPTCODE&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;name&quot; column=&quot;DEPTNAME&quot; update=&quot;false&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/class&gt;</div><div>&lt;/hibernate-mapping&gt;</div></div><ul><ul><li><div>sequence主键值生成器：通过数据库的序列完成主键值的生成，对于DB支持序列，</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>1．XML配置语法</div><div>&lt;id column=&quot;MY_ID&quot;&gt;</div><div>&lt;generator class=&quot;sequence&quot;&gt;</div><div>&lt;param name=&quot;sequence&quot;&gt;MY_SEQUENCE&lt;/parameter&gt;</div><div>&lt;param name=&quot;parameters&quot;&gt;</div><div>INCREMENT BY 1 START WITH 1</div><div>&lt;/parameter&gt;</div><div>&lt;/generator&gt;</div><div>&lt;/id&gt;</div><div>案例2：</div><div>&lt;id name=&quot;id&quot; type=&quot;long&quot; column=&quot;person_id&quot;&gt;</div><div>&lt;generator class=&quot;sequence&quot;&gt;</div><div>&lt;param name=&quot;sequence&quot;&gt;person_id_sequence&lt;/param&gt;</div><div>&lt;/generator&gt;</div><div>&lt;/id&gt;</div></div><ul><ul><li><div>native主键值生成器</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>XML映射案例</div><div>&lt;id name=&quot;id&quot; type=&quot;long&quot; column=&quot;person_id&quot; unsaved-value=&quot;0&quot;&gt;</div><div>&lt;generator class=&quot;native&quot;/&gt;</div><div>&lt;/id&gt;</div></div><ul><ul><li><div>select生成器</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>案例：使用触发器生成主键值。</div><div>&lt;id name=&quot;id&quot; type=&quot;long&quot; column=&quot;person_id&quot;&gt;</div><div>&lt;generator class=&quot;select&quot;&gt;</div><div>&lt;param name=&quot;key&quot;&gt;socialSecurityNumber&lt;/param&gt;</div><div>&lt;/generator&gt;</div><div>&lt;/id&gt;</div><div>socialSecurityNumber为触发器名称</div></div><ul><ul><li><div>guid&nbsp;生成器</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>GUID：Globally Unique Identifier全球唯一标识符，也称作 UUID，是一个128位长的数字，用16进制表示。算法的核心思想是结合机器的网卡、当地时间、一个随即数来生成GUID。从理论上讲，如果一台机器每秒产生10000000个GUID，则可以保证（概率意义上）3240年不重复配置代码：</div><div>&lt;id name=&quot;id&quot; column=&quot;EMPID&quot;&gt;</div><div>&lt;generator class=&quot;guid&quot; /&gt;</div><div>&lt;/id&gt;</div><div>Hibernate在维护主键时，先查询数据库，获得一个uuid字符串，该字符串就是主键值，该值唯一，缺点长度较大，支持数据库有限，优点同uuid，跨数据库，但是仍然需要访问数据库。</div><div>注意：长度因数据库不同而不同</div><div>MySQL中使用select uuid()语句获得的为36位（包含标准格式的“-”）</div><div>Oracle中，使用select rawtohex(sys_guid()) from dual语句获得的为32位（不包含“-”）</div><div>特点：需要数据库支持查询uuid，生成时需要查询数据库，效率没有uuid高，推荐使用uuid。</div></div><ul><li><div>Hibernate负责主键值生成的生成器配置</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Hibernate通过计算表主键字段的最大值，作为新记录的主键值。</div><div>执行的算法是：select max(pk)+1 from 对象表</div><div>&lt;id column=&quot;ISBN&quot; type=&quot;long&quot;&gt;</div><div>&lt;generator class=&quot;increment&quot;&gt;</div><div>&lt;/generator&gt;</div><div>&lt;/id&gt;</div><div>此类型生成器不能使用在多线程环境中。很少使用，不推荐使用。</div><div>2.UUID</div><div>用一个128-bit的UUID算法生成字符串类型的标识符。在一个网络中唯一（使用了IP地址）。UUID被编码为一个32位16进制数字的字符串。</div><div>XML配置：</div><div>&lt;id name=&quot;id&quot; type=&quot;string&quot; column=&quot;EMP_id&quot;&gt;</div><div>&lt;generator class=&quot;uuid&quot;/&gt;</div><div>&lt;/id&gt;</div><div>3.hilo生成器</div><div>uses a hi/lo algorithm to efficiently generate identifiers of type long, short or int, given a table and column (by default hibernate_unique_key and next_hi respectively) as a source of hi values. The hi/lo algorithm generates identifiers that are unique only for a particular database.</div><div>案例配置代码：</div><div>&lt;id name=&quot;id&quot; type=&quot;long&quot; column=&quot;cat_id&quot;&gt;</div><div>&lt;generator class=&quot;hilo&quot;&gt;</div><div>&lt;param name=&quot;table&quot;&gt;hi_value&lt;/param&gt;</div><div>&lt;param name=&quot;column&quot;&gt;next_value&lt;/param&gt;</div><div>&lt;param name=&quot;max_lo&quot;&gt;100&lt;/param&gt;</div><div>&lt;/generator&gt;</div><div>&lt;/id&gt;</div><div>注：Unfortunately, you cannot use hilo when supplying your own Connection to Hibernate</div><div>【】应用程序自己负责值生成的生成器配置</div><div>Hibernate只提供1种此类型生成器，名称为：assigned。</div><div>此生成器由应用程序决定主键的值，Hibernate框架不会自动生成</div><div>不指定&lt;generator&gt;元素，则默认使用assigned生成器。</div><div>&lt;id name=&quot;id&quot; column=&quot;EMPID&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;generator class=&quot;assigned&quot; /&gt;</div><div>&lt;/id&gt;</div><div>与未指定的映射等价：</div><div>&lt;id name=&quot;id&quot; column=&quot;EMPID&quot; /&gt;</div></div><hr/><div>Hibernate关联映射- 多对一和一对多</div><hr/><div>对象世界类间关系和关系世界实体间关系的类型</div><ul><li><div>对象世界的类间关系的类型</div></li><ul><li><div>依赖关系：依赖关系是一种使用关系,特定事物的改变有可能会影响到使用该事物的其他事物,在需要表示一个事物使用另一个事物时使用依赖关系.</div></li></ul><div>大多数情况下,依赖关系体现在某个类的方法使用另一个类的对象作为参数.</div><div>在UML中,依赖关系用带箭头的虚线表示,由依赖的一方指向被依赖的一方.</div><ul><ul><li><div>依赖关系有如下三种情况：</div></li><ul><li><div>A类是B类中的（某中方法的）局部变量；</div></li><li><div>A类是B类方法当中的一个参数；</div></li><li><div>A类向B类发送消息，从而影响B类发生变化；</div></li><li><div>如下三种情况任何一种成立，均构成依赖关系，即B依赖A。</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public class A {</div><div>}</div><div>public class B {</div><div>&nbsp;&nbsp;Public void m1(){</div><div>&nbsp;&nbsp;&nbsp;A a=new A()</div><div>}</div><div>}</div><div>public void m2(A a){}</div><div>public A create(){</div><div>&nbsp;&nbsp;return new A();</div><div>}</div><div>}</div></div><div>UML表达：</div><div><en-media hash="407cdb693021a953f9baf76b619538f9" type="image/png"/></div><div>图中司机类Driver，依赖Car类。</div><ul><ul><li><div>继承关系:继承关系，也称为“is-a-kind-of”关系，泛化关系用于描述父类与子类之间的关系，父类又称作基类或超类，子类又称作派生类。在UML中，泛化关系用带空心三角形的直线来表示。</div></li></ul></ul><div><en-media hash="e3adb596faf3b1de553136fd341beca4" type="image/png"/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>class Person</div><div>{</div><div>public:</div><div>&nbsp;&nbsp;&nbsp;&nbsp;void talk(){}</div><div>};</div><div>class Teacher extends Person</div><div>{</div><div>public:</div><div>&nbsp;&nbsp;&nbsp;&nbsp;void teach(){}</div><div>};</div></div><ul><ul><li><div>实现关系:实现指的是一个Class类实现interface接口（可以是多个）的功能，实现是类与接口之间最常见的关系。在java中实现关系通过implements明确标识，在设计时一般没有争议性。在UML类图设计中，实现用一条带空心三角箭头的虚线表示，从类指向实现的接口。</div></li></ul></ul><div><en-media hash="de409da399f197fd024d94329968d148" type="image/png"/></div><div>public interface IA {}</div><div>public class AImpl implements IA {}</div><ul><ul><li><div>关联关系:类之间的联系，如客户和订单，每个订单对应特定的客户，每个客户对应一些特定的订单，再如篮球队员与球队之间的关联.&nbsp;</div></li></ul><div>Hibernate持久类只关注关联关系，通过类的关联关系实现对关联表在的操作</div><ul><ul><li><div>是类与类之间最常用的一种关系，它是一种结构化关系，用于表示一类对象与另一类对象之间有联系。</div></li><li><div>在UML类图中，用实线连接有关联的对象所对应的类，在使用Java、C#和C++等编程语言实现关联关系时，通常将一个类的对象作为另一个类的属性。</div></li><li><div>在使用类图表示关联关系时可以在关联线上标注角色名。</div></li><ul><li><div>双向关联: 默认情况下，关联是双向的</div></li></ul><div><en-media hash="674f2777961e1d8a930189e52855ff66" type="image/png"/></div></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>class Customer{};</div><div>class Product</div><div>{</div><div>private Customer customer=null; //对一</div><div>};</div><div>class Customer</div><div>{</div><div>private List&lt;Product&gt; products; //对多</div><div>};</div></div><ul><ul><ul><ul><li><div>单向关联:类的关联关系也可以是单向的，单向关联用带箭头的实线表示.</div></li></ul></ul></ul></ul><div><en-media hash="ba6f4e14d624e0442e349c6be446ec85" type="image/png"/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>class Address</div><div>{</div><div>};</div><div>class Customer</div><div>{</div><div>private Address address;</div><div>};</div></div><ul><div><br/></div><ul><ul><ul><li><div>&nbsp;自关联: 在系统中可能会存在一些类的属性对象类型为该类本身，这种特殊的关联关系称为自关联</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>class Dir</div><div>{</div><div>private&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dir dir;</div><div>};</div></div><ul><ul><ul><ul><li><div>重数性关联: 重数性关联关系又称为多重性关联关系，表示一个类的对象与另一个类的对象连接的个数。在UML中多重性关系可以直接在关联直线上增加一个数字表示与之对应的另一个类的对象的个数。</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>class Widget</div><div>{</div><div>private&nbsp;&nbsp;&nbsp;&nbsp;View&nbsp;&nbsp;parent;</div><div>};</div><div>class View</div><div>{</div><div>Private List&lt;Widget&gt; widgets;</div><div>};</div></div><ul><ul><ul><ul><li><div>聚合关系:聚合是关联关系的一种特例，它体现的是整体与部分的关系，即has-a的关系。此时整体与部分之间是可分离的，它们可以具有各自的生命周期，部分可以属于多个整体对象，也可以为多个整体对象共享。比如计算机与CPU、公司与员工的关系等，比如一个航母编队包括航空母舰、驱逐护卫舰、舰载飞机及核动力攻击潜艇等。表现在代码层面，和关联关系是一致的，只能从语义级别来区分。在UML类图设计中，聚合关系以空心菱形加实线箭头表示。</div></li><li><div>组合关系:组合也是关联关系的一种特例，它体现的是contains-a的关系，这种关系比聚合更强，也成为强聚合。它同样体现整体与部分间的关系，但此时整体与部分是不可分的，整体的生命周期结束也就意味着部分的生命周期结束，比如人和人的大脑。表现在代码层面，和关联关系是一致的，只能从语义级别来区分。在UML类图设计中，组合关系以实心菱形加实线箭头表示。</div></li></ul></ul></ul><li><div>关系世界的实体间的关系类:关系数据库中只有实体间的关联关系。</div></li><ul><li><div>RDDMS中只有一种实现关联关系，就是使用外键(Foreign Key- FK).</div></li></ul><li><div>关系型数据库实体间有三种关联关系：多对一，一对多，多对多，一对一。</div></li><ul><li><div>多对一和一对多</div></li><ul><li><div>如果二个表之间，如果一个表有外键字段FK，指向另一个表的主键字段PK，双方构成多对一和一对多关联关系。如下部门和员工表中，员工表有外键字段DEPTNO指向部门表的主键字段DEPTNO。</div></li><li><div>其中FK字段所在的表是多方，PK字段所在的表是一方。则部门是一方，员工是多方。</div></li></ul><li><div>多对多关联关系</div></li><ul><li><div>外键只能表达多对一，要表达多对多，需要使用关联表，将多对多关系拆分为2个多对一。</div></li></ul><li><div>一对一关联关系：在关系数据库中，一对一关联关系的表达可以使用如下二种方式实现：</div></li><ul><li><div>一个表的主键字段同时做外键，指向另一个表的PK字段。</div></li></ul><div>下面员工地址表中，主键字段EMPID，既是主键PK，也是外键FK，指向员工表的主键EMPID， 则员工表和地址表就构成一对一关联关系。</div></ul></ul><div><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>create table oa_employeeaddress</div><div>(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPID varchar(20) primary key references oa_employee(EMPID),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;CITY varchar(30),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Address varchar(200),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;POSTCODE varchar(6)</div><div>);</div></div><div><br/></div><ul><ul><ul><li><div>一个表的外键FK指向另一个表的主键PK，同时外键满足唯一性，也构成了一对一关联关系。如下案例表定义即EMPID是外键，同时满足唯一性约束</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>-- 员工地址表</div><div>create table oa_employeeaddress</div><div>(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;ADDNO int(10) primary key auto_increment,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;CITY varchar(30),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Address varchar(200),</div><div>POSTCODE varchar(6),</div><div>EMPID varchar(20) references oa_employee(EMPID) unqiue</div><div>);</div></div><ul><li><div>Hibernate映射关联关系的实现方式</div></li><ul><li><div>注解类（Annotation Class）方式实现关联映射：Hibernate使用JPA的注解类实现关联映射配置。</div></li><li><div>XML文件方式实现关联映射：通过Hibernate提供的XML关联标记实现关联映射配置。</div></li></ul></ul><div>多对一和一对多关联关系的注解类映射配置</div><ul><li><div>多对一和一对多关联关系的数据库案例：部门表和员工表</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>create table oa_department</div><div>(</div><div>&nbsp;&nbsp;&nbsp;DEPTNO int(10) primary key auto_increment,</div><div>&nbsp;&nbsp;&nbsp;DEPTCODE varchar(20),</div><div>&nbsp;&nbsp;&nbsp;DEPTNAME varchar(100)</div><div>);</div><div>-- 员工表</div><div>create table oa_employee</div><div>(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPID varchar(20) primary key,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;DEPTNO int(10) references OA_Department(DEPTNO),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPPassword varchar(20),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPNAME varchar(50),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPSEX varchar(2),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;AGE int(2) default 18 check(age&nbsp;&nbsp;between 18 and 60),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;BirthDAY date,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;JOINDATE date,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;SALARY decimal(12,2) default 0,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;PHOTO longblob,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;PhotoFileName varchar(50),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;PhotoContentType varchar(50),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Mail varchar(100) unique,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Mobile varchar(20)unique,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;CardCode varchar(20) unique</div><div>);</div><div>其中员工表(oa_employee)有外键DEPTNO指向部门表(oa_department)的主键DEPTNO, 构成多对一和一对多关联关系。</div><div>其中：员工是多方，部门是一方。多个员工属于一个部门，每个部门包含多个员工。</div></div><ul><li><div>多对一和一对多关联关系的Java案例</div></li></ul><div>Model层需要定义与表对应的Model类，即部门类和员工</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//部门Model类</div><div>@Entity</div><div>@Table(name=&quot;oa_department&quot;)</div><div>public class DepartmentModel implements Serializable {</div><div>@Id</div><div>@GeneratedValue(generator = &quot;paymentableGenerator&quot;)</div><div>@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;increment&quot;)</div><div>@Column(name=&quot;DEPTNO&quot;)</div><div>private int no=0;</div><div>@Basic</div><div>@Column(name=&quot;DEPTCODE&quot;)</div><div>private String code=null;</div><div>@Column(name=&quot;DEPTNAME&quot;,updatable=false)</div><div>private String name=null;</div><div>//对多关联关系</div><div>private Set&lt;EmployeeModel&gt; employees=null;</div><div>}</div><div>//员工Model类</div><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;EMPID&quot;)</div><div>@GeneratedValue(generator = &quot;EMPID_UUID&quot;)</div><div>@GenericGenerator(name = &quot;EMPID_UUID&quot;, strategy = &quot;guid&quot;)</div><div>private String id=null;</div><div>@Basic</div><div>@Column(name=&quot;EMPPASSWORD&quot;,nullable=false)</div><div>private String password=null;</div><div>@Column(name=&quot;EMPNAME&quot;)</div><div>private String name=null;</div><div>@Column(name=&quot;EMPSEX&quot;)</div><div>private String sex=null;</div><div>private int age=0;</div><div>private double salary=0;</div><div>private Date birthday=null;</div><div>private Date joinDate=null;</div><div>@Lob</div><div>@Basic(fetch=FetchType.LAZY)</div><div>private byte[] photo=null;</div><div>private String photoFileName=null;</div><div>private String photoContentType=null;</div><div>private String mail=null;</div><div>private String mobile=null;</div><div>@Column(name=&quot;CARDCODE&quot;,unique=true,nullable=false,updatable=false)</div><div>private String cardcode=null; //身份证号</div><div>//对一关联关系</div><div>private DepartmentModel department=null; //员工关联的部门</div><div>}</div></div><div>在Model类中对多使用集合属性实现，推荐使用Set集合，因为Set是不允许重复的，使用List集合也是可以的。本课程中都使用Set集合表达对多的关联关系。</div><ul><li><div>Hibernate使用JPA注解类是多对一关联关联映射配置</div></li></ul><div>Hibernate为实现多对一映射提供了注解类@ManyToOne和@JoinColumn，其使用案例如下：</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>&nbsp;&nbsp;&nbsp;&nbsp; ...其他属性</div><div>//对一关联关系</div><div>@ManyToOne</div><div>@JoinColumn(name=&quot;DEPTNO&quot;)</div><div>private DepartmentModel department=null; //员工关联的部门</div><div>}</div><div>其中：</div><div>@ManyToOne不能省略，表达当前Model类EmployeeModel与关联的Model类DepartmentModel直接是多对一关系。</div><div>@JoinColumn注解类用于指定关联的字段，注意关联字段不能使用@Column。如果省略@JoinColumn则属性名就是默认的字段名，如果关联属性名与字段名不一致，不能省略关联字段配置注解类@JoinColumn。</div></div><ul><li><div>JPA实现多对一注解类语法详解</div></li><ul><li><div>@ManyToOne：指定Model间是多对一关联关系。使用在多方的关联属性前。</div></li><ul><li><div>CascadeType[] cascade：指定级联操作类型。为CascadeType类型的数组。省略该属性为无级联操作。</div></li></ul><div>级联操作的含义是指持久化操作（增，改，删）当前Model类的对象时，是否也对关联的对象执行此操作。级联操作的详细介绍在后面的持久化操作章节中将详细介绍，这里简单了解。</div><div>CascadeType定义了如下枚举类型常量：ALL，</div></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>使用案例1：全部级联操作</div><div>@ManyToOne(cascade= {CascadeType.ALL})</div><div>@JoinColumn(name=&quot;DEPTNO&quot;)</div><div>private DepartmentModel department=null; //员工关联的部门</div><div>使用案例2：部分级联操作</div><div>@ManyToOne(cascade= {CascadeType.PERSIST,CascadeType.REMOVE},fetch=FetchType.EAGER)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;)</div><div>private DepartmentModel department=null; //员工关联的部门</div></div><ul><ul><ul><li><div>FetchType fetch:指定检索策略。取值：EAGER 立即检索，LAZY 延迟检索，默认LAZY.</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@ManyToOne(cascade= {CascadeType.ALL},fetch=FetchType.EAGER)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;)</div><div>private DepartmentModel department=null; //员工关联的部门</div></div><ul><ul><ul><li><div>boolean optional:指定关联的对象是否允许为null, true：可以为null， false:不能为null, 默认：true</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>使用案例：员工关联的部门对象不能为null</div><div>@ManyToOne(fetch=FetchType.EAGER,optional=false)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;)</div><div>private DepartmentModel department=null; //员工关联的部门</div></div><ul><ul><ul><li><div>Class targetEntity:指定关联对象的类型，一般不需要指定。Hibernate会根据反射机制，根据属性的类型自动确定关联的对象，并解析关联的映射配置。</div></li></ul><li><div>@JoinColumn:指定关联属性对应的FK字段名。可省略。如果缺省，则属性名为外键字段名</div></li><ul><li><div>String name：指定FK字段名，当属性名与FK字段名不一致时，必须指定。</div></li><li><div>boolean insertable：取值true|false, 指定该关联字段是否出现在insert语句中，默认true</div></li><li><div>boolean nullable：true|false, 指定FK字段是否允许为null，默认true。</div></li><li><div>String referencedColumnName： 指定关联表的主键PK的字段名，一般不需要指定</div></li><li><div>String table：指定包含FK字段的表，一般不需要指定。</div></li><li><div>boolean unique：true|false, 指定FK字段值是否唯一，默认false.</div></li><li><div>boolean updatable:true|false，指定FK字段是否出现在生成的update语句中，默认true, 如果取值false, 则FK字段无法修改。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@ManyToOne(cascade= {CascadeType.PERSIST,CascadeType.REMOVE},fetch=FetchType.EAGER,optional=false,targetEntity=DepartmentModel.class)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;,insertable=true,updatable=true,unique=false,nullable=false)</div><div>private DepartmentModel department=null; //员工关联的部门</div></div><ul><li><div>关联映射中的相关类</div></li><ul><li><div>CascadeType：使用在@ManytoOne中指定对一方关联对象的执行的级联操作。</div></li><li><div>取值：ALL，PERSIST, MERGE, REMOVE, REFRESH, DETACH</div></li><li><div>其中：ALL={PERSIST, MERGE, REMOVE, REFRESH, DETACH}</div></li><li><div>各个持久化操作的方法，将在持久化编程章节中详细讲解。</div></li><li><div>FetchType: 使用在@ManytoOne中，指定检索的策略类型。</div></li><li><div>取值：EAGER 立即检索，LAZY 延迟检索</div></li><li><div>关于Hibernate的检索策略，在Hibernate持久化操作章节中详细讲解。</div></li></ul><li><div>Hibernate使用JPA注解类是一对多关联关联映射配置一对多关联关系是多对一的反向对应关系。</div></li><ul><li><div>在Hibernate应用中推荐使用多对一映射的方向映射方式，即实现双向的映射。当然也可以独立实现一对多映射配置，但不推荐使用。</div></li><li><div>@OneToMany和@JoinColumn完成。</div></li><li><div>多对一的反向关联映射实现一对多配置</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_department&quot;)</div><div>public class DepartmentModel implements Serializable {</div><div>@Id</div><div>@GeneratedValue(generator = &quot;paymentableGenerator&quot;)</div><div>@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;increment&quot;)</div><div>@Column(name=&quot;DEPTNO&quot;)</div><div>private int no=0;</div><div>@Basic</div><div>@Column(name=&quot;DEPTCODE&quot;)</div><div>private String code=null;</div><div>@Column(name=&quot;DEPTNAME&quot;,updatable=false)</div><div>private String name=null;</div><div>//对多关联关系</div><div>@OneToMany(mappedBy=&quot;department&quot;,cascade= {CascadeType.REMOVE})</div><div>private Set&lt;EmployeeModel&gt; employees=null;</div><div>}</div></div><ul><ul><li><div>单独指定一对多的关联关系</div></li></ul><div>此模式可以定义单向的一对多关联关系，即使没有对方的多对一也可以。实际项目不推荐使用。此时需要结合使用@OneToMany和@JoinColumn注解类联合完成。案例配置代码如下：</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_department&quot;)</div><div>public class DepartmentModel implements Serializable {</div><div>... //其他属性</div><div>//对多关联关系</div><div>@OneToMany(cascade= {CascadeType.REMOVE},fetch=FetchType.LAZY)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;)</div><div>private Set&lt;EmployeeModel&gt; employees=null;</div><div>}</div><div>注意：此处@JoinColumn(name=&quot;DEPTNO&quot;)指定的多方对象EmployeeModel类对应表（oa_employee）中的Fk字段名，不是部门表中有外键DEPTNO。</div></div><ul><ul><li><div>@OneToMany的语法:指定该属性是一对多的关联关系。放在关联的集合属性前。</div></li><li><div>CascadeType[] cascade：取值参见上面介绍。</div></li><li><div>（2）FetchType fetch：指定检索策略类型。</div></li><li><div>（3）String mappedBy：指定对方多对一的属性名称。（*）推荐使用属性。</div></li><li><div>（4）boolean orphanRemoval：true|false &nbsp;指定是否当关联的对象已经删除，此对象也随之删除。与cascade属性作用不一样，cascade是指对本对象持久化操作是否对关联的对象级联操作， &nbsp;orphanRemoval是指删除关联对象，是否也删除当前对象。</div></li><li><div>（5）Class targetEntity：指定关联的对方的类的类型。一般不需要指定。Hibernate通过关联属性Set&lt;EmployeeModel&gt;能取得关联的对象类型，如果不使 用泛型，如使用private Set employees=null; 时，则推荐使用该属性。</div></li><li><div>如下：</div></li></ul><div>@OneToMany(mappedBy=&quot;department&quot;,&nbsp;targetEntity=EmployeeModel.class)</div><div>private Set employees=null;</div><div>实际项目开发时一定要使用泛型，即如下形式：</div><div>//对多关联关系</div><div>@OneToMany(mappedBy=&quot;department&quot;,cascade= {CascadeType.REMOVE})</div><div>private Set&lt;EmployeeModel&gt; employees=null;</div></ul><div>多对一和一对多关联关系的XML文件映射</div><div>多对一和一对多关联关系的Model类的Hibernate持久化操作</div><ul><li><div>多对一关联关系的Hibernate持久化操作编程</div></li></ul><div>有多对一关联关联的Model类的操作一般是先增加一方对象，如本案例的部门类是一方，需要先增加部门对象，再增加多方对象，通过设置多方对象的多对一关联属性，完成数据库PK字段值的确定。</div><ul><ul><li><div>增加操作</div></li><ul><li><div>先增加一方对象，如部门</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>DepartmentModel dm=new DepartmentModel();</div><div>dm.setCode(“D01”);</div><div>dm.setName(“财务部门”);</div><div>IDepartmentService ds=new DepartmentServiceImpl();</div><div>ds.add(dm);</div></div><ul><ul><ul><li><div>&nbsp;再增加多方对象</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>EmployeeModel em=new EmployeeModel();</div><div>em.setId(“1001”);</div><div>Em.setPassword(“1001”);</div><div>em.setName(“刘明”);</div><div>... //设置其他属性</div><div>DepartmentModel dm=new DepartmentModel(); //调用部门的业务方法取得指定编号的部门对象</div><div>dm.setNo(2);</div><div>em.setDepartment(dm);&nbsp;&nbsp;//设置员工关联的部门对象</div><div>...</div><div>IEmployeeService es=new EmployeeServiceImpl(); //取得员工业务对象</div><div>ds.add(em);&nbsp;&nbsp;//增加员工（多方对象）</div></div><ul><ul><ul><li><div>修改操作</div></li><ul><li><div>直接将修改的部门与员工关联即可</div></li></ul><li><div>删除操作</div></li><ul><li><div>不需要将部门和员工关联，直接删除员工即可。</div></li></ul><li><div>查询操纵：取得关联对象</div></li></ul><div>Hibernate支持取得关联对象的操作。通过业务层方法取得指定的对象，员工业务层取得指定员工的代码如下</div></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public EmployeeModel getById(String id) throws Exception {</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//取得指定ID的员工对象</div><div>EmployeeModel em=session.get(EmployeeModel.class, id);</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return em;</div><div>}</div><div>将检索策略改为立即检索：fetch=FetchType.EAGER，再测试：</div><div>@ManyToOne(fetch=FetchType.EAGER,optional=true,targetEntity=DepartmentModel.class)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;,insertable=true,updatable=true,unique=false,nullable=true)</div><div>private DepartmentModel department=null; //员工关联的部门</div></div><ul><li><div>一对多关联关系的Hibernate操作编程</div></li></ul><div>对于一对多关联关系，Hibernate通常通过一方对象取得关联的多方对象的集合。如取得指定部门的员工列表。可以在业务层定义如下方法：</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//取得指定部门的员工列表, 参数：departmentNo 部门编号</div><div>public List&lt;EmployeeModel&gt; getListByDepartment(int departmentNo) throws Exception;</div><div>该业务方法的实现代码如下：</div><div>//取得指定部门的员工列表</div><div>@Override</div><div>public List&lt;EmployeeModel&gt; getListByDepartment(int departmentNo) throws Exception {</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//取得指定的部门</div><div>DepartmentModel dm=session.get(DepartmentModel.class, departmentNo);</div><div>//取得部门的员工集合(一对多关联属性）</div><div>Set&lt;EmployeeModel&gt; employeeSet=dm.getEmployees();</div><div>//将Set集合转换为List类型</div><div>List&lt;EmployeeModel&gt; employeeList=new ArrayList&lt;EmployeeModel&gt;(employeeSet);</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return employeeList;</div><div>}</div><div>测试代码：</div><div>public class Test {</div><div>public static void main(String[] args) {</div><div>&nbsp;&nbsp;IDepartmentService ds=new DepartmentServiceImpl();</div><div>IEmployeeService es=new EmployeeServiceImpl(); //创建业务对象</div><div>List&lt;EmployeeModel&gt; list=es.getListByDepartment(1); //取得指定部门的员工列表</div><div>System.out.println(list.size());</div><div>for(EmployeeModel em01:list) {</div><div>&nbsp;&nbsp;System.out.println(em01.getName());</div><div>}</div><div>}</div><div>测试结果：</div><div>看到，通过一对多关联属性，可以取得关联的集合属性信息。</div><div>测试：通过部门的业务层方法直接取得部门对象，看看能不能取得关联的员工信息。</div><div>测试代码：</div><div>public class Test {</div><div>public static void main(String[] args) {</div><div>&nbsp;&nbsp;IDepartmentService ds=new DepartmentServiceImpl();</div><div>&nbsp;&nbsp;DepartmentModel dm01=ds.getByNo(1);</div><div>System.out.println(dm01.getEmployees().size());</div><div>}</div><div>}</div><div>运行测试结果如下：</div><div>Hibernate: select department0_.DEPTNO as deptno1_0_0_, department0_.DEPTCODE as deptcode2_0_0_, department0_.DEPTNAME as deptname3_0_0_ from oa_department department0_ where department0_.DEPTNO=?</div><div>org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.city.oa.model.DepartmentModel.employees, could not initialize proxy - no Session</div><div>可以看到，执行的查询部门表的SQL语句，但是无法取得关联的员工集合的信息。</div><div>原因是没有初始化关联的集合属性，因为在使用注解类@OneToMany配置一对多关联时，默认是延迟检索策略。</div><div>//对多关联关系&nbsp;&nbsp;&nbsp;&nbsp;目前的配置</div><div>@OneToMany(mappedBy=&quot;department&quot;,cascade= {CascadeType.REMOVE})</div><div>private Set&lt;EmployeeModel&gt; employees=null;</div><div>将延迟策略改为立即检索</div><div>@OneToMany(mappedBy=&quot;department&quot;,cascade={CascadeType.REMOVE}</div><div>,fetch=FetchType.EAGER)</div><div>private Set&lt;EmployeeModel&gt; employees=null;</div><div>测试代码：</div><div>DepartmentModel dm01=ds.getByNo(1);</div><div>System.out.println(dm01.getEmployees().size());</div><div>for(EmployeeModel em01:dm01.getEmployees()) {</div><div>&nbsp;&nbsp;System.out.println(em01.getName());</div><div>}</div><div>测试结果：</div><div>Hibernate: select department0_.DEPTNO as deptno1_0_0_, department0_.DEPTCODE as deptcode2_0_0_, department0_.DEPTNAME as deptname3_0_0_, employees1_.DEPTNO as deptno15_1_1_, employees1_.EMPID as empid1_1_1_, employees1_.EMPID as empid1_1_2_, employees1_.age as age2_1_2_, employees1_.birthday as birthday3_1_2_, employees1_.CARDCODE as cardcode4_1_2_, employees1_.DEPTNO as deptno15_1_2_, employees1_.joinDate as joindate5_1_2_, employees1_.mail as mail6_1_2_, employees1_.mobile as mobile7_1_2_, employees1_.EMPNAME as empname8_1_2_, employees1_.EMPPASSWORD as emppassw9_1_2_, employees1_.photo as photo10_1_2_, employees1_.photoContentType as photoco11_1_2_, employees1_.photoFileName as photofi12_1_2_, employees1_.salary as salary13_1_2_, employees1_.EMPSEX as empsex14_1_2_ from oa_department department0_ left outer join oa_employee employees1_ on department0_.DEPTNO=employees1_.DEPTNO where department0_.DEPTNO=?</div><div>3</div><div>王明</div><div>刘鑫新</div><div>刘明</div><div>通过测试结果可以看到，Hibernate自动执行有关联的SQL语句，将部门表和员工表进行关联，执行立即检索，取得部门对象关联的员工集合对象。</div></div><div><br/></div><hr/><div>Hibernate关联映射- 多对多和一对一关联关系</div><hr/><div>多对多关联概述</div><ul><li><div>多对多关系的Java表达</div></li><ul><li><div>在Java中对多关联关系的表达使用集合类型的属性，如Set，List和数组均可。</div></li><li><div>Hibernate中推荐使用Set集合类型表达对多的关联属性</div></li><li><div>ava中表达多对多关系时，区分为双向多对多和单向多对多</div></li><ul><li><div>双向多对多关联关系</div></li><ul><li><div>关联的双方都是多个，就构成双向多对多关系。每个类都有包含对方的集合属性。</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;EMPID&quot;)</div><div>//@GenericGenerator(name = &quot;EMPID_UUID&quot;, strategy = &quot;uuid&quot;)</div><div>//@GeneratedValue(generator=&quot;EMPID_UUID&quot;)</div><div>private String id=null;</div><div>@Basic</div><div>@Column(name=&quot;EMPPASSWORD&quot;,nullable=false)</div><div>private String password=null;</div><div>@Column(name=&quot;EMPNAME&quot;)</div><div>private String name=null;</div><div>@Column(name=&quot;EMPSEX&quot;)</div><div>private String sex=null;</div><div>private int age=0;</div><div>private double salary=0;</div><div>private Date birthday=null;</div><div>private Date joinDate=null;</div><div>@Lob</div><div>@Basic(fetch=FetchType.LAZY)</div><div>private byte[] photo=null;</div><div>private String photoFileName=null;</div><div>private String photoContentType=null;</div><div>private String mail=null;</div><div>private String mobile=null;</div><div>@Column(name=&quot;CARDCODE&quot;,unique=true,nullable=false,updatable=false)</div><div>private String cardcode=null; //身份证号</div><div>//对一关联关系</div><div>@ManyToOne(cascade= {CascadeType.PERSIST,CascadeType.REMOVE},fetch=FetchType.EAGER,optional=true,targetEntity=DepartmentModel.class)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;,insertable=true,updatable=true,unique=false,nullable=true)</div><div>private DepartmentModel department=null; //员工关联的部门</div><div>//多对多关联关系</div><div>private Set&lt;BehaveModel&gt; behaves=null; //关联的爱好集合，即员工拥有的爱好</div><div>}</div><div>public class BehaveModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;BNO&quot;)</div><div>@GeneratedValue()</div><div>private int no=0;</div><div>@Column(name=&quot;BNAME&quot;)</div><div>private String name=null;</div><div>private Set&lt;EmployeeModel&gt; employees=null; //关联的员工集合对象</div><div>&nbsp;&nbsp;//get和set方法省略</div><div>}</div><div><br/></div><div><br/></div></div><ul><ul><ul><ul><li><div>单向多对多关联关系</div></li><ul><li><div>当一个Model类只包含对方的集合属性，而对方没有定义对应的集合属性就是单向对多关联关系。如果是单向关联，从Java代码类看不出一对多还是多对多，得需要使用Hibernate的映射配置信息才能看出。</div></li></ul><div>如果使用@ManyToMany注解类，就是多对多，使用@OneToMany就是一对多。</div></ul></ul></ul></ul><div><br/></div><ul><ul><li><div>多对多关系的数据库表达</div></li><ul><li><div>多对多关系是关系数据库中两个表之间的一种数据关系，为了维护这种关系，通常会存在一张中间关系表。两张表都只和关系表间建立主外键关系。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>-- 员工表</div><div>create table oa_employee</div><div>(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPID varchar(20) primary key,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;DEPTNO int(10) references OA_Department(DEPTNO),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPPassword varchar(20),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPNAME varchar(50),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPSEX varchar(2),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;AGE int(2) default 18 check(age&nbsp;&nbsp;between 18 and 60),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;BirthDAY date,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;JOINDATE date,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;SALARY decimal(12,2) default 0,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;PHOTO longblob,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;PhotoFileName varchar(50),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;PhotoContentType varchar(50),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Mail varchar(100) unique,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Mobile varchar(20)unique,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;CardCode varchar(20) unique</div><div>);</div><div>-- 爱好表</div><div>create table oa_behave</div><div>(</div><div>&nbsp;&nbsp;&nbsp;BNO int(10) primary key auto_increment,</div><div>&nbsp;&nbsp;&nbsp;BNAME varchar(100)</div><div>);</div><div>-- 员工爱好关联表</div><div>create table oa_employeebehave</div><div>(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPID varchar(20) references OA_Employee(EMPID),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;BNO int(10) references oa_Behave(BNO),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;primary key (EMPID,BNO)</div><div>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div><br/></div><div><br/></div></div><div>多对多关联关系的注解类映射配置</div><ul><li><div>多对多注解类@ManyToMany和@JoinTable使用。</div></li></ul><div>首先通过多对多关联关系的注解类映射配置案例掌握注解类的映射使用</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//员工Model类映射多对多案例：</div><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;EMPID&quot;)</div><div>//@GenericGenerator(name = &quot;EMPID_UUID&quot;, strategy = &quot;uuid&quot;)</div><div>//@GeneratedValue(generator=&quot;EMPID_UUID&quot;)</div><div>private String id=null;</div><div>@Basic</div><div>@Column(name=&quot;EMPPASSWORD&quot;,nullable=false)</div><div>private String password=null;</div><div>@Column(name=&quot;EMPNAME&quot;)</div><div>private String name=null;</div><div>@Column(name=&quot;EMPSEX&quot;)</div><div>private String sex=null;</div><div>private int age=0;</div><div>private double salary=0;</div><div>private Date birthday=null;</div><div>private Date joinDate=null;</div><div>@Lob</div><div>@Basic(fetch=FetchType.LAZY)</div><div>private byte[] photo=null;</div><div>private String photoFileName=null;</div><div>private String photoContentType=null;</div><div>private String mail=null;</div><div>private String mobile=null;</div><div>@Column(name=&quot;CARDCODE&quot;,unique=true,nullable=false,updatable=false)</div><div>private String cardcode=null; //身份证号</div><div>//对一关联关系</div><div>@ManyToOne(cascade= {CascadeType.PERSIST,CascadeType.REMOVE},fetch=FetchType.EAGER,optional=true,targetEntity=DepartmentModel.class)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;,insertable=true,updatable=true,unique=false,nullable=true)</div><div>private DepartmentModel department=null; //员工关联的部门</div><div>//多对多关联关系</div><div>@ManyToMany</div><div>@JoinTable(</div><div>name=&quot;oa_employeebehave&quot;,</div><div>joinColumns={@JoinColumn (name=&quot;EMPID&quot;)},</div><div>inverseJoinColumns={@JoinColumn(name=&quot;BNO&quot;)}</div><div>)</div><div>private Set&lt;Beh baveModel&gt; behaves=null; //关联的爱好集合，即员工拥有的爱好</div><div>}</div><div>//爱好Model类，与员工Model类是多对多关联</div><div>@Entity</div><div>@Table(name=&quot;oa_behave&quot;)</div><div>public class BehaveModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;BNO&quot;)</div><div>@GeneratedValue()</div><div>private int no=0;</div><div>@Column(name=&quot;BNAME&quot;)</div><div>private String name=null;</div><div>//双向多对多关联关系的映射，被动方映射，使用mappedBy属性即可，不需要使用@JoinTable</div><div>@ManyToMany(mappedBy=&quot;behaves&quot;)</div><div>private Set&lt;EmployeeModel&gt; employees=null; //关联的员工集合对象</div><div>@ManyToMany中使用mappedBy的对象是被动方。</div><div>如果关联的双方都没有使用mappedBy, 则需要结合使用@JoinTable完成多对多映射，此时双方都是主动方，向所属的集合中增加对方对象，都生成对应的insert语句，向关联表中增加记录。</div></div><ul><li><div>多对多注解类的语法详解</div></li><ul><li><div>@ManyToMany：用于Model类集合属性前，指明类间关联关系是多对多。</div></li><ul><li><div>CascadeType[] cascade：指定级联操作。与其他注解类相同。见前面的说明。</div></li><li><div>FetchType fetch：指定检索策略。立即检索和延迟检索，默认FetchType.LAZY。</div></li><li><div>String mappedBy：指定对方的关联属性名。 被动方的属性。多对多映射配置时，如果是双向多对多，推荐一个主动方，一个是被动方。不能都是被动方。可以双方都是主动方，但不推荐这种配置。</div></li><li><div>Class targetEntity：关联的对方对象的类型。使用Set&lt;类型&gt;定义关联属性时，不需要指定该属性。、</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>主动方映射配置：</div><div>@ManyToMany</div><div>@JoinTable(name=&quot;CUST_PHONE&quot;,</div><div>&nbsp;&nbsp;&nbsp;joinColumns=@JoinColumn(name=&quot;CUST_ID&quot;, referencedColumnName=&quot;ID&quot;),</div><div>&nbsp;&nbsp;&nbsp;inverseJoinColumns=@JoinColumn(name=&quot;PHONE_ID&quot;, referencedColumnName=&quot;ID&quot;)</div><div>)</div><div>public Set phones=null;</div><div>被动方配置：</div><div>@ManyToMany(mappedBy=&quot;phones&quot;)</div><div>public Set customers=null;</div></div><ul><ul><li><div>&nbsp;@JoinTable</div></li></ul><div>与@ManyToMany联合使用，确定多对多关联表和关联字段。使用在主动方对象的关联属性前。</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>String catalog：指定关联表的类别，部分数据库支持catalog,</div><div>（2）JoinColumn[] joinColumns: 指定关联表中指向当前类的外键字段。取值是包含1个或多个@JoinColumn指定的外键定义注解类。</div><div>（3）JoinColumn[] inverseJoinColumns：指定关联表中指向集合中对象的外键字段，取值是包含1个或多个@JoinColumn指定的外键定义注解类。</div><div>（4）String name：指定关联表的表名。</div><div>（5）String schema:指定关联表的方案，Oracle中schema是指用户名。</div><div>配置案例代码：</div><div>主动方式配置：</div><div>@ManyToMany</div><div>@JoinTable(name=&quot;oa_employeebehave&quot;,</div><div>joinColumns={@JoinColumn (name=&quot;EMPID&quot;,referencedColumnName=&quot;EMPID&quot;)},</div><div>inverseJoinColumns={@JoinColumn(name=&quot;BNO&quot;,referencedColumnName=&quot;BNO&quot;)}</div><div>)</div><div>private Set&lt;BehaveModel&gt; behaves=null; //员工拥有的爱好集合</div></div><div><br/></div><div>第3节 多对多关联关系的XML方式映射</div><div>要求理解即可</div><ul><li><div>多对多关联映射XML方式案例</div></li></ul><div>XML方式映射多对多与一对多一样也使用&lt;set&gt;标记，不同的包含的子元素不同，多对多包含&lt;key&gt;和&lt;many-to-many&gt;子元素，而一对多是包含&lt;key&gt;和&lt;one-to-many&gt;。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;!-- 对部门的多对一关联 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;many-to-one name=&quot;department&quot; column=&quot;DEPTNO&quot; /&gt;</div><div>&lt;set name=&quot;behaves&quot; table=&quot;oa_employeebehave&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;key column=&quot;EMPID&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;many-to-many column=&quot;BNO&quot; class=&quot;BehaveModel&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/set&gt;</div><div>&lt;set&gt;的name指定多对多关联的属性名称，table指定关联的表。</div><div>&lt;key&gt;的column指定关联表中指向当前映射类的外键字段。如当前映射的类是员工类，</div><div>因此column的值是EMPID。</div><div>&lt;many-to-many&gt;指示关联关系是多对多，column指定关联表中关联到多方的外键字段，在本案例中是指向爱好的外键字段，即BNO。class属性指定关联的多方的Model类名称。</div><div>2.爱好对员工的XML映射：</div><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE hibernate-mapping PUBLIC</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;&gt;</div><div>&lt;!-- 爱好Model类映射 --&gt;</div><div>&lt;hibernate-mapping package=&quot;com.city.oa.model&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;class name=&quot;BehaveModel&quot; table=&quot;oa_behave&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id name=&quot;no&quot; column=&quot;BNO&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;generator class=&quot;identity&quot; /&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/id&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;name&quot; column=&quot;BNAME&quot; update=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- 多对对多关联关系属性映射配置 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;set name=&quot;employees&quot; table=&quot;oa_employeebehave&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;key column=&quot;BNO&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;many-to-many column=&quot;EMPID&quot; class=&quot;EmployeeModel&quot; /&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/set&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/class&gt;</div></div><div>多对多关联关系的Hibernate持久化操作</div><ul><li><div>多对多关联的增加操作是指通过向集合中添加对象，实现向关联表中增加关联记录。</div></li><div>有多对多关联的对象的操作，先各自增加自己的对象，如先分别增加员工和爱好，再通过给员工的爱好集合增加爱好对象完成员工和爱好的关联，实际就是向关联表增加数据。</div><div>由于关联表没有对应的Model类，只能通过这种方式完成对关联表的增加。</div><div>关联表增加记录，就是完成对象的多对多关联。</div><ul><li><div>下面通过给员工增加爱好演示一下，多对多关联的增加操作编程。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>1.在员工业务接口中增加如下增加爱好的方法：</div><div>//=========操作员工爱好的方法=============================================</div><div>//为指定的员工增加指定的爱好，参数:employeeId:员工账号， behaveNo:爱好编号，</div><div>public void addBehave(String employeeId, int behaveNo) throws Exception; //增加单个爱好的方法</div><div>//为指定的员工增加指定的爱好，参数:employeeId:员工账号， behaveNos:爱好编号的数组，</div><div>public void addBehaves(String employeeId, int[] behaveNos) throws Exception; //增加多个爱好的方法</div><div>//取得指定员工的爱好列表, 参数：id: 员工账号，</div><div>public List&lt;BehaveModel&gt; getBehavesById(String id) throws Exception; //</div><div>2.在员工的业务实现类中使用Hibernate API实现业务方法：</div><div>//=============操作员工爱好的方法=============================================</div><div>//为指定的员工增加指定的爱好，参数:employeeId:员工账号， behaveNo:爱好编号，</div><div>@Override</div><div>public void addBehave(String employeeId, int behaveNo) throws Exception //增加单个爱好的方法</div><div>{</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//取得指定的员工对象</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工增加爱好对象</div><div>em.getBehaves().add(bm); //通过向员工的爱好集合里增加爱好对象，实现对关联表记录的增加。</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>}</div><div>//为指定的员工增加指定的爱好，参数:employeeId:员工账号， behaveNos:爱好编号的数组，</div><div>@Override</div><div>public void addBehaves(String employeeId, int[] behaveNos) throws Exception //增加多个爱好的方法</div><div>{</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//取得指定的员工对象</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>for(int behaveNo:behaveNos) {</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工增加爱好对象</div><div>em.getBehaves().add(bm); //通过向员工的爱好集合里增加爱好对象，实现对关联表记录的增加。</div><div>}</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>}</div><div>//取得指定员工的爱好列表, 参数：id: 员工账号，</div><div>@Override</div><div>public List&lt;BehaveModel&gt; getBehavesById(String id) throws Exception{</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//取得指定的员工</div><div>EmployeeModel em=session.get(EmployeeModel.class, id);</div><div>//取得员工的爱好集合(多对多关联属性）</div><div>Set&lt;BehaveModel&gt; behaveSet=em.getBehaves();</div><div>//将Set集合转换为List类型</div><div>List&lt;BehaveModel&gt; behaveList=new ArrayList&lt;BehaveModel&gt;(behaveSet);</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return behaveList;</div><div><br/></div><div>}</div><div>为员工增加爱好通过向员工的爱好Set集合增加爱好对象即可。事先要取得员工对象，爱好对象。</div><div>//取得指定的员工对象</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工增加爱好对象</div><div>em.getBehaves().add(bm);</div><div>测试执行时：es.addBehave(&quot;1001&quot;, 1); 为员工1001增加爱好1</div><div>控制台输出：</div><div>Hibernate: select employeemo0_.EMPID as empid1_2_0_, employeemo0_.age as age2_2_0_, employeemo0_.birthday as birthday3_2_0_, employeemo0_.CARDCODE as cardcode4_2_0_, employeemo0_.DEPTNO as deptno15_2_0_, employeemo0_.joinDate as joindate5_2_0_, employeemo0_.mail as mail6_2_0_, employeemo0_.mobile as mobile7_2_0_, employeemo0_.EMPNAME as empname8_2_0_, employeemo0_.EMPPASSWORD as emppassw9_2_0_, employeemo0_.photo as photo10_2_0_, employeemo0_.photoContentType as photoco11_2_0_, employeemo0_.photoFileName as photofi12_2_0_, employeemo0_.salary as salary13_2_0_, employeemo0_.EMPSEX as empsex14_2_0_ from oa_employee employeemo0_ where employeemo0_.EMPID=?</div><div>Hibernate: select behavemode0_.BNO as bno1_0_0_, behavemode0_.BNAME as bname2_0_0_ from oa_behave behavemode0_ where behavemode0_.BNO=?</div><div>Hibernate: select behaves0_.EMPID as empid1_3_0_, behaves0_.BNO as bno2_3_0_, behavemode1_.BNO as bno1_0_1_, behavemode1_.BNAME as bname2_0_1_ from oa_employeebehave behaves0_ inner join oa_behave behavemode1_ on behaves0_.BNO=behavemode1_.BNO where behaves0_.EMPID=?</div><div>Hibernate: insert into oa_employeebehave (EMPID, BNO) values (?, ?)</div><div>Hibernate先执行2个select语句，检索出员工对象，爱好对象。</div><div>执行：em.getBehaves().add(bm);</div><div>则执行向关联表插入数据。</div><div>如果重复执行该业务方法，由于爱好已经跟此员工关联，就不再生成insert语句。</div><div>不再有insert语句。</div><div>如果执行一次增加多个爱好的方法，传入一个包含多个爱好的数组：</div><div>es.addBehaves(&quot;1001&quot;, new int[] {1,2,3});</div><div>执行结果，控制台显示生成的SQL语句:</div><div>Hibernate: select employeemo0_.EMPID as empid1_2_0_, employeemo0_.age as age2_2_0_, employeemo0_.birthday as birthday3_2_0_, employeemo0_.CARDCODE as cardcode4_2_0_, employeemo0_.DEPTNO as deptno15_2_0_, employeemo0_.joinDate as joindate5_2_0_, employeemo0_.mail as mail6_2_0_, employeemo0_.mobile as mobile7_2_0_, employeemo0_.EMPNAME as empname8_2_0_, employeemo0_.EMPPASSWORD as emppassw9_2_0_, employeemo0_.photo as photo10_2_0_, employeemo0_.photoContentType as photoco11_2_0_, employeemo0_.photoFileName as photofi12_2_0_, employeemo0_.salary as salary13_2_0_, employeemo0_.EMPSEX as empsex14_2_0_ from oa_employee employeemo0_ where employeemo0_.EMPID=?</div><div>Hibernate: select behavemode0_.BNO as bno1_0_0_, behavemode0_.BNAME as bname2_0_0_ from oa_behave behavemode0_ where behavemode0_.BNO=?</div><div>Hibernate: select behaves0_.EMPID as empid1_3_0_, behaves0_.BNO as bno2_3_0_, behavemode1_.BNO as bno1_0_1_, behavemode1_.BNAME as bname2_0_1_ from oa_employeebehave behaves0_ inner join oa_behave behavemode1_ on behaves0_.BNO=behavemode1_.BNO where behaves0_.EMPID=?</div><div>Hibernate: select behavemode0_.BNO as bno1_0_0_, behavemode0_.BNAME as bname2_0_0_ from oa_behave behavemode0_ where behavemode0_.BNO=?</div><div>Hibernate: select behavemode0_.BNO as bno1_0_0_, behavemode0_.BNAME as bname2_0_0_ from oa_behave behavemode0_ where behavemode0_.BNO=?</div><div>Hibernate: insert into oa_employeebehave (EMPID, BNO) values (?, ?)</div><div>Hibernate: insert into oa_employeebehave (EMPID, BNO) values (?, ?)</div><div>Hibernate: insert into oa_employeebehave (EMPID, BNO) values (?, ?)</div><div>看到生成了3个insert语句，增加了3个关联。</div><div>查询数据库增加了3条记录：</div><div>【】多对多关联的修改操作</div><div>多对多关联基本没有修改操作，当需要修改员工的爱好时，一般是将现有的爱好删除，在增加新的爱好即可。</div><div>如果执行：</div><div>es.addBehaves(&quot;1001&quot;, new int[] {1,2,3});</div><div>在执行：</div><div>es.addBehaves(&quot;1001&quot;, new int[] {1,2,4});</div><div>则关联的爱好会是：1,2,3,4 不是1,2,4.</div><div>因此在编程时，最好在增加前先清除原有的爱好：</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>//清除原有的爱好</div><div>em.getBehaves().clear();</div><div>for(int behaveNo:behaveNos) {</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工增加爱好对象</div><div>em.getBehaves().add(bm); //通过向员工的爱好集合里增加爱好对象，实现对关联表记录的增加。</div><div>}</div><div>注意：Hibernate使用缓存机制，缓存中保存了关联的信息，即使使用em.getBehaves().clear();对集合进行清除，而后当执行em.getBehaves().add(bm)操作，Hibernate会在提交时，检查最终的关联关系，生成最终结果的SQL语句。</div><div>如反复执行：es.addBehaves(&quot;1001&quot;, new int[] {1,2,4});</div><div>Hibernate并不会生成delete 语句。因为Hibernate检测到关联关系没有变化。</div><div>【】多对多关联的删除操作</div><div>1.删除一个爱好</div><div>删除多对多关联只要在对象的关联的多对多集合中删除指定的对象即可。</div><div>如下案例演示删除员工的一个指定爱好：</div><div>public void deleteBehave(String employeeId, int behaveNo) throws Exception{</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//取得指定的员工对象</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工增加爱好对象</div><div>em.getBehaves().remove(bm); //通过从员工的爱好集合里删除爱好对象，实现对关联表记录的删除。</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>}</div><div>测试：</div><div>es.deleteBehave(&quot;1001&quot;, 4);</div><div>执行结果：</div><div>可以看到生成3个select和一个delete SQL语句。</div><div>2.删除多个爱好</div><div>循环执行删除多个爱好即可。</div><div>//取得指定的员工对象</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>for(int behaveNo:behaveNos) {</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工删除爱好对象</div><div>em.getBehaves().remove(bm);</div><div>}</div><div>3.删除全部爱好</div><div>//为员工清空爱好集合，实现所有爱好的删除,</div><div>em.getBehaves().clear();</div><div>【】多对多关联的查询操作</div><div>多对多查询操作，主要是完成如下2类查询：</div><div>1.取得指定对象关联的对多集合，如查询指定员工的爱好列表，或查询有指定爱好的员工集合。这类操作可以通过多对多关联集合完成，也可以使用HQL查询API完成，使用HQL简单，是推荐的方法。</div><div>现在没有学到HQL，使用关联集合的实现方法案例代码如下：</div><div>//取得指定的员工</div><div>EmployeeModel em=session.get(EmployeeModel.class, id);</div><div>//取得员工的爱好集合(多对多关联属性）</div><div>Set&lt;BehaveModel&gt; behaveSet=em.getBehaves();</div><div>//将Set集合转换为List类型</div><div>List&lt;BehaveModel&gt; behaveList=new ArrayList&lt;BehaveModel&gt;(behaveSet);</div><div>返回List对象即可。</div><div>（代码中略去了Hibernate相同部分代码）</div><div>2.检查指定对象的关联集合中是否包含指定的对象，如检查员工是否有指定的爱好。</div><div>通过集合的方法contains 可以判断对象是否在集合中。</div><div>EmployeeModel em=session.get(EmployeeModel.class, employeeId);</div><div>//取得指定的爱好对象</div><div>BehaveModel bm=session.get(BehaveModel.class, behaveNo);</div><div>//为员工增加爱好对象</div><div>if(em.getBehaves().contains(bm){</div><div>&nbsp;&nbsp;result=true;</div><div>}</div><div>else{</div><div>&nbsp;&nbsp;result=false;</div><div>}</div><div>注：以上多对多关联操作的方法都需要熟悉，期末考试的重点内容。</div></div><div><br/></div><div>Hibernate关联映射（一对一关系）</div><div>一对一关联关系概述</div><ul><li><div>一般情况下，1000个字段是能满足基本上所有的业务对象需求，除非特殊的情况下，有个别对象的属性超过数据库的字段的限制，这时只能使用2个表联合起来完成一个对象的属性的存储，这时就需要一对一的关联了。</div></li><li><div>还有一种情况是，一个业务对象表中，部分字段经常进行修改操作，而另一部分字段基本上创建后，很少修改， 如果在一个表中，修改时就需要对所有字段进行修改。针对此种情况，可以考虑创建2个一对一关联的表，一个表存储经常修改的字段，另一个表存储不经常修改的字段。修改操作时只针对一个表进行操作，以便提高系统的性能。</div></li><li><div>一对一关联的Java表达</div></li><ul><li><div>双向一对一关联关系</div></li><li><div>个类间都包含对方的单个类属性变量</div></li><li><div>员工类定义案例代码，包含单个地址Model的属性变量address.</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public class EmployeeModel{</div><div>&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;//一对一关联， 员工的地址信息</div><div>&nbsp;&nbsp;private AddressModel address=null;</div><div>&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;</div><div>}</div><div>地址类定义代码如下，包含一个员工的属性变量employee,</div><div>public class AddressModel{</div><div>&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;//一对一关联</div><div>&nbsp;&nbsp;private EmployeeModel employee=null; //关联的员工</div><div>}</div><div>通过代码可以，员工类EmployeeModel和地址类AddressModel的关系是一对一关联关系。</div><div>本课程的OA项目中，员工类EmployeeModel和地址类AddressModel, 联系类ContactInfoModel都是双向一对一关联关系。</div></div><ul><ul><li><div>单向一对一关联关系：在上面的双向一对一关联关系中去掉其中一个关联属性的定义就构成单向一对一关系。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>如</div><div>public class EmployeeModel{</div><div>&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;//一对一关联， 员工的地址信息</div><div>&nbsp;&nbsp;private AddressModel address=null;</div><div>&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;</div><div>}</div><div>地址类定义代码如下，没有包含一个员工的属性变量employee,</div><div>public class AddressModel{&nbsp;&nbsp;}</div><div>此时就定义单向一对一关联。</div></div><ul><li><div>一对一关联的数据库表达</div></li></ul><div>关系数据库使用外键字段实现表间关联，默认情况下FK指向PK字段实现的多对一关联关系。如下2种情况下可以实现一对一的关联关系。</div><ul><ul><li><div>共享主键模式：此种模式下，FK字段做外键的同时，也是主键。</div></li><ul><li><div>create table oa_employeeaddress</div></li></ul><div>(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;EMPID varchar(20) primary key references oa_employee(EMPID),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;CITY varchar(30),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;Address varchar(200),</div><div>&nbsp;&nbsp;&nbsp;&nbsp;POSTCODE varchar(6)</div><div>);</div><li><div>独立外键模式：此种模式中表有独立的主键，也有独立的FK外键，但外键不能为空，且唯一。</div></li></ul></ul><div>一对一关联关系映射的注解类配置方式</div><ul><li><div>共享主键模式的一对一关联关系的映射配置</div></li></ul><div>对于共享主键模式（外键同时是主键），JPA提供了@OneToOne 和 &nbsp;&nbsp;&nbsp;@PrimaryKeyJoinColumn注解类实现一对一映射。</div><ul><ul><li><div>有外键兼主键侧的Model的映射配置</div></li><ul><li><div>对与外键对应的关联的Model类属性使用@OneToOne 和@PrimaryKeyJoinColumn进行注解。</div></li><li><div>由于主键同时做外键，主键的取值只能随着外键指向的表的主键值，必须使用Hibernate支持的foreign主键生成器生成。</div></li></ul></ul></ul><div>案例中员工地址表对应的地址Model的Java代码和注解类映射如下：</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>import org.hibernate.annotations.GenericGenerator;</div><div>import org.hibernate.annotations.Parameter;</div><div>//员工地址Model类</div><div>@Entity</div><div>@Table(name=&quot;oa_employeeaddress&quot;)</div><div>public class AddressModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;EMPID&quot;)</div><div>//定义主键生成策略，使用外键策略模式，其值取值关联属性employee对应的Model的主键</div><div>@GenericGenerator(name =&quot;PK_GEN&quot;,strategy=&quot;foreign&quot; ,parameters={@Parameter(name=&quot;property&quot;,value=&quot;employee&quot;)})&nbsp;&nbsp;</div><div>//引用上面定义的外键生成器，作为id的值生成器</div><div>@GeneratedValue(generator=&quot;PK_GEN&quot;)</div><div>private String id=null; //员工账号 主键同时是外键</div><div>private String city=null; //城市</div><div>private String address=null; //地址</div><div>private String postcode=null; //邮政编码</div><div>//一对一关联 (共享主键模式）</div><div>@OneToOne</div><div>@PrimaryKeyJoinColumn</div><div>private EmployeeModel employee=null; //外键关联的员工</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//省略get和set方法</div><div>}</div></div><ul><ul><li><div>主键侧的Model的映射配置</div></li></ul></ul><div>在主键所在的表对应的Model类中定义一对一关联属性，</div><div>并使用@OneToOne(mappedBy=”对方的关联属性名”) 实现一对一关联映射。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel</div><div>{</div><div>&nbsp;&nbsp;&nbsp;&nbsp;@Id</div><div>&nbsp;&nbsp;&nbsp;&nbsp;@Column(name=&quot;UUSERID&quot;)</div><div>private String userid=null;</div><div>... //其他属性定义</div><div>&nbsp;&nbsp;&nbsp;&nbsp;//一对一关联属性：员工地址Model类，直接使用外键方的属性的反向映射</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@OneToOne(cascade=CascadeType.ALL,mappedBy=&quot;employee&quot;)</div><div>private AddressModel address=null;</div><div>}</div></div><div>在主键字段所在的表的Model类上定义一对一关联属性，如员工的地址Model属性，并使用@OneToOne的mappedBy属性应用对方的映射实现本类的映射。注意：使用属性cascade=</div><div>CascadeType.ALL 指定对员工Model类的操作 级联对地址类的操作，即二者操作同步，增加员工就增加地址，修改员工就修改地址，删除员工就删除地址。按照这种级联操作模式，无需创建对地址类操作的业务层接口和实现类。</div><div>Model类和映射配置完成后，记住要在配置文件hibernate.cfg.xml中加入此Model类。</div><ul><li><div>独立主键和独立外键有非空和唯一性约束情况下的一对一关联关系的映射配置</div></li></ul><div>对于有独立主键和独立外键的实现的一对一关联的映射，关联的2个类分别定义自己的主键属性，以及各种的主键生成器。外键字段所在表对应的Model类中定义一对一关联属性，并联合使用@OneToOne和@JoinColumn修饰关联属性，主键字段所在的表对应的Model类，定义一对一关联属性，并使用@OneToOne(mappedBy=”对方属性”)完成映射。</div><ul><ul><li><div>外键所在表对应的Model类及其映射：</div></li></ul><div>员工信息表oa_employeecontactinfo有独立的自增主键和外键指向员工表主键EMPID，</div><div>员工信息类通过@OneToOne和@JoinColumn实现一对一关联。</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//员工的联系信息Model类 与员工Model类 一对一关联关系代码</div><div>@Entity</div><div>@Table(name=&quot;oa_employeecontactinfo&quot;)</div><div>public class ContactInfoModel implements Serializable {</div><div>@Id</div><div>@Column(name=&quot;CINO&quot;)</div><div>@GeneratedValue(strategy=GenerationType.IDENTITY)</div><div>private int no=0;</div><div>private String mail=null;</div><div>private String mobile=null;</div><div>private String qq=null;</div><div>@OneToOne</div><div>@JoinColumn(name=&quot;EMPID&quot;)</div><div>private EmployeeModel employee=null;</div><div>}</div><div>使用@OneToOne指明是一对一关联关联。</div><div>使用@JoinColumn指定关联的外键字段名。</div></div><ul><ul><li><div>主键所在表员工表对应的员工类及其映射配置</div></li></ul><div>通过@OneToOne实现到联系信息类的映射，并使用mappedBy属性指定由对方的映射的反向实现，使用cascade=CascadeType.&nbsp;<a href="mailto:%E9%80%9A%E8%BF%87@OneToOne%E5%AE%9E%E7%8E%B0%E5%88%B0%E8%81%94%E7%B3%BB%E4%BF%A1%E6%81%AF%E7%B1%BB%E7%9A%84%E6%98%A0%E5%B0%84%EF%BC%8C%E5%B9%B6%E4%BD%BF%E7%94%A8mappedBy%E5%B1%9E%E6%80%A7%E6%8C%87%E5%AE%9A%E7%94%B1%E5%AF%B9%E6%96%B9%E7%9A%84%E6%98%A0%E5%B0%84%E7%9A%84%E5%8F%8D%E5%90%91%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%BD%BF%E7%94%A8cascade=CascadeType.ALL">ALL</a>实现级联操作。</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Entity</div><div>@Table(name=&quot;oa_employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;//一对一关联，员工的联系信息</div><div>&nbsp;&nbsp;@OneToOne(mappedBy=&quot;employee&quot;,cascade= {CascadeType.ALL},fetch=FetchType.LAZY)</div><div>&nbsp;&nbsp;private ContactInfoModel contactInfo=null;</div><div>&nbsp;&nbsp;...</div><div>}</div></div><div>第7节 一对一关联关系映射的XML配置方式</div><hr/><div>第8节 一对一关联关系持久化编程</div><div>一对一关联对象的持久化操作，就是对关联对象的双方执行增加，修改，删除和查询操作时，如何级联操作关联的对象。这里使用OA案例中对员工Model对象的操作，查看一下对其关联的地址对象的操作。</div><ul><li><div>增加持久化操作:当设置员工类的关联属性地址的映射时，推荐使用如下映射：</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//一对一关联， 员工的地址信息</div><div>@OneToOne(cascade=CascadeType.ALL,mappedBy=&quot;employee&quot;)</div><div>private AddressModel address=null;</div></div><div>即级联操作为ALL，对员工的任何操作，都执行对关联的一对一对象相同的操作。</div><div>当执行测试类main方法中的如下代码：</div><div>//创建员工对象</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>EmployeeModel em=new EmployeeModel();</div><div>em.setId(&quot;8888&quot;);</div><div>em.setPassword(&quot;8888&quot;);</div><div>em.setName(&quot;刘鑫新&quot;);</div><div>em.setAge(28);</div><div>em.setSalary(7000);</div><div>em.setCardcode(&quot;230221829202020220&quot;);</div><div>//创建部门对象</div><div>DepartmentModel dm=new DepartmentModel();</div><div>dm.setNo(2);</div><div>//设置员工关联的部门</div><div>em.setDepartment(dm);</div><div>//创建员工的地址类对象</div><div>AddressModel am=new AddressModel();</div><div>am.setCity(&quot;大连&quot;);</div><div>am.setAddress(&quot;铁山西路&quot;);</div><div>am.setPostcode(&quot;116600&quot;);</div><div>//将地址类对象与员工类对象进行关联</div><div>em.setAddress(am);</div><div>am.setEmployee(em);</div><div>//取得员工业务接口对象</div><div>IEmployeeService es=new EmployeeServiceImpl();</div><div>//调用业务方法 增加</div><div>es.add(em);</div><div>在控制器台上显示如下SQL语句，说明同步执行对地址表的</div></div><div>将@OneToOne的属性cascade删除，如下的映射配置代码，就没有级联操作。</div><div>@OneToOne(mappedBy=&quot;employee&quot;)</div><div>private AddressModel address=null;</div><div>此时就需要程序员自己确定对关联对象的操作。</div><div>如在实现增加员工的方法时，要同步增加员工的地址，持久层代码需要修改为：</div><div>//增加员工和员工的地址</div><div>session.save(em);</div><div>session.save(em.getAddress());</div><ul><li><div>修改持久化操作:对员工的修改操作，自动完成对地址的修改。</div></li></ul><div>AddressModel am=new AddressModel();</div><div>am.setId(&quot;8888&quot;);</div><div>am.setCity(&quot;大连&quot;);</div><div>am.setAddress(&quot;三十里堡&quot;);</div><div>am.setPostcode(&quot;116650&quot;);</div><div>调用员工业务层的修改方法：</div><div>测试方法：es.modify(em);</div><div><br/></div><hr/><div>第6讲Hibernate持久化</div><div>第1节 Hibernate持久化编程</div><ul><li><div>Hibernate持久化编程API</div></li></ul><div>Hibernate API中的Session 要完成持久对象的增加，修改，删除和很据主键值取得单个持久对象的功能。Session对象不但能完成对单个持久对象的持久化操作，还能对其关联的持久对象进行各种级联操作，并通过映射配置对级联操作进行控制。</div><div>&nbsp;Hibernate中查询操作一般使用HQL和API中Query接口完成，下一讲将介绍Hibernate使用HQL和Query实现查询编程，本讲重点介绍Session接口对象完成CUDR的方法。</div><ul><li><div>Hibernate API中Session接口对象的取得</div></li></ul><div>Hibernate API的所有接口和类中核心完成持久化编程的接口是Session。Session代表的是Hibernate与数据库的链接对象，是与数据库交互的桥梁。</div><div>Session的取得是通过SessionFactory接口对象完成</div><ul><ul><li><div>在应用程序自己管理的事务环境中取得</div></li><ul><li><div>Session session=sessionFactory.openSession();</div></li></ul><li><div>在其他框架（如Spring）管理的事务环境下取得</div></li></ul><div>我们编写的业务层取得Spring打开的Session对象即可</div><div>Session session=sessionFactory.getCurrentSession();</div><ul><li><div>Hibernate Session的CUD方法</div></li></ul><div>Session接口提供了Hibernate对持久类（Model类）对象的持久化操作，即CUDR.</div><div>Session提供了如下对持久对象的增加，修改，删除等持久化方法。</div><ul><ul><li><div>Serializable save(Object object)&nbsp; 增加方法</div></li></ul></ul><div>传入持久类对象，执行insert写入到数据库表记录中。</div><div>返回Model类的主属性值，即主键值。</div><div>自动级联有save-update类型的关联对象。</div><div>注：持久类是指经过Hibernate映射配置的Model类，没有映射信息的Model类不是持久类。</div><ul><ul><li><div>void saveOrUpdate(Object object) 增加或修改方法</div></li></ul><div>传入持久类对象，如果表中没有对应记录，则执行增加方法，否则执行修改方法。</div><div>自动级联有save-update类型的关联对象</div><ul><li><div>void persist(Object object)：增加方法</div></li></ul><div>传入持久类对象，增加表记录，与save方法功能相同，级联操作cascade=&quot;persist&quot;的关联对象。此方法不返回主属性值。</div><ul><li><div>void update(Object object) &nbsp;修改方法</div></li></ul><div>传入持久类对象，修改对应的表记录，生成update SQL语句。</div><div>级联操作有cascade=&quot;save-update&quot;选项的关联对象。</div><ul><li><div>void delete(Object object) 删除方法</div></li></ul></ul><div>生成delete from语句，删除持久类对象对应的记录。</div><li><div>Hibernate Session的R（查询方法)</div></li><ul><li><div>Hibernate Session接口提供的查询方法，只能取得单个Model类对象。</div></li><li><div>&lt;T&gt; T get(Class&lt;T&gt; entityType,Serializable id) 查询指定的持久对象</div></li></ul><div>参数1：指定返回对象的类型，一般是Model类。</div><div>参数2：指定主键值。</div><div>返回：指定的Model类对象。</div><div>EmployeeModel em=session.get(EmployeeModel.class, id);</div><ul><li><div>&lt;T&gt; T load(Class&lt;T&gt; theClass,Serializable id) 查询方法</div></li></ul></ul><div>参数1：指定返回对象的类型，一般是Model类。</div><div>参数2：指定主键值。</div><div>返回：指定的Model类对象。</div><div>使用方法：EmployeeModel em=session.load(EmployeeModel.class, id);</div><ul><ul><li><div>void refresh(Object object):重新读取数据库，刷新持久Model类的属性值。</div></li></ul><li><div>Session的查询方法get 和load的区别 ：</div></li></ul><div>get是立即加载、load是延迟加载，Load返回代理对象，get返回Model对象。</div><div>get和load都是先从缓存中查找对象，如果有该对象的缓存，则不向数据库中查询，并且返回的是缓存中对象的状态(是代理对象就返回代理对象，是pojo对象就返回pojo对象)</div><div>当检索对象没有时，get返回null, load抛出异常。</div><div>项目中一般取得对象的查询都使用get方法。</div><div>只有当需要关联操作是，可以使用load方法取得有主键值的代理类对象去关联。</div><ul><li><div>session的其他方法</div></li></ul><div>LobHelper getLobHelper() 取得LOB辅助类方法。</div><div>LobHelper类用于管理Lob对象，我们将在Spring MVC文件上传中介绍基于SSH的文件上传处理。</div><ul><li><div>取得Query接口的方法</div></li></ul><div>Session提供了创建Query接口对象的方法。</div><div>&lt;T&gt; Query&lt;T&gt; createQuery(String queryString,Class&lt;T&gt; resultType)&nbsp;</div><div>参数1：要执行的HQL语句</div><div>参数2：查询返回的Model类类型</div><div>使用：</div><div>Query&lt;DepartmentModel&gt; query=session.createQuery(&quot;from DepartmentModel&quot;,DepartmentModel.class);</div><div>注意：新版的Hibernate的Query接口是：org.hibernate.query.Query， 旧版的Hibernate Query接口是：org.hibernate.Query， 推荐使用新版的Query接口。</div><ul><li><div>pubic void close() 关闭Session，释放连接。</div></li><li><div>void clear() 清除方法</div></li></ul><div>清除Session的缓存，清除所有查询的持久类对象，清除所有未提交的增加和修改操作。</div><div>Hibernate持久化对象的状态和转换</div><ul><li><div>Hibernate管理下的持久类对象（实际就是Model类对象）</div></li></ul><div>Hibernate把持久对象分为4种状态：临时状态，持久化状态，游离状态，删除状态。</div><ul><ul><li><div>临时态：Model对象在JVM中存在。</div></li></ul><div>在使用代理主键的情况下，主属性值通常为null</div><div>不处于session缓存，即没有与Session对象关联。</div><div>在数据库中没有对应的记录</div><ul><li><div>持久态：</div></li></ul><div>Model类对象在Java虚拟机中存在，主属性值不为null</div><div>处于session缓存中，Session没有关闭。</div><div>数据库中有对应的记录</div><div>Hibernate自动同步Model对象属性与记录的字段值。</div><div>在同一个session示例的缓存中，数据库中的每条记录只对应唯一的持久化对象</div><ul><li><div>游离态：</div></li></ul><div>Model类对象在Java虚拟机中存在，主属性值不为null</div><div>不处于session缓存中，Session已经关闭。</div><div>在数据库中有对应的记录。</div><div>Hibernate不会自动同步Model对象属性值与字段值。</div><ul><li><div>删除状态：</div></li></ul><div>Model对象在JVM中存在。</div><div>但在数据库中没有对应的记录</div><div>不再处于session缓存中，session已经关闭。</div><li><div>Hibernate持久对象状态的转换</div></li></ul><div><en-media hash="2084d20f7cb2fe71e7f05cd5e7f8e758" type="image/png"/></div><div>Hibernate管理下的持久对象的状态转换，主要是通过Session的方法和Query的方法完成。</div><div>第3节 Hibernate持久化对关联对象的级联操作</div><ul><li><div>Hibernate关联对象级联操作的概念</div></li></ul><div>级联操作就是指对一个持久类对象进行持久化操作（CUD）的时候，会把它相关联的持久类对象也一并进行相应的操作。</div><div>Hibernate支持的关联对象类型有多对一，一对多，多对多，一对一，级联操作也是针对这些关联关系的对象进行。</div><div><br/></div><ul><li><div>Hibernate级联操作的功能</div></li></ul><div>简化Hibernate的持久化操作编程。因为操作一个持久化读写，就会级联操作其关联的对象，不需要单独写对应的save，update，delete方法。</div><ul><li><div>不同关联关联关系下级联操作的配置原则</div></li><ul><li><div>多对一关联关系的级联操作</div></li></ul><div>对多方对象的操作，一般不级联操作一方对象。</div><div>如下员工类关联部门类：</div><div>//多对一关联关系, 外键字段对应的映射</div><div>@ManyToOne(fetch=FetchType.LAZY)</div><div>@JoinColumn(name=&quot;DEPTNO&quot;,insertable=true,updatable=true,nullable=true)</div><div>private DepartmentModel department=null; //关联的部门</div><div>不要设置级联操作，因为对多方的员工进行增，改，删除操作，不应该对关联的部门也执行同样的操作。\</div><ul><li><div>一对多关联关系的级联操作</div></li></ul></ul><div>一对多关联的级联操作，可以考虑级联删除，不要配置级联增加和修改。</div><div>如部门Model类关联员工：</div><div>//一对多的关联关系</div><div>@OneToMany(mappedBy=&quot;department&quot;,cascade={CascadeType.REMOVE},fetch=FetchType.LAZY)</div><div>private Set&lt;EmployeeModel&gt; employees=null; //部门</div><ul><ul><li><div>多对多关联关系的级联操纵</div></li></ul></ul><div>多对多关联关系一般不设置级联操作，如课程OA项目案例，员工和爱好是多对多关联关系，在映射配置时，不要设定级联操作。</div><ul><ul><li><div>一对一关联关系的级联操作</div></li></ul><div>对于一对一关联关系的级联操作，原则上在主键字段侧的Model类对象上去级联操作外键字段所在表对应的Model类。</div><div>在课程的OA项目案例中，员工类（EmployeeModel）是主键字段方所在的表对应的持久类，AddressModel和ContactInfoModel都是外键字段所在的表对应的Model类，因此配置级联操作是员工类级联操作地址类和联系信息类。</div><div>//一对一关联， 员工的地址信息（共享主键方式）</div><div>@OneToOne(mappedBy=&quot;employee&quot;,cascade= {CascadeType.ALL},fetch=FetchType.LAZY)</div><div>private AddressModel address=null;</div><div>//一对一关联，员工的联系信息（独立外键方式，外键唯一且不为空）</div><div>@OneToOne(mappedBy=&quot;employee&quot;,cascade= {CascadeType.ALL},fetch=FetchType.LAZY)</div><div>private ContactInfoModel contactInfo=null;</div><li><div>JPA注解类方式设置关联关联的级联操作配置</div></li></ul><div>使用注解类设置关联关系时，都支持属性cascade={CascadeType集合}</div><div>取值是CascadeType的枚举类型常量：</div><div>CascadeType.PERSIST：级联新增（又称级联保存）：对order对象保存时也对items里的对象也会保存。对应Session的save和persist方法。</div><div>CascadeType.MERGE：级联合并（级联更新）：若items属性修改了那么order对象保存时同时修改items里的对象。对应Session的merge和update方法。</div><div>CascadeType.REMOVE：级联删除：对order对象删除也对items里的对象也会删除。对应Session的delete方法。</div><div>CascadeType.REFRESH：级联刷新：获取order对象里也同时也重新获取最新的items时的对象。对应Session的refresh(object)方法有效。即会重新查询数据库里的最新数据。</div><div>CascadeType.ALL：包含所有以上四种。</div><ul><li><div>XML方式关联关系映射配置的级联操作配置</div></li></ul><div>Hibernate持久对象及关联对象的检索策略</div><ul><li><div>检索策略的概念</div></li><ul><li><div>.检索的概念:Hibernate检索就是查询操作，是指Hibernate执行查询时，发送SQL到数据库，取得返回的记录集对象，将记录的字段值取出并设置到持久类对象属性的过程。</div></li><li><div>检索策略的概念:Hibernate检索策略是指在执行检索时，什么时候把字段写入到对象属性。</div></li></ul><li><div>Hibernate检索策略的方式</div></li><ul><li><div>立即检索:采用立即检索策略，会把被检索的对象，以及和这个对象关联的对象都加载到缓存中。Session的get方法使用就是立即检索策略。</div></li><ul><ul><li><div>优点在于，频繁使用的对象会被加载到缓存中，程序调用很方便，也很及时。</div></li><li><div>缺点就是，占用的内存过多，而且数据库访问的次数也会很频繁，效率低下。</div></li></ul></ul><li><div>延迟检索:</div></li></ul></ul><div>采用延迟检索策略，就不会加载关联对象的内容。直到第一次调用关联对象时，才去加载关联对象。在不涉及关联类操作时，延迟检索策略只适用于Session的load方法。涉及关联对象的查询操作时，延迟检索策略也适用于get，list等操作。</div><div>在类级别操作时， 延迟检索策略，Hibernate执行查询操作，会创建一个代理对象，不会去执行SQL语句查询数据库，并且只设置主键对应的属性值，不检索对象的其他属性，只用当第一次访问其他属性时（Session没有关闭），才回访问数据库去加载内容。在关联对象查询操作时，延迟检索策略，只加载类本身，不加载关联类对象，直到第一次调用关联对象时，才去加载关联对象。</div><ul><li><div>检索策略的使用地点</div></li></ul><div>检索策略可以</div><div>1.类级别：设置Model类的检索策略。</div><div>2.普通属性级别：设置属性的检索策略。</div><div>3.关联属性级别：设置关联属性的检索策略。</div><div>4.HQL语言中：此内容将在高级查询中关联查询中讲解。（关联的fetch查询）</div><ul><li><div>Hibernate的检索策略设定</div></li><ul><li><div>类级别检索策略</div></li><div>Hibernate持久类的默认检索策略是延迟检索。</div><div>通过在映射配置时设置默认的检索策略：</div><div>（1）JPA没有提供注解方式。</div><div>（2）XML方式映射配置：&lt;class name=&quot;EmployeeModel&quot; table=&quot;oa_employee&quot; lazy=&quot;true&quot;&gt;</div><div>类级别检索策略总结：</div><ul><li><div>类级别的lazy属性默认为true，但是只对load方法有效。</div></li><li><div>只要在获取类的非ID属性时，才会发出sql语句</div></li><li><div>发生懒加载时，想要在session关闭之后获取非ID属性会发生懒加载异常（LazyInitializationException）</div></li><li><div>Hibernate.initialize(proxy)可以显式的初始化代理对象</div></li></ul><li><div>普通属性级别检索策略</div></li></ul><div>属性级别的默认检索策略是lazy, 延迟检索。</div><div>属性级别的延迟检索设置：</div></ul><div>注解类方法：</div><div>@Basic(fetch=FetchType.LAZY)</div><div>使用案例</div><div>@Basic(fetch=FetchType.EAGER)</div><div>@Column(name=&quot;EMPNAME&quot;)</div><div>无论属性的 lazy 属性是 true 还是 false, Session 的 get() 方法及 Query 的 getResultList()和getSingleResult()&nbsp;方法在类级别总是使用立即检索策略。</div><div>若元素的 lazy 属性为 true 或取默认值, Session 的 load() 方法不会执行查询数据表的 SELECT 语句, 仅返回代理类对象的实例, 该代理类实例有如下特征:</div><ul><ul><ul><li><div>由Hibernate 在运行时采用 CGLIB 工具动态生成</div></li><li><div>Hibernate 创建代理类实例时, 仅初始化其主键属性</div></li><li><div>在应用程序第一次访问代理类实例的非主键属性时, Hibernate 会初始化代理类实例</div></li></ul><li><div>关联属性级别检索策略设置</div></li></ul><div>所有关联属性都可以设置检索策略。</div><ul><ul><li><div>注解类方式设置：</div></li></ul><div>@ManyToOne(fetch=FetchType.LAZY)</div><div>@OneToMany(fetch=FetchType.LAZY)</div><div>@ManyToMany(fetch=FetchType.LAZY)</div><div>@OneToOne(fetch=FetchType.LAZY)</div><li><div>Hibernate检索策略的使用原则</div></li></ul><div>1.尽可能使用延迟检索。</div><div>2.表中的大对象数据一定要延迟检索，只有在需要的时候，推荐单独编程取得。如在业务层方法中定义取得大对象数据的方法。</div><div>public byte[] getPhotoById(String id) throws Exception;</div><div>3.关联属性一定要延迟检索，只有需要的时候，可以通过编程取得。</div><div>业务层可以编写多个查询方法，有带关联对象查询，也有不带关联对象查询的。</div><div><en-media hash="8a6c74654c04c83936a2e4ce03f58a38" type="image/png"/></div></ul><hr/><div>第7讲Hibernate简单查询：简单查询是指针对单个Model对象的查询，没有关联，没有子查询，没有分类汇总的查询。</div><div>第1节Hibernate查询基础</div><ul><li><div>Hibernate查询的概念和功能</div></li></ul><div>Hibernate的查询功能是指通过Hibernate提供的机制完成从数据库检索指定的记录到生成Model类对象的过程。</div><div>Hibernate能自动完成读取Model类对应表的记录，并创建Model类对象，将字段值写入到持久类属性中。</div><ul><li><div>Hibernate的查询的实现方法</div></li><ul><li><div>OID检索方式（也称为主键检索方式）</div></li></ul></ul><div>OID（Object IDetified）是使用Session API的get和load方法，根据给定的主键值取得单个的持久对象的方法。该方法只能返回一个持久对象，无法返回对象的列表，更不能执行复杂的查询功能。</div><ul><ul><li><div>导航对象图检索方式</div></li></ul><div>&nbsp;此种检索方式根据已经加载的对象，利用其所关联的对象，导航到其他对象。可使用的关联关系包括多对一，一对多，多对多，一对一。</div><div>例如查询指定部门的员工列表，就可以根据指定的部门编号取得指定的部门持久对象，再根据部门与员工的一对多关联关系取得该部门的员工列表。如下代码简要示意了此需求编程。</div><ul><div>DepartmentModel dm=session.get(DepartmentModel.class,1); //取得部门1的持久对象</div><div>Set&lt;EmployeeModel&gt; employeeList=dm.getEmployees(); //取得部门所有的员工列表</div><div>但是使用对象导航图方式无法实现复杂的检索，这就需要HQL，QBC或原始SQL方式</div><li><div>HQL语言和Query接口实现查询</div></li></ul><div>这是Hibernate最常用的方式，它使用Query API和HQL语言组合实现复杂的查询功能。HQL（Hibernate Query Language）是面向对象的查询语言，它和SQL查询语言有些相似。Hibernate提供的各种检索方式中，HQL是使用最广的一种检索方式。它具有以下功能：</div><ul><ul><li><div>1）在查询语句中设定各种查询条件。</div></li><li><div>2）支持投影查询，即仅检索出对象的部分属性。</div></li><li><div>3）支持分页查询。</div></li><li><div>4）支持分组查询，允许使用group by和having关键字。</div></li><li><div>5）提供内置聚集函数，如sum()、min()和max()。</div></li><li><div>6）能够调用用户定义的SQL函数。</div></li><li><div>7）支持子查询，即嵌套查询。</div></li><li><div>8）支持动态绑定参数</div></li></ul><li><div>QBC（Qurey By Criteria）检索方式。</div></li></ul></ul><div>QBC API提供了检索对象的另一种方式，它主要由Criteria接口、Criterion接口和Expression类组成，它支持在运行时动态生成查询语句。</div><div>目前软件开发人员由于熟悉SQL语言的关系，普遍都特别熟悉使用HQL方式，对QBC模式使用普遍不熟练。</div><div>第2节&nbsp;HQL查询语言基础</div><ul><li><div>HQL和Query接口实现查询的编程步骤</div></li><ul><li><div>1.定义查询功能的HQL语句。</div></li><li><div>2.创建执行HQL语句的Query接口对象。</div></li><li><div>3.设置HQL中的参数值。</div></li><li><div>4.设置查询的返回结果限制，如个数，检索的开始位置等。</div></li><li><div>5.执行查询方法getResultList()，返回List结果，或执行getSingleResult()方法，返回单个对象结果。</div></li><li><div>使用此方法的关键是编写查询的HQL语句。</div></li></ul><li><div>HQL概念</div></li></ul><div>HQL是Hibernate Quqery Language的缩写，即Hibernate查询语言。</div><div>HQL是针对Hibernate管理的持久类对象的查询语言，也称为面向对象查询语言。</div><div>我们知道SQL是面向表和字段的查询语言，操作的元素是表和字段。</div><div>如: select DEPTCODE, DEPTNAME from oa_department where DEPTNO=1</div><div>HQL操作的元素是持久类对象和对象的属性。</div><div>HQL执行与上面SQL类似的查询语句是：</div><div>&nbsp;select &nbsp;dm.code, dm.name from DepartmentModel dm where dm.no=1</div><ul><li><div>HQL的语法&apos;</div></li></ul><div>HQL参考SQL的语法，与SQL语法相同，都是由6个子句组成。</div><div>[select 子句]</div><div>from 子句</div><div>[where 子句]</div><div>[group by 子句]</div><div>[having 子句]</div><div>[order by子句]</div><div>其中：[]表示是可省略的子句</div><div>String hql=&quot;from DepartmentModel dm&quot;;</div><div>其功能就是查询所有部门类的对象， 以及所有的属性（因为没有select子句）。</div><div>&nbsp;String hql=&quot;select dm.code, dm.name from DepartmentModel dm&quot;;</div><div>功能：查询所有部门对象，只查询code和name属性，因为select中只包含这2个属性。</div><ul><li><div>from子句:HQL中唯一不能省略的是from子句，其功能是指定要检索的持久类的对象，即查询哪个持久类的对象。</div></li></ul><div>当只查询单个类的对象时。</div><div>from Model类名 as 对象名</div><div>from Model类名 对象名</div><div>其中：对象名表示对象的别名，可以随意命名，推荐使用小写字母，并且是Model类各个单词的首字母。一般不需要写as</div><ul><ul><li><div>关联多个对象的查询语法：from Model类名 对象别名 inner join 对象别名.关联属性 关联对象别名 .....</div></li></ul><div>Hibernate中类间的关联是通过关联属性完成，类似的查询使用HQL如下：</div><div>from EmployeeModel em inner join em.department bm</div><div>此查询实现员工Model类和部门Model类的关联查询，取得二个类的所有对象的所有属性。</div><ul><li><div>限制:HQL的from子句不能使用子查询语句。这一点功能不如SQL，SQL中from中可以包含子查询。</div></li></ul><li><div>where子句:对检索的对象进行筛选。</div></li></ul><div>where 逻辑表达式</div><div>当逻辑表达式为true时，Model对象满足检索条件，出现在查询结果中。</div><div>Where中的表达式与SQL中使用的表达式基本相同。</div><ul><ul><li><div>.where子句中常用的表达式运算</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>比较运算：=， &gt;, &gt;=, &lt; , &lt;= , &lt;&gt;, !=</div><div>String hql=&quot;from EmployeeModel em where&nbsp;&nbsp;em.age&gt;=30&quot;;</div><div>（2）逻辑运算：and,&nbsp;&nbsp;or,&nbsp;&nbsp;not</div><div>String hql=&quot;from EmployeeModel em where&nbsp;&nbsp;em.age&gt;=30 and em.age&lt;=40&quot;;</div><div>（3）区间运行：in, not in</div><div>String hql=&quot;from EmployeeModel em where em.age in&nbsp;&nbsp;(20,30,40)&quot;;</div><div>String hql=&quot;from EmployeeModel em where em.age&nbsp;&nbsp;not in (20,30,40)&quot;;</div><div>（4）模糊运算（匹配运算）: like, not like</div><div>String hql=&quot;from EmployeeModel em where em.name&nbsp;&nbsp;like ‘刘%’&quot;;</div><div>String hql=&quot;from EmployeeModel em where em.name&nbsp;&nbsp;not like ‘王%’&quot;;</div><div>5. 空运算： is null , is not null</div><div><br/></div><div>String hql=&quot;from EmployeeModel em where&nbsp;&nbsp;em.department is not null &quot;;</div><div>（6）集合判断是否为空运算：is empty, is not empty</div><div>可以判断对象的集合属性是否为null，或空集合，没有元素。</div><div>String hql=&quot;from EmployeeModel em where&nbsp;&nbsp;em.behaves is empty &quot;;</div><div>其中behaves是员工对象的爱好集合属性。上面的HQL是查询没有任何爱好的员工对象。</div><div>String hql=&quot;from EmployeeModel em where&nbsp;&nbsp;em.behaves is not empty &quot;;</div><div>查询有任意爱好的员工对象，只要有1个爱好即可。</div></div><ul><li><div>select子句</div></li></ul><div>在Hibernate的HQL中使用最少的就是select子句。</div><div>默认情况下，如果省略select子句，则默认查询Model类对象的所有属性，返回的就是Mode类对象的集合。</div><ul><div>select 对象名.属性, 对象名.属性,... from Model类名 对象名</div><div>Select 函数(), 函数(), 对象名.属性 from Model类名 对象名</div><ul><li><div>返回结果</div></li></ul></ul><div>（1）如果没有select子句，或使用select *，则返回List&lt;Model类&gt;类型的对象集合。</div><div>（2）select单个属性（或函数）， 则返回包含此属性类型的对象的集合</div><div>语句：select em.name from EmployeeModel em, 返回：List&lt;String&gt; 包含String对象的集合，因为name的类型是String</div><div>语句：select em.age from EmployeeModel em ; 返回：List&lt;Integer&gt;, 因为 age是int类型。</div><div>语句：select em.salary from EmployeeModel em; 返回：List&lt;Double&gt;，由于salary是double类型。</div><div>语句：select em.department from EmployeeModel em; 返回：List&lt;DepartmentModel&gt;，由于department属性是关联到DepartmentModel的对象。</div><div>语句：select count(em.id) from EmployeeModel em, 返回：List&lt;Long&gt;, Hibernate规定count()函数返回固定是Long类型。</div><div>&nbsp;</div><div>&nbsp;</div><div>（3）select多个属性(多于1个），则返回包含Object[]的List集合。</div><div>语句：select em.name, em.age from EmployeeModel em; 返回：List&lt;Object[]&gt;, 其中每个对象是一个2维数组，Object[0] 保存name属性值，Object[1] 保存age属性值。</div><div>&nbsp;</div><div>注意：select子句一般用于取得统计信息的值，如</div><div>Select count(em.id) from EmployeeModel em; &nbsp;取得员工的人数</div><div>Select sum(em.salary) from EmployeeModel em; 取得员工的汇总工资</div><div>Select min(em.joinDate) from EmployeeModel em; 查询最早入职的日期</div><ul><li><div>group by子句:功能：对查询结果进行分类</div></li><div>语法：group by 对象名.属性名,对象名.属性名,...</div><div>详细讲解参考下一讲 HQL高级查询。</div><li><div>having子句:对分类后的查询结果进行再筛选</div></li><li><div>order by子句:对查询结果按指定的属性进行排序。</div></li></ul><div>from Model类名 对象名order by 对象名.属性名 [asc|desc],对象名.属性名 [asc|desc]</div><div>注:如果省略asc或desc，默认按属性的升序排列，值从小到大。</div><div>&nbsp;&nbsp;asc 升序， desc 降序 从大到小。</div><div>第3节Query接口的方法和使用编程</div><div>Hibernate5.x推荐使用Query接口（org.hibernate.query.Query），注意：旧版本的Hibernate使用。org.hibernate.Query，切记使用新版的Query接口。</div><ul><li><div>Query对象的取得:</div></li></ul><div>在Hibernate中通过Session对象的createQuery方法创建执行HQL语句的Query接口对象。</div><div>Session接口创建Query接口对象的方法语法：</div><div>public &lt;T&gt; Query&lt;T&gt; createQuery(String hql,Class&lt;T&gt; resultType)&nbsp;;</div><ul><li><div>使用HQL和Query执行查询的编程流程</div></li><ul><li style="margin-left: 15pt; margin-right: 0pt; text-indent: 0pt; font-size: 16pt;"><div>取得SessionFactory对象</div></li></ul></ul><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>其中：HibernateFactory是我们自己编写的单例模式工厂类。</div><ul><ul><li><div>打开一个Session对象</div></li></ul></ul><div>Session session=sf.openSession();</div><ul><ul><li><div>开启新的事务</div></li></ul></ul><div>Transaction tx=session.beginTransaction();</div><ul><ul><li><div>定义查询HQL语句</div></li></ul></ul><div>String hql=”from EmployeeModel em”; //无参数的HQL语句</div><div>或</div><div>String hql=”from EmployeeModel em where em.age between ? and ?”; //有参数的HQL语句</div><ul><ul><li><div>创建执行HQL的Query对象， 注意查询对象的类型</div></li></ul></ul><div>Query&lt;EmployeeModel&gt; query=session.createQuery(hql,EmployeeModel.class);</div><ul><ul><li><div>设置HQL中的参数（如果HQL没有参数，省略这一步）</div></li></ul></ul><div>Hibernate支持位置参数和命名参数， ?是位置参数。下面的代码是设置位置参数。</div><div>query.setParameter(0, min);</div><div>query.setParameter(1, max);</div><ul><ul><li><div>执行查询，取得查询结果</div></li></ul></ul><div>List&lt;EmployeeModel&gt; list=query.getResultList();</div><ul><ul><li><div>提交事务</div></li></ul></ul><div><a href="http://tx.commit%28%29%3b/">tx.commit();</a></div><ul><ul><li><div>关闭session</div></li></ul></ul><div>session.close();</div><div>注意：考试时就考执行HQL查询的基本编程，就是这些步骤。</div><ul><li><div>HQL和Query查询的带参数查询案例</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>员工业务层中定义了取得年龄在min和max之间的员工列表业务方法。</div><div>//取得员工年龄在min和max之间的员工列表</div><div>@Override</div><div>public List&lt;EmployeeModel&gt; getListByAgeScope(int min, int max) throws Exception {</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//定义查询HQL语句</div><div>String hql=&quot;from EmployeeModel em where em.age between ? and ?&quot;;</div><div>//创建执行HQL的Query接口对象</div><div>Query&lt;EmployeeModel&gt; query=session.createQuery(hql,EmployeeModel.class);</div><div>//设置HQL的参数</div><div>query.setParameter(0, min);</div><div>query.setParameter(1, max);</div><div>//提交查询，取得查询结果</div><div>List&lt;EmployeeModel&gt; list=query.getResultList();</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return list;</div><div>}</div></div><div><br/></div><ul><li><div>Query接口的方法&nbsp;:</div></li><ul><li><div>取得查询结果的方法:</div></li><ul><li><div>default List&lt;R&gt; getResultList()</div></li></ul><div>执行HQL，取得查询的Model对象列表。</div><div>如：List&lt;EmployeeModel&gt; list=query.getResultList();</div><ul><li><div>List&lt;R&gt; list()</div></li></ul><div>此方法是过时的查询方法，是旧版的Query中的方法，新的Query接口为兼容旧版保留的此方法，不推荐使用。</div><ul><li><div>default R getSingleResult()</div></li></ul><div>当HQL的查询能保证只有一个对象的查询结果时，可以使用uniqueResult()取得返回的单个对象。如果HQL查询返回多于1个对象的时候，将抛出异常。</div></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>tring hql=”from EmployeeModel em where em.id=:empid”;</div><div>Query&lt;EmployeeModel&gt; query=session.createQuery(hql,EmployeeModel.class);</div><div>query.setParameter(“empid”,”1001”);</div><div>EmployeeModel em=query.getSingleResult();</div><div>此HQL通过员工的主键属性进行查询，因此如果有查询结果，只能是单个员工对象，可以使用getSingleResult()方法，直接取得查询的单个对象。</div></div><ul><ul><ul><li><div>R uniqueResult():与getSingleResult()方法相同，此方法是旧版本Query接口(org.hibernate.Query)的方法，推荐使用getSingleResult()方法，不要使用uniqueResult()方法。</div></li></ul><li><div>设置HQL参数的方法</div></li></ul><div>HQL经常需要设置查询参数。HQL支持2种类型参数</div><ul><ul><li><div>位置参数，使用问号 ？</div></li><ul><li><div>如：String hql=&quot;from EmployeeModel em where em.age between ? and ?&quot;;</div></li></ul><div>HQL的第1个？的位置是0， 第2个？号的位置是1，以此类推。</div><div>记住HQL的？位置参数是从0开始，而JDBC中PreparedStatement运行的SQL位置参数是从1开始。</div><li><div>命名参数，使用 :参数名</div></li><ul><li><div>String hql=&quot;from EmployeeModel em where em.age between :min&nbsp;and :max&quot;;</div></li><li><div>此HQL有2个命名参数，分别是min和max， 参数名中没有:号。</div></li><ul><li><div>当HQL有参数时，在使用Query接口的getResultList()方法和getSingleResult()方法进行查询之前，必须使用设置参数的方法，把HQL的所有参数值设置完成，才能执行查询，否则抛出异常。</div></li></ul></ul><li><div>为设置HQL的参数，Query分别提供了设置位置参数和命名参数的重载方法setParameter，</div></li><ul><li><div>Query&lt;R&gt; setParameter(int position, Object value)</div></li><ul><li><div>第1个参数是int的setParameter方法是用于设置位置参数。</div></li><ul><li><div>query.setParameter(0, 30);&nbsp;设置第1个参数值为30</div></li><li><div>query.setParameter(1,40);&nbsp;&nbsp;设置第2个参数值为40</div></li></ul></ul><li><div>Query&lt;R&gt; setParameter(String name,Object value)</div></li><ul><li><div>setParameter方法中的第1个参数是String类型的是用于设置命名参数的，name是参数的名，value是参数的值。实际项目开发，推荐使用命名参数</div></li><ul><li><div>对于HQL语句：</div></li><li><div>String hql=&quot;from EmployeeModel em where em.age between :min&nbsp;and :max&quot;;</div></li><li><div>就需要使用命名参数：</div></li><li><div>query.setParameter(“min”, 30);&nbsp;设置min参数的值为30</div></li><li><div>query.setParameter(“max”,40);&nbsp;&nbsp;设置max参数的值为40</div></li></ul></ul><li><div>设置结果行数的方法</div></li><ul><li><div>Query&lt;R&gt; setMaxResults(int maxResult)</div></li><ul><li><div>设置查询的对象的最大个数。可以限定查询对象的个数。</div></li><li><div>该方法要在执行查询方法之前设定，执行查询方法后设置无效。</div></li><ul><li><div>Query&lt;EmployeeModel&gt; query=session.createQuery(hql,EmployeeModel.class);</div></li><li><div>query.setMaxResults(10); //只查询10个对象</div></li><li><div>List&lt;EmployeeModel&gt; list=query.getResultList();&nbsp;//查询的对象将只有最多10个对象</div></li><li><div>如果查询的对象不足10个，以实际对象个数为准。</div></li><li><div>如果没有指定从哪个对象开始查询，默认从第1个对象开始（位置是0）。</div></li></ul></ul></ul><li><div>设置结果开始位置的方法</div></li><ul><li><div>Query&lt;R&gt; setFirstResult(int startPosition)</div></li><ul><li><div>设置检索对象的开始位置。当执行HQL查询时，如果查询结果是多个对象，会自动按照Order by 指定的排序规则进行排序，如果没有使用order by会按照SQL查询的顺序进行排序。</div></li><li><div>第1个对象的位置是0， 最后一个对象的位置是个数-1.</div></li><li><div>该方法要求在执行查询的方法之前设置，执行查询方法后设置无效。</div></li><li><div>Query&lt;EmployeeModel&gt; query=session.createQuery(hql,EmployeeModel.class);</div></li><li><div>//设置HQL的参数</div></li><li><div>query.setParameter(0, min);</div></li><li><div>query.setParameter(1, max);</div></li><li><div>//设置检索的开始位置：</div></li><li><div>query.setFirstResult(5); //从第6个对象开始检索。</div></li><li><div>//提交查询，取得查询结果</div></li><li><div>List&lt;EmployeeModel&gt; list=query.getResultList();&nbsp;//查询的对象将不包含1-5的对象</div></li></ul></ul><ul><ul><li><div>结合使用setFirstResult和setMaxRsults方法，可以实现分页查询（考试重点）。</div></li><ul><li><div>部门业务实现类DepartmentServiceImpl中的使用分页方式取得所有部门列表的方法</div></li><li><div>//取得所有部门列表的方法，分页模式。</div></li></ul></ul></ul></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>// 参数：rows: 每页显示的个数， page：要取得的第几页的对象</div><div>@Override</div><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(int rows, int page) throws Exception {</div><div>//创建SessionFactory对象</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//定义HQL查询语句</div><div>String hql=&quot;from DepartmentModel&quot;;</div><div>//创建运行HQL的Query接口对象</div><div>Query&lt;DepartmentModel&gt; query=session.createQuery(hql,DepartmentModel.class);</div><div>//设置检索对象的开始位置</div><div>query.setFirstResult(rows*(page-1));</div><div>//设置检索的对象的个数</div><div>query.setMaxResults(rows);</div><div>//调用Query接口的查询方法，取得查询的Model对象集合</div><div>List&lt;DepartmentModel&gt; list=query.getResultList();</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return list;</div><div>}</div><div>分页的计算公式：起始位置：rows*(page-1),&nbsp;&nbsp;个数： rows</div></div><ul><ul><li><div>其他方法：Query接口的其他方法不是核心功能方法。</div></li><ul><li><div>Query&lt;R&gt; setTimeout(int timeout) 设置查询执行的超时时间。int整数类型，单位：秒</div></li></ul><div>要在实现查询方法之前设置。</div><div>query.setTimeout(5); //设置超时时间为5秒。Query&lt;R&gt; setTimeout(int timeout) 设置查询执行的超时时间。int整数类型，单位：秒</div><div>要在实现查询方法之前设置。</div><div>query.setTimeout(5); //设置超时时间为5秒。</div></ul></ul><hr/><div>第8讲 Hibernate高级查询</div><div>第1节 Hibernate HQL关联查询概述</div><ul><li><div>SQL的关联查询类型</div></li><ul><li><div>SQL支持的关联查询类型</div></li><ul><li><div>内关联查询（inner join）</div></li><li><div>外关联查询 (outer join)</div></li><li><div>交叉关联查询 (cross join)</div></li></ul><li><div>SQL内关联查询：又简称简单连接或自然连接。内连接使用比较运算符对两张表中的数据（FK和PK）进行比较，并列出与连接条件匹配的数据行，组成新的记录，也就是说在内连接查询中，只有满足条件的记录才能出现在查询结果中。</div></li></ul><div>SQL的内关联查询是要求查询的2个表之间一个表的FK字段不为空，与另一个表的PK字段对应的情况下，才满足关联条件。</div><ul><ul><li><div>SQL内关联查询的语法：</div></li><ul><li><div>select 字段列表 from 左表名 左别名 inner join 右表名 右别名 on 左别名.关联字段=右别名.关联字段</div></li><li><div>使用内关联查询，只有关联的表的FK必须与PK值相同的记录才能查询出来，无法查询出没有关联的记录。</div></li></ul><li><div>非标准语法：</div></li><li><div>select 字段列表&nbsp;from 左表名 左别名 , 右表名 右别名&nbsp;where &nbsp;左别名.关联字段=右别名.关联字段</div></li></ul><li><div>SQL的外关联查询</div></li><div>当不要求关联的2个表的外键与主键字段值必须相等的查询称为外关联查询。</div><div>外关联查询通常需要查询一个的表的所有记录，另一个表是否对应的记录都可以，即一个的FK字段值可以为空。</div><ul><li><div>SQL外关联查询的类型：</div></li><ul><li><div>左外关联查询（left outer join）：查询左边表的所有记录，右边表有无对应记录均可。</div></li><ul><li><div>语法：select ....from 左表名 左别名 left outer join 右表名 右别名 on 左别名.关联字段=右别名.关联字段</div></li></ul></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>查询的案例：查询员工的所有记录的姓名和他的部门名称，即使没有部门也可以。</div><div>select a.empname, b.deptname</div><div>from oa_employee a left outer join oa_department b on a.deptno=b.deptno</div></div><div><br/></div><ul><ul><ul><ul><li><div>右外关联查询(right outer join)</div></li><ul><li><div>查询右边表的所有记录，左边表可以没有对应的记录。</div></li><li><div>select 字段列名&nbsp;from 左表名 左别名 right outer join 右表名 右别名 on 左别名.关联字段=右别名.关联字段</div></li></ul></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>select a.empname, b.deptname</div><div>from oa_employee a right outer join oa_department b on a.deptno=b.deptno</div></div><div><br/></div><ul><ul><ul><ul><li><div>全外关联查询（full outer join）</div></li><ul><li><div>查询关联的双方表的所有记录，对方无关联记录也可以。</div></li><li><div>select 字段列表&nbsp;from 左表名 左别名 full outer join 右表名 右别名 on 左别名.关联字段=右别名.关联字段</div></li><li><div>不是所有数据库都支持全外关联查询，MySQL不支持，oracle支持。</div></li></ul></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>select a.empname, b.deptname</div><div>from oa_employee a full outer join oa_department b on a.deptno=b.deptno</div></div><ul><ul><li><div>SQL的交叉关联查询</div></li><ul><li><div>当2个表关联查询时，没有指定关联条件时，会生成二者记录交叉关联的结果，称为交叉关联查询。查询的结果也称为笛卡尔积（Cartesian product）。</div></li></ul><div>注意：交叉关联查询是没有任何意义的，我们在做关联查询时，一定要避免产生交叉关联。</div><div>避免交叉关联查询的原则：N个表关联查询，要求有N-1个关联条件。</div></ul><li><div>HQL关联查询类型：与SQL类似，HQL支持与SQL类似的关联查询类型，额外增加了HQL专有的抓取关联查询。</div></li><ul><li><div>普通内关联查询（inner join）</div></li><li><div>抓取内关联查询（inner join fetch）</div></li><li><div>隐式内关联查询</div></li><li><div>外关联查询（outer join）：左外关联（left），右外关联(right)，全外关联(full)</div></li><li><div>抓取外关联查询（outer join fetch）:仅支持抓取左外关联查询。</div></li><li><div>交叉关联查询（cross join）</div></li></ul><li><div>HQL与SQL关联查询的区别：SQL关联查询中关联关系是通过FK指向PK字段实现。</div></li></ul><div>select em.name, dm.name</div><div>from EmployeeModel em&nbsp;inner join em.department dm</div><div>可见关联条件是 em.department, 即员工管理的部门对象。</div><div>HQL中关联关联不再需要on 语句。</div><div>第2节 HQL普通内关联查询和隐式内关联查询</div><ul><li><div>普通内关联查询概念：HQL的内关联查询与SQL的内关联查询的功能是一样，语法也相近，只有关联的属性不为null，才能取得关联的双方的对象。</div></li><li><div>HQL普通内关联查询语法：</div></li><ul><ul><ul><li><div>[select 子句]</div></li><li><div>from Model类名 对象名 inner join 对象名.关联属性 关联对象名</div></li><li><div>[其他子句]</div></li><li><div>SQL内关联使用关联字段，HQL内关联使用关联属性，不用使用on关联语句。</div></li><li><div>案例：</div></li><ul><li><div>查询每个员工和他关联的部门对象，取得关联的员工对象和部门对象，返回：List&lt;Object[]&gt;</div></li></ul><div>String hql=”from EmployeeModel em inner join em.department dm”;</div><ul><li><div>查询有部门管理的员工对象</div></li></ul><div>String hql=”select em from EmployeeModel em inner join em.department dm ”;</div><ul><li><div>查询部门名称是”财务部”的员工的列表，只要员工对象，不要关联的部门对象</div></li><div>String hql=”select em from EmployeeModel em inner join em.department dm where dm.name=’财务部’”;</div><li><div>查询部门名称是”财务部”的年龄在30-50之间的员工的列表，只要员工对象，不要关联的部门对象， 返回：List&lt;EmployeeModel&gt;</div></li></ul><div>String hql=”select em from EmployeeModel em inner join em.department dm where dm.name=’财务部’&nbsp;and em.age between 30 and 50”;</div><ul><li><div>也可以查询关联对象的属性:</div></li></ul></ul><div>String hql=”select em.name, dm.name from EmployeeModel em inner join em.department dm”;</div><div>返回有关联关系的员工对象的姓名，和部门的名称。类型：List&lt;Object[]&gt;</div><ul><ul><li><div>关联多个对象：</div></li></ul><div>String hql=”from EmployeeModel em inner join em.department dm inner join em.address am inner join em.contactInfo cim”;</div><div>String hql=”from DepartmentModel dm inner join dm.employees em inner join em.address am inner join em.contactInfo cim ”;</div><div>String hql=”from BehaveModel bm inner join bm.employees em inner join em.department dm inner join em.address am inner join em.contactInfo cim”; /</div><li><div>HQL内关联查询返回的结果：</div></li><ul><li><div>内关联查询中没有select子句：返回的是关联的对象的Object数组的集合List， 即List&lt;Object[]&gt;, Object[0] 包含左边的对象，Object[1]包含右边的对象。</div></li></ul><div>String hql=”from EmployeeModel em inner join em.department dm”;</div><div>返回：包含所有员工对象和其关联的部门对象的Object[]的List集合。每个Object[0]保存EmployeeModel对象，Object[1]保存DepartmentModel对象。</div><div>案例：在员工的业务实现类方法中定义如下方法，取得每个员工和关联的部门对象</div></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//取得每个员工和它关联的部门对象,使用内关联查询，取得员工对象和关联的部门对象</div><div>public List&lt;Object[]&gt; getListAndDepartment() throws Exception{</div><div>//取得SessionFactory接口的对象</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//定义查询HQL语句, 使用内关联方式取得每个员工对象和关联的部门对象</div><div>String hql=&quot;from EmployeeModel em inner join em.department&quot;;</div><div>//创建执行HQL的Query接口对象</div><div>Query&lt;Object[]&gt; query=session.createQuery(hql,Object[].class);</div><div>//提交查询，取得查询结果</div><div>List&lt;Object[]&gt; list=query.getResultList();</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return list;</div><div>}</div><div>在Test测试类中测试：</div><div>List&lt;Object[]&gt; list01=es.getListAndDepartment();</div><div>for(Object[] os:list01) {</div><div>em=(EmployeeModel)os[0];</div><div>dm=(DepartmentModel)os[1];</div><div>System.out.println(em.getName()+&quot;----&quot;+dm.getName());</div><div>}</div></div><ul><ul><ul><ul><ul><li><div>内关联查询中有select子句，只取得一个对象：则返回有关联的单个对象集合</div></li><div>String hql=”select em from EmployeeModel em inner join em.department dm”;</div></ul></ul></ul><div>返回：包含与部门关联的员工对象List集合，类型：List&lt;EmployeeModel&gt;。</div><div><br/></div><div>String hql=”select dm from EmployeeModel em inner join em.department dm”;</div><div>返回：包含与员工关联的部门对象List集合, 返回类型：List&lt;DepartmentModel&gt;</div><div><br/></div><div>String hql=”select em.name,dm.name from EmployeeModel em inner join em.department dm”;</div><div>包含与员工关联的部门对象List集合, 返回类型：List&lt;Object[]&gt;</div><div>Object[0]: String类型，存储员工的name</div><div>Object[1]: String类型，存储部门的name</div><div><br/></div><div>String hql=”select em.name from EmployeeModel em inner join em.department dm”;</div><div>返回：包含与员工关联的部门对象List集合, 返回类型：List&lt;String&gt;</div><li><div>隐式内关联查询&nbsp;:当关联的对象是对一的关联关系时，可以不用显式写出inner join关键词，直接使用</div></li></ul></ul><div>“对象.关联属性.属性名”&nbsp;</div><div>来访问关联对象属性。这种方式称为隐式内关联查询。</div><ul><ul><ul><li><div>隐式内关联只能使用在对一的关联关系中，如多对一，一对一，不能使用在对多的关联关系，如一对多，多对多。</div></li><li><div>功能:简化内关联查询语句的编程。</div></li><ul><li><div>案例:</div></li><ul><li><div>刚才在普通的内关联查询的案例中，如下查询使用了显式内关联查询，即语句中有inner join关键词。</div></li><li><div>查询部门名称是”财务部”的员工的列表，只要员工对象，不要关联的部门对象</div></li><li><div>String hql=”select em from EmployeeModel em inner join em.department dm where dm.name=’财务部’”; &nbsp;（显式内关联）</div></li><li><div>此案例可以使用隐式内关联查询实现：</div></li><li><div>String hql=”select em from EmployeeModel em where&nbsp;em.department.name=’财务部’”;</div></li><li><div>HQL语句中em.department.name称为隐式内关联。&nbsp;</div></li></ul><ul><li><div>推荐：实际项目编程中，能使用隐式内关联，就不要写显式内关联查询，以简化HQL语句的编写</div></li></ul></ul></ul></ul></ul><div>第3节&nbsp;抓取内关联查询（inner join fetch）</div><ul><li><div>抓取内关联查询概念：抓取内关联查询是指通过内关联查询，实现持久对象关联属性立即检索的查询。</div></li></ul><div>实质是实现对象的关联属性的立即检索。</div><ul><li><div>抓取内关联查询功能：查询指定的Model类对象，并立即检索其关联的对象，返回指定的Model类对象。</div></li><div>普通内关联返回的是关联的2个对象的Object数组，与普通内关联查询不同，而抓取内关联返回是from指定的Model对象，关联的属性的对象不单独出现，而是直接设置到返回对象的关联属性，作为一个对象返回。</div><div>抓取内关联与设置关联属性的立即检索机制的效果是一样。</div><div>迫切（抓取）内关联查询，主要有两点和内连查询不同，第一点是，在查询语句中添加一个关键字，第二点是，由于查询语句变化导致的，导致查询到的结果显示形式不同，内连查询获得的数据是键值对的形式，而迫切查询获得的是合并后的数据形式，将两条数据合为一条新的并以主查询实体类的数据形式返回。</div><li><div>抓取内关联查询语法：from Model类名 对象名 inner join fetch 对象名.关联属性 对象名</div></li></ul><div>抓取内关联查询，查询关联的2个对象，并把关联的属性值设置到左面的对象中，返回左面的对象，而不是返回关联的对象组合。</div><ul><ul><li><div>抓取内关联查询案例：</div></li><ul><li><div>查询员工列表，并立即检索其关联的爱好集合</div></li></ul><div>String hql=”from EmployeeModel em inner join fetch em.behaves”;</div><div>返回：List&lt;EmployeeModel&gt;， 每个员工对象的属性behaves已经取得。</div><ul><li><div>查询部门对象列表，并立即检索每个部门的关联的员工集合</div></li><div>String hql=”from DepartmentModel dm inner join fetch dm.employees”;</div><div>返回：List&lt;DepartmentModel&gt; ，每个部门对象的属性employees集合已经自动填充。</div><ul><li><div>使用抓取内关联的编程案例：</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//取得部门列表，并取得每个部门关联的员工集合</div><div>public List&lt;DepartmentModel&gt; getListWithEmployees() throws Exception{</div><div>SessionFactory sf=HibernateFactory.createSessionFactory();</div><div>//创建Session</div><div>Session session=sf.openSession();</div><div>//开启事务</div><div>Transaction tx=session.beginTransaction();</div><div>//内关联抓取HQL</div><div>String hql=&quot;from DepartmentModel dm inner join fetch dm.employees&quot;;</div><div>Query&lt;DepartmentModel&gt; query=session.createQuery(hql,DepartmentModel.class);</div><div>List&lt;DepartmentModel&gt; list=query.getResultList();</div><div>//提交事务</div><div>tx.commit();</div><div>//关闭session</div><div>session.close();</div><div>return list;</div><div>}</div></div><div>第4节HQL普通外关联查询</div><div>HQL普通外关联查询概念</div><div>当HQL关联查询时，取出一个Model的所有对象，同时查询其关联的对象，即使没有关联对象也可以，此类关联查询称为外关联查询。</div><div>这一点与内关联查询是不一样的，内关联查询必须双方都必须有关联对象才能查询出来。</div><ul><li><div>HQL支持的普通外关联查询类型：</div></li><ul><li><div>HQL普通外关联查询与SQL支持的类型一样。</div></li><ul><li><div>左外关联查询（left outer join ）：from Model类名 对象名 left outer join 对象名.关联属性名 关联对象名</div></li><div>功能：查询关联左面的所有对象，以及关联的右边的对象，即使没有关联，也取出左边的对象。</div><div>案例：查询所有的员工对象和关联的部门对象，即使员工没有部门，也要取得员工对象。</div><div>String hql=”from EmployeeModel em left outer join em.department dm”;</div><div>案例：查询所有的部门对象和关联的员工对象，即使部门没有对应的员工，也要取得部门对象。</div><div>String hql=”from DepartmentModel dm left outer join dm.employees em”;</div><li><div>右外关联查询（right outer join）</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>List&lt;Object[]&gt; list01=ds.getListAndEmployee();</div><div>for(Object[] os:list01) {</div><div>em=(EmployeeModel)os[1];</div><div>dm=(DepartmentModel)os[0];</div><div>if(em!=null) {</div><div>System.out.println(dm.getName()+&quot;----&quot;+em.getName());</div><div>}</div><div>else {</div><div>System.out.println(dm.getName()+&quot;----null&quot;);</div><div>}</div><div>}</div></div><div><br/></div><div>第5节&nbsp;HQL抓取外关联查询（强迫外关联查询）</div><div>抓取外关联查询概念：抓取外关联是使用外关联查询方式，将对象的关联属性也立即检索处理，并设置到对象的关联属性，合并为一个对象返回。</div><ul><li><div>与普通外关联查询可以支持左外联，右外联和全外联查询不同，抓取外关联查询只有抓取左外关联查询。</div></li><li><div>抓取外关联查询功能：实现对象和关联对象的外关联查询，并执行关联属性的立即检索，返回查询中左边的对象。</div></li><ul><li><div>抓取外关联查询语法：from Model类名 对象名 left outer join fetch对象名.关联属性</div></li><div>取得左面对象的列表，并把左面对象的关联属性进行抓取（立即检索），即使没有关联属性也可以。</div><div>这一点与内关联fetch不同，内关联fetch查询只能取得有关联的对象。</div><li><div>抓取外关联查询案例：取得所有部门对象，并立即检索并填充每个部门的员工集合。</div></li><ul><li><div>String hql=”from DepartmentModel dm left outer join fetch dm.employees em”;</div></li><ul><li><div>查询的结果是：所有部门对象的列表，部门有员工的，则集合属性employees包含其所属的员工列表，没有员工的，属性employees为空容器。</div></li></ul><div>可以使用distinct关键词，删除重复的记录。</div><div>HQL语句改为：</div><div>String hql=&quot;select distinct dm from DepartmentModel dm left outer join fetch &nbsp;dm.employees&quot;;</div><div>再运行测试代码</div></ul></ul></ul><div>第6节 HQL分类汇总查询</div><div>分类汇总统计是任何实际应用项目不可少的功能。</div><div>HQL分类汇总查询与SQL的语法一样。</div><div>HQL分类汇总查询也是通过group by子句，汇总函数，having子句这3个机制实现的。</div><ul><li><div>HQL分类汇总语句group by：HQL中的group by子句用于对查询的属性进行分类</div></li></ul><div>group by子句一般与HQL的汇总函数结合使用，实现对指定对象的分类汇总</div><ul><li><div>HQL分类汇总函数：</div></li><ul><li><div>count()函数：统计对象或属性不是null的个数。</div></li></ul><div>案例：取得年龄在30和40之间的员工的个数：select count(em) from EmployeeModel em where em.age between 30 an 40</div><ul><li><div>sum() 求和函数，用于对象的数值类型属性。如int, double, float.</div></li><li><div>avg() 求平均函数，用于对象的数值类型属性。如int, double, float.</div></li><li><div>min() 求最小值函数，可用于对象的任何可比较大小的对象</div></li><li><div>max() 求最大值函数，可用于对象的任何可比较大小的对象和属性</div></li></ul><li><div>HQL分类汇总筛选子句having</div></li><ul><li><div>功能：对HQL分类汇总查询结果进行再筛选。通过HQL的分类汇总语句，可以进行分类汇总查询。</div></li><ul><li><div>Where是对原始的记录进行筛选，</div></li><li><div>Having是对象分类汇总后的记录进行筛选。</div></li></ul></ul></ul><div>第7节 &nbsp;HQL子查询</div><div>HQL子查询概念：HQL子查询是指在HQL查询语句中包含的HQL查询语句。</div><div>包含子查询的HQL语句称为主查询。</div><div>子查询在主查询语句中要使用()括起来， (子查询HQL语句)。</div><ul><li><div>HQL的子查询类型：</div></li><ul><li><div>位置上区分：</div></li><ul><li><div>where中的子查询</div></li><li><div>having中的子查询</div></li><li><div>注意：SQL支持from，select，where和having中都可以使用子查询，而HQL只支持where和having中使用子查询。</div></li></ul><li><div>按子查询是否与主查询相关联：</div></li><ul><li><div>无关联子查询：子查询语句中不引用主查询的属性，子查询可以独立执行。</div></li></ul><div>运行时，子查询先执行，再执行主查询，并使用子查询的结果。</div><ul><li><div>相关子查询：子查询语句中使用了主查询中的属性，子查询不能独立执行，只能是主查询查询一个对象，再执行子查询语句。</div></li></ul><div>运行时，先执行主查询，把主查询的属性传递给子查询，子查询才执行，查询结果交个主查询进行判定。</div><li><div>where中子查询</div></li><ul><li><div>HQL中的where子句中的子查询一般用于将查询结果供主查询判断使用。</div></li></ul><div>如下案例：查询员工中工资大于全体平均工资的员工列表</div><div>from EmployeeModel em where em.salary &gt; (select avg(em01.salary) from EmployeeModel em01)</div><div>其中：子查询中没有使用主查询的属性，又属于无关子查询。</div><ul><li><div>HQL提供了与SQL相同的量化操作符，用于对子查询返回的结果集合进行量化处理，以方便使用比较运算符</div></li></ul><div>all: 表示所有对象，或属性。</div><div>any:表示所有记录中的任意1条</div><div>some:与any用法一样</div><div>in:与=any等价</div><div>exists: 表示子查询至少要返回一条记录</div></ul></ul><hr/><div>第1节 MyBatis概述</div><div>MyBatis概念：实际上，MyBatis是与Hibernate功能相同的持久层框架，即DAO层框架。但是与Hibernate是ORM的解决方案不同，MyBatis不实现Model类与表，属性与字段的映射。Mybatis实现的是DAO层功能方法与SQL语句的映射。Mybatis中DAO层接口的每个持久化方法，都需要映射一个对应的SQL语句。MyBatis开发的核心就是实现DAO接口方法与SQL的映射编程。</div><ul><li><div>MyBatis的功能：实现DAO层的持久化方法，即CUDR操作。</div></li><li><div>MyBatis的组成：与Hibernate框架类似，MyBatis框架的组成如下</div></li><ul><li><div>MyBatis API：完成MyBatis持久化功能的API（接口和类）</div></li><li><div>Mybatis配置文件：完成Mybatis的全局设置，数据库连接，事务管理器，Model类的别名设置。</div></li><li><div>MyBaits映射配置：实现DAO接口方法与SQL语句直接的映射。以及查询时Model类与表，属性与字段之间的映射。</div></li></ul><li><div>MyBatis API组成：org.apache.ibatis.io.Resources表达MyBaits资源配置信息</div></li></ul><div>如下代码通过Resources类读取MyBaits配置文件：</div><div>String resource=&quot;mybatis-config.xml&quot;;</div><div>InputStream inputStream = Resources.getResourceAsStream(resource);</div><div>取得的输入流对象可以用于创建SqlSessionFactory</div><ul><ul><li><div>org.apache.ibatis.session.SqlSessionFactoryBuilder：通过读取和解析MyBatis的配置文件。</div></li><ul><li><div>SqlSessionFactory ssf= new SqlSessionFactoryBuilder().build(inputStream);</div></li></ul><li><div>org.apache.ibatis.session.SqlSessionFactory;与Hibernate的类似的Session工厂类，用于打开一个新的session，实现与数据库连接。</div></li><div>如下代码用于打开一个新的SqlSession：</div><div>SqlSession session=ssf.openSession();</div><li><div>SqlSession：该接口对象与Hibernate的Session对应，表达与数据库的连接。</div></li></ul></ul><div>与Hibernate不同，MyBatis没有提供专门的事务接口，在SqlSession中直接封装了事务处理方法，用于事务处理。</div><div>取得SqlSession对象后，通过它可以取得DAO接口的对象。</div><div>MyBaits应用需要应用DAO层接口，但不需要编程DAO实现类，MyBatis框架会自动根据配置的DAO接口方法对应的SQL映射，创建DAO实现类。</div><div>通过SqlSession可以取得DAO接口的实现类对象：</div><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div><div>deptDao.insert(dm);</div><div><a href="http://session.commit%28%29%3b/">session.commit();</a></div><div>session.close();通过SqlSession的事务方法，实现事务的控制，如commit(), rollback()</div><div>第3节简单MyBatis应用案例的开发</div><ul><li><div>创建MyBatis配置文件：在项目的classpath根目录下（项目的src/main/resources）,创建MyBatis的配置文件。</div></li><ul><li><div>文件名推荐：mybatis-config.xml</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE configuration</div><div>&nbsp;&nbsp;PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</div><div>&nbsp;&nbsp;&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</div><div>&lt;configuration&gt;</div><div>&lt;typeAliases&gt;</div><div>&lt;package name=&quot;com.city.oa.model&quot;/&gt;</div><div>&lt;/typeAliases&gt;</div><div>&nbsp;&nbsp;&lt;environments default=&quot;development&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;environment id=&quot;development&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;transactionManager type=&quot;JDBC&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dataSource type=&quot;POOLED&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3319/cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dataSource&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/environment&gt;</div><div>&nbsp;&nbsp;&lt;/environments&gt;</div><div>&nbsp;&nbsp;&lt;mappers&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mapper resource=&quot;com/city/oa/dao/xml/IDepartmentDao.mapper.xml&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;/mappers&gt;</div><div>&lt;/configuration&gt;</div><div>核心配置内容：</div><div>数据库连接池</div><div>引入Mybatis DAO接口方法实现的SQL语句的映射文件。</div><div>Model类的别名</div></div><ul><li><div>创建Model类：与Hibernate应用一样，都需要创建Model类，</div></li><div>但是不需要使用注解类实现Model类与表的映射。</div><div>@Alias(&quot;Department&quot;)</div><li><div>创建DAO接口：MyBatis的核心就是定义DAO接口。与Hibernate不同，Hibernate是不需要创建DAO接口的。MyBatis必须创建DAO接口。</div></li></ul><div>DAO接口的基本方法就是CUDR，即增加，修改，删除，查询。</div><div>@Mapper</div><div>有的方法参数使用了@Param(&quot;no&quot;)，</div><div>这是推荐的方法，如果是单个参数，可以不用使用此注解类进行修饰，但是如果DAO接口方法有多个参数，一定要使用该注解类进行修饰，注解类的属性值”no”，表示参数的名称，未来在MyBatis的SQL映射文件中引用。</div><ul><li><div>创建DAO接口的SQL映射XML文件：这是MyBatis编程的关键，开发MyBaits的应用的核心就是编写DAO接口方法对应的SQL语句。</div></li><ul><li><div>MyBatis是DAO接口方法与SQL语句的映射框架。</div></li><li><div>每个DAO接口方法，都必须映射一个SQL语句。</div></li><li><div>映射文件名推荐：DAO接口名.mapper.xml</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div>&lt;!DOCTYPE mapper</div><div>&nbsp;&nbsp;PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div>&nbsp;&nbsp;&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div>&lt;mapper namespace=&quot;com.city.oa.dao.IDepartmentDao&quot;&gt;</div><div>&lt;!-- 映射查询结果映射 --&gt;</div><div>&lt;resultMap id=&quot;DepartmentResultMap&quot; type=&quot;Department&quot; &gt;</div><div>&lt;id property=&quot;no&quot; column=&quot;DEPTNO&quot;/&gt;</div><div>&lt;result property=&quot;code&quot; column=&quot;DEPTCODE&quot; /&gt;</div><div>&lt;result property=&quot;name&quot; column=&quot;DEPTNAME&quot; /&gt;</div><div>&lt;/resultMap&gt;</div><div>&lt;!-- DAO层部门增加方法 --&gt;</div><div>&lt;insert id=&quot;insert&quot;&nbsp;&nbsp;keyProperty=&quot;no&quot;&nbsp;&nbsp;&nbsp;keyColumn=&quot;DEPTNO&quot;&nbsp;&nbsp;&nbsp;useGeneratedKeys=&quot;true&quot;&gt;</div><div>insert into oa_department (DEPTCODE,DEPTNAME) values (#{code},#{name})</div><div>&lt;/insert&gt;</div><div>&lt;!-- DAO层部门修改方法 --&gt;</div><div>&lt;update id=&quot;update&quot;&gt;</div><div>update oa_department set DEPTCODE=#{code},DEPTNAME=#{name} where DEPTNO=#{no}</div><div>&lt;/update&gt;</div><div>&lt;!-- DAO层部门删除增加方法 --&gt;</div><div>&lt;delete id=&quot;delete&quot;&gt;</div><div>delete from oa_department where DEPTNO=#{no}</div><div>&lt;/delete&gt;</div><div>&lt;!-- DAO层部门查询方法 查询单个对象--&gt;</div><div>&lt;select id=&quot;selectByNo&quot; resultMap=&quot;DepartmentResultMap&quot;&gt;</div><div>select * from oa_department where DEPTNO=#{no}</div><div>&lt;/select&gt;</div><div>&lt;!-- DAO层部门查询方法 查询列表 --&gt;</div><div>&lt;select id=&quot;selectListByAll&quot; resultMap=&quot;DepartmentResultMap&quot;&gt;</div><div>select * from oa_department</div><div>&lt;/select&gt;</div><div>&lt;/mapper&gt;</div><div>配置的语法详细讲解在以后各章中完成。</div></div><div><br/></div><ul><li><div>创建MyBatis的SqlSessionFactory的工厂类：MyBatisFactory</div></li><ul><li><div>与Hibernate一样，为避免每个业务方法都编写取得SqlSessionFactory对象的重复代码，</div></li><li><div>推荐编写一个工厂类，并编写静态工厂方法取得SqlSessionFactory对象。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>package com.city.oa.factory;</div><div>import java.io.InputStream;</div><div>import org.apache.ibatis.io.Resources;</div><div>import org.apache.ibatis.session.SqlSessionFactory;</div><div>import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div>//MyBaits SqlSessionFactory</div><div>public class MyBatisFactory {</div><div>private static SqlSessionFactory ssf=null;</div><div>public static SqlSessionFactory createSqlSessionFactory() throws Exception{</div><div>if(ssf==null) {</div><div>String resource=&quot;mybatis-config.xml&quot;;</div><div>InputStream inputStream = Resources.getResourceAsStream(resource);</div><div>ssf= new SqlSessionFactoryBuilder().build(inputStream);</div><div>}</div><div>return ssf;</div><div>}</div><div>}</div><div>在工厂静态方法内，读取Mybatis配置文件，并使用Resources和SqlSessionFactoryBuilder API，完成创建SqlSessionFactory对象。该对象将来用于打开一个SqlSession对象。</div></div><ul><li><div>编写业务层接口：</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>package com.city.oa.service;</div><div>import java.util.List;</div><div>import com.city.oa.model.DepartmentModel;</div><div>//部门业务接口</div><div>public interface IDepartmentService {</div><div>//增加部门</div><div>public void add(DepartmentModel dm) throws Exception;</div><div>//修改部门</div><div>public void modify(DepartmentModel dm) throws Exception;</div><div>//删除部门</div><div>public void delete(DepartmentModel dm) throws Exception;</div><div>//取得指定编号的部门</div><div>public DepartmentModel getByNo(int no) throws Exception;</div><div>//取得所有部门类别，不分页模式</div><div>public List&lt;DepartmentModel&gt; getListByAll() throws Exception;</div><div>}</div><div>可以只定义简单的方法，未来在深入学习MyBatis后再定义复杂的业务方法。</div></div><ul><li><div>创建业务接口的实现类</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>package com.city.oa.service.impl;</div><div>import java.util.List;</div><div>import org.apache.ibatis.session.SqlSession;</div><div>import org.apache.ibatis.session.SqlSessionFactory;</div><div>import com.city.oa.dao.IDepartmentDao;</div><div>import com.city.oa.factory.MyBatisFactory;</div><div>import com.city.oa.model.DepartmentModel;</div><div>import com.city.oa.service.IDepartmentService;</div><div>//使用纯MyBatis API实现业务层</div><div>public class DepartmentServiceImplWithMyBatis implements IDepartmentService {</div><div>@Override</div><div>public void add(DepartmentModel dm) throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory();</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div><div>deptDao.insert(dm);</div><div>session.commit();</div><div>session.close();</div><div>}</div><div>@Override</div><div>public void modify(DepartmentModel dm) throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory();</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div><div>deptDao.update(dm);</div><div>session.commit();</div><div>session.close();</div><div>}</div><div>@Override</div><div>public void delete(DepartmentModel dm) throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory();</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div><div>deptDao.delete(dm);</div><div>session.commit();</div><div>session.close();</div><div>}</div><div>@Override</div><div>public DepartmentModel getByNo(int no) throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory();</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div><div>DepartmentModel dm=deptDao.selectByNo(no);</div><div>session.commit();</div><div>session.close();</div><div>return dm;</div><div>}</div><div>@Override</div><div>public List&lt;DepartmentModel&gt; getListByAll() throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory();</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div><div>List&lt;DepartmentModel&gt; list=deptDao.selectListByAll();</div><div>session.commit();</div><div>session.close();</div><div>return list;</div><div>}</div><div>}</div></div><ul><li><div>使用MyBatis编程的基本步骤是：</div></li><ul><li><div>读取配置文件，创建SqlSessionFactory对象，（工厂类完成了）</div></li><ul><li><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory();</div></li></ul><li><div>使用SqlSessionFactory对象打开一个新的SqlSession对象。</div></li><ul><li><div>SqlSession session=ssf.openSession();</div></li></ul><li><div>取得DAO接口对象</div></li><ul><li><div>IDepartmentDao deptDao=session.getMapper(IDepartmentDao.class);</div></li></ul><li><div>调用DAO接口对象的方法</div></li><ul><li><div>deptDao.insert(dm);、</div></li></ul><li><div>提交事务：<a href="http://session.commit%28%29%3b/">session.commit();</a></div></li><li><div>关闭SqlSession：session.close();</div></li></ul><li><div>编写测试类</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>package com.city.oa.test;</div><div>import com.city.oa.model.DepartmentModel;</div><div>import com.city.oa.service.IDepartmentService;</div><div>import com.city.oa.service.impl.DepartmentServiceImplWithMyBatis;</div><div>public class TestForMyBatis {</div><div>public static void main(String[] args) {</div><div><br/></div><div>DepartmentModel dm=new DepartmentModel();</div><div>dm.setNo(16);</div><div>dm.setCode(&quot;YY16&quot;);</div><div>dm.setName(&quot;Y16部&quot;);</div><div>IDepartmentService&nbsp;&nbsp;ds=new&nbsp;&nbsp;DepartmentServiceImplWithMyBatis();</div><div>try {</div><div>//ds.add(dm);</div><div>//ds.modify(dm);</div><div>dm=ds.getByNo(1);</div><div>System.out.println(&quot;部门名称:&quot;+dm.getName());</div><div>} catch (Exception e) {</div><div>// TODO Auto-generated catch block</div><div>e.printStackTrace();</div><div>}</div><div>}</div><div>}</div></div><div>MyBatis第2讲 MyBatis配置和API</div><div>第1节 MyBatis的配置概述</div><div>MyBatis的配置是MyBatis应用的核心，通过配置信息，可以指定连接的数据库，引入的映射文件，Model类的别名，属性定义，DAO接口的扫描以及MyBatis框架的核心参数配置。</div><ul><li><div>MyBatis的配置实现方式</div></li><ul><li><div>XML文件配置方式：</div></li></ul><div>这是最常用的配置方式。</div><div>该方式语法简单，配置方便，维护容易。</div><ul><li><div>编程式配置方式：</div></li><div>MyBatis也提供了配置类Configuration，提供了各种配置方式实现MyBatis的配置。</div><div>但实际项目很少使用编程是配置方式</div></ul><li><div>MyBaits的配置的核心内容</div></li><ul><li><div>属性配置：</div></li></ul><div>MyBaits可以配置属性变量，并且属性变量可以读取外部属性文件定义的值。</div><div>配置的属性变量，可以使用EL表达式形式，使用在配置文件中。</div><div>如 &nbsp;&lt;property name=&quot;password&quot; value=&quot;${username}&quot;/&gt;</div><ul><li><div>别名配置</div></li></ul></ul><div>为Model类备注别名，在做映射的时候，通过配置别名，就不需要引入Model类的全名，简化XML映射的配置。</div><div>假如：com.city.oa.model.DepartmentMdoel, 起别名：Department</div><div>Mybatis编程，通常需要给所有的Model类起别名。</div><ul><ul><li><div>环境配置</div></li><div>用于设置MyBaits的环境，MyBaits可以设置多个运行环境，每个环境里可以设置一个的数据库连接，以及事务的类型。</div><ul><li><div>事务管理器配置</div></li></ul><div>每个环境都需要配置一个事务类型，告诉MyBatis使用那种事务处理机制，现在普遍使用的是JDBC控制下的事务控制。</div><ul><li><div>数据源配置</div></li></ul><div>MyBatis是持久层框架，是针对数据库的操作，必须配置数据库连接。</div><div>MyBatis内部都是使用连接池方式连接数据库。</div><ul><li><div>全局参数配置</div></li></ul><div>可以通过设置全局设置参数，设置MyBatis框架的内部运行参数，调整MyBaits的运行设置。</div><ul><li><div>.映射定位配置</div></li></ul><div>Mybatis通过映射信息完成DAO接口的方法与SQL语句的对应。</div><div>通常使用XML文件实现映射配置，在配置文件中需要告诉MyBatis这些映射文件的位置和文件名，如果使用DAO接口上的注解类，需要告诉这些注解的接口的包名和接口名。MyBatis才能对映射信息进行解析。</div></ul></ul><div>MyBatis的XML配置方式</div><div>XML方式是MyBatis最常用的配置方式。基本上MyBatis项目都使用XML方式实现配置。</div><ul><li><div>XML方式文件的命名和存储</div></li><ul><li><div>命名：：MyBaits配置XML文件文件可以任意命名。</div></li></ul><div>因为不像Hibernate的Configuration类，可以读取默认的配置文件，MyBatis每次读取配置文件时，都必须提供配置文件名。</div><div>String resource = &quot;mybatis-config.xml&quot;;</div><div>InputStream inputStream = Resources.getResourceAsStream(resource);</div><div>SqlSessionFactory ssf=new SqlSessionFactoryBuilder().build(inputStream);</div><div>&nbsp;</div><div>推荐的文件名为：mybatis-config.xml</div><ul><li><div>存储：保存在classpath根目录中，即maven项目的src/main/resources的根目录中。</div></li></ul></ul><div>XML配置方式的配置内容和语法：</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div>&lt;!DOCTYPE configuration</div><div>&nbsp;&nbsp;PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</div><div>&nbsp;&nbsp;&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</div><div>&lt;configuration&gt;</div><div>&lt;environments default=&quot;development&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;environment id=&quot;development&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;transactionManager type=&quot;JDBC&quot;/&gt;//type=”JDBC|MANAGED” MANAGED：使用服务器管理的事务处理机制，一般是JTA，此模式一般由大型的商业版本的JavaEE Server实现，如Web Logic Server, IBM WebShpere. Tomcat等小型服务器不支持JTA，需要使用第三方产品实现。</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dataSource type=&quot;POOLED&quot;&gt;//用于设置数据库连接。</div><div>其中属性type=”UNPOOLED|POOLED|JNDI”</div><div>取值：UNPOOLED：非连接池模式，每次创建新的Connection连接。</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;POOLED: 连接池模式，每次从连接池中取得空闲的连接。</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JNDI：使用JNDI查询命名服务中注册的连接池对象，如tomcat配置的数据库连接池。</div><div>取值：UNPOOLED，非连接池模式，需要配置如下JDBC属性，确定连接的数据库。</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3319/cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;cityoa&quot;/&gt;</div><div>defaultTransactionIsolationLevel ：指定事务隔离级别，取值：0-4</div><div>0:NONE(Connection.TRANSACTION_NONE),</div><div>1:READ_COMMITTED(Connection.TRANSACTION_READ_COMMITTED),</div><div>2:READ_UNCOMMITTED(Connection.TRANSACTION_READ_UNCOMMITTED),</div><div>3：REPEATABLE_READ(Connection.TRANSACTION_REPEATABLE_READ),</div><div>4：SERIALIZABLE</div><div>注意：0(NONE)， MySQL是不支持的。会抛异常。</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dataSource&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/environment&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;environment id=&quot;production&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;transactionManager type=&quot;JDBC&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dataSource type=&quot;POOLED&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3319/cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dataSource&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/environment&gt;</div><div>&nbsp;&nbsp;&lt;/environments&gt;</div><div>&lt;properties&gt;&lt;/properties&gt;</div><div>&lt;typeAliases&gt;&lt;/typeAliases&gt;</div><div>&lt;settings&gt;&lt;/settings&gt;</div><div>&lt;mappers&gt;&lt;/mappers&gt;</div><div>&lt;/configuration&gt;</div><div>在标记&lt;configuration&gt;中间配置MyBaits的配置信息。</div><div>主要包含如下一级标记：</div><div>&lt;environments&gt; 配置环境，连接池，事务处理类型</div><div>&lt;properties&gt;&lt;/properties&gt; 配置属性变量</div><div>&lt;typeAliases&gt;&lt;/typeAliases&gt; 配置Model类别名</div><div>&lt;settings&gt;&lt;/settings&gt; 配置MyBatis全局参数</div><div>&lt;mappers&gt;&lt;/mappers&gt; 引入映射XML文件，或映射DAO接口。</div></div><div>&nbsp;设置驱动的字符编码集为UTF8：driver.encoding=UTF8</div><div>&lt;property name=&quot;driver.encoding&quot; value=&quot;UTF8&quot;/&gt;</div><div>如果数据库设置了字符编码集UTF-8后，还是出现汉字乱码，可以考虑使用此属性，为连接串增加字符编码。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;dataSource type=&quot;UNPOOLED&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3319/cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp; &lt;property name=&quot;defaultTransactionIsolationLevel&quot; value=&quot;2&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;defaultNetworkTimeout&quot; value=&quot;2000&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;driver.encoding&quot; value=&quot;UTF8&quot;/&gt;</div><div>&lt;/dataSource&gt;</div><div>取值：POOLED， 以连接池方式实现连接， 在UNPOOLED属性的基础上，增加了连接池的配置属性：</div><div>poolMaximumActiveConnections:默认10， 自己项目设置为1</div><div>poolMaximumIdleConnections：理想的连接个数：1</div><div>poolMaximumCheckoutTime：连接池的最大检出时间，从池中取得一个连接是需要时间的，设置最大时间，超时将抛异常。默认：20000毫秒，20秒。</div><div>poolTimeToWait ：连接池等待时间，</div><div>poolMaximumLocalBadConnectionTolerance：取得坏的连接的容错数。默认3</div><div>poolPingQuery：连接池测试的SQL语句</div><div>poolPingEnabled：取值true|false,默认false.</div><div>poolPingConnectionsNotUsedFor: 设置连接池测试的时间，一般设置为连接池超时时间，此时间内，不做测试，默认0：每次取得时测试。</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;environment id=&quot;development&quot;&gt;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&lt;transactionManager type=&quot;JDBC&quot;/&gt;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&lt;dataSource type=&quot;POOLED&quot;&gt;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;driver&quot; value=&quot;${jdbc.driver}&quot;/&gt;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot;/&gt;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot;/&gt;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolPingEnabled&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolPingQuery&quot; value=&quot;select 1&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolPingConnectionsNotUsedFor&quot; value=&quot;3600000&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolMaximumActiveConnections&quot; value=&quot;1&quot;/&gt; &lt;!-- 在任意时间可以存在的活动（也就是正在使用）连接数量，默认值：10 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolMaximumCheckoutTime&quot; value=&quot;5000&quot;/&gt; &lt;!-- 在被强制返回之前，池中连接被检出（checked out）时间，默认值：20000 毫秒（即 20 秒） --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolTimeToWait&quot; value=&quot;5000&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;poolMaximumIdleConnections&quot; value=&quot;1&quot;/&gt; &lt;!--&nbsp;&nbsp;任意时间可能存在的空闲连接数。 --&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dataSource&gt;&nbsp;&nbsp;</div><div>&lt;/environment&gt;</div><div>取值JNDI，需要指定属性data_source的值，查询注册的服务名。</div><div>&lt;dataSource type=&quot;JNDI&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name=&quot;data_source&quot; value=&quot;java:comp/env/cityoa&quot;/&gt;</div><div>&lt;/dataSource&gt;</div></div><div>typeAliases 类型别名：类型别名主要用于Model类的别名设置，用于简化映射文件中Model类引用的书写。</div><div>使用别名以后，所有MyBatis映射文件中（XML或注解类）都使用别名替代Model的全名。</div><ul><li><div>为每个Model类指定单独的别名</div></li></ul><div>&lt;typeAliases&gt;</div><div>&nbsp;&nbsp;&lt;typeAlias alias=&quot;Department&quot; type=&quot;com.city.oa.model.DepartmentModel&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;typeAlias alias=&quot;Employee&quot; type=&quot;com.city.oa.model.EmployeeModel&quot;/&gt;</div><div>&lt;/typeAliases&gt;</div><ul><li><div>指定Model类的扫描方式配置：</div></li><ul><li><div>&lt;typeAliases&gt;</div></li><li><div>&lt;package name=&quot;com.city.oa.model&quot;/&gt;</div></li><li><div>&lt;package name=&quot;com.city.oa.hr.model&quot;/&gt;</div></li><li><div>&lt;/typeAliases&gt;</div></li></ul><li><div>如果使用@Alias(“别名”)对Model类进行了修饰，则Model的别名就是@Alias指定的别名。推荐使用@Alias进行别名????????</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>配置部门Model类的别名是Department.</div><div>XML映射时，可以引用部门Model类的别名：</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;Department&quot;&gt;</div><div>update oa_department set DEPTCODE=#{code}, DEPTNAME=#{name} where DEPTNO=#{no}</div><div>&lt;/update&gt;</div><div>如果不设定别名，此上面的映射代码需要写成如下：</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;com.city.oa.model.DepartmentModel&quot;&gt;</div><div>update oa_department set DEPTCODE=#{code}, DEPTNAME=#{name} where DEPTNO=#{no}</div><div>&lt;/update&gt;</div><div>可见，使用别名，简化了映射代码的编程。</div></div><ul><li><div>如果不使用@Alias配置Model类，则默认的Model类别名是类名的首字母小写的名称。</div></li><li><div>MyBatis内置的别名</div></li><ul><li><div>MyBaits内部设定了常用Java类的别名，如string是java.lang.String的别名，在XML映射文件中使用string去替代java.lang.String。</div></li></ul></ul><table style="border-collapse: collapse; min-width: 100%;"><colgroup><col style="width: 132px;"/><col style="width: 602px;"/></colgroup><tbody><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>Alias</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Mapped Type</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>_byte</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>byte</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>_long</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>long</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>_short</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>short</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>_int</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>int</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>_integer</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>int</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>_double</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>double</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>_float</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>float</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>_boolean</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>boolean</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>string</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>String</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>byte</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Byte</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>long</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>Long</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>short</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Short</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>int</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>Integer</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>integer</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Integer</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>double</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>Double</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>float</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Float</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>boolean</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>Boolean</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>date</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Date</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>decimal</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>BigDecimal</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>bigdecimal</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>BigDecimal</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>object</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>Object</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>map</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Map</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>hashmap</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>HashMap</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>list</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>List</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>arraylist</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>ArrayList</div></td></tr><tr><td style="background-color: rgb(255, 255, 255); width: 132px; padding: 8px; border: 1px solid;"><div>collection</div></td><td style="background-color: rgb(255, 255, 255); width: 602px; padding: 8px; border: 1px solid;"><div>Collection</div></td></tr><tr><td style="background-color: rgb(249, 249, 249); width: 132px; padding: 8px; border: 1px solid;"><div>iterator</div></td><td style="background-color: rgb(249, 249, 249); width: 602px; padding: 8px; border: 1px solid;"><div>Iterator</div></td></tr></tbody></table><ul><li><div>&lt;mappers&gt; 引入映射信息：MyBatis的编程的核心是编写DAO接口方法对应的SQL映射信息。</div></li><li><div>MyBatis的配置文件需要指定如何定位这些映射文件。</div></li><ul><li><div>指定classpath目录下的XML映射文件</div></li><li><div>使用&lt;mapper resource&gt;标记引入classpath路径下的XML映射文件。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;mappers&gt;</div><div>&nbsp;&nbsp;&lt;mapper resource=&quot;com/city/oa/dao/xml/IDepartmentDao.mapper.xml&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;mapper resource=&quot;com/city/oa/dao/xml/IEmployeeDao.mapper.xml&quot;/&gt;</div><div>&lt;/mappers&gt;&nbsp;</div></div><ol start="3" style="margin-top: 0mm; margin-bottom: 0mm; margin-left: 0mm; padding-left: 0pt;"><li style="margin-left: 15pt; margin-right: 0pt; text-indent: 0pt; font-size: 16pt;"><div>通过指定DAO接口指定映射信息：使用&lt;mapper class=”DAO接口”&nbsp;/&gt;</div></li></ol><div>&lt;mappers&gt;</div><div>&nbsp;&nbsp;&lt;mapper class=&quot;com.city.oa.dao.IDepartmentDao&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;mapper class=&quot;com.city.oa.dao.IEmployeeDao&quot;/&gt;</div><div>&lt;/mappers&gt;</div><div>（1）此模式支持使用注解类方式实现SQL映射</div><div>//部门的DAO接口</div><div>public interface IDepartmentDao {</div><div>//增加新部门</div><div>@Insert(&quot;insert into oa_department (DEPTCODE,DEPTNAME) values (#{code},#{name})&quot;)</div><div>public void insert(DepartmentModel dm) throws Exception;</div><div>}</div><ul><li><div>通过指定DAO接口自动定位其对应的XML mapper映射文件。</div></li></ul><div>如果指定DAO接口：</div><div>&lt;mapper class=&quot;com.city.oa.dao.IDepartmentDao&quot;/&gt;</div><ul><li><div>MyBatis自动定位XML映射文件的原则规律是：</div></li></ul><div>XML文件名：DAO接口名.xml, 即：IDepartmentDao.xml</div><div>XML文件存储：必须在DAO接口相同的包内。</div><div>满足以上，就可以使用class方式指定DAO接口，实现XML的自动定位。</div><div>如果不满足以上规则，就需要使用</div><div>&lt;mapper resource=&quot;com/city/oa/dao/xml/IDepartmentDao.mapper.xml&quot;/&gt;</div><ul><ul><li><div>通过指定DAO接口的扫描包方式指定映射信息</div></li></ul></ul><div>&lt;mappers&gt;</div><div>&nbsp;&nbsp;&lt;package name=&quot;com.city.oa.dao&quot;/&gt;</div><div>&lt;/mappers&gt;</div><ul><ul><li><div>指定扫描包的方式，也是与指定Dao接口一样，如果使用XML文件，需要按照命名规则和存储位置的默认值。</div></li></ul><li><div>&lt;properties&gt; 属性配置标记：属性配置标记用于配置XML配置文件中的属性变量。</div></li></ul><div>当配置文件中多次使用相同的值时，可以配置一个属性变量。</div><div>也可以将配置的参数值定义在外部的属性文件中。</div><div>属性配置是通过在标记&lt;properties&gt;的子元素&lt;property&gt;标记实现的。</div><div>&lt;properties&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;cityoa&quot;/&gt;</div><div>&lt;/properties&gt;</div><div>可以引入外部属性文件中定义的属性：</div><div>&lt;properties resource=&quot;config.properties&quot;&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;cityoa&quot;/&gt;</div><div>&lt;/properties&gt;</div><div>注意：如果属性文件（.properties）中配置的属性与使用&lt;property&gt;配置的属性名相同。</div><div>&lt;property name=&quot;username&quot; value=&quot;cityoa&quot;/&gt;</div><div>则配置文件属性名优先级高，会覆盖使用&lt;property&gt;定义的属性。</div><div>配置好的属性可以使用在配置文件的任何位置，使用EL表达式引用配置的属性名 ${属性名}。如下：</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;dataSource type=&quot;POOLED&quot;&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;driver&quot; value=&quot;${driver}&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;url&quot; value=&quot;${url}&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;username&quot; value=&quot;${username}&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;property name=&quot;password&quot; value=&quot;${password}&quot;/&gt;</div><div>&lt;/dataSource&gt;</div></div><ul><li><div>&lt;settings&gt; MyBatis全局参数配置</div></li></ul><div>配置文件使用&lt;settings&gt;包含的子元素&lt;setting&gt;完成MyBatis的全局参数设置。</div><div>全局参数用于设置MyBatis的框架的特性，包括缓存机制的启用，延迟检索的启用。通常情况下不需设置全局参数。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;settings&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;multipleResultSetsEnabled&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;useColumnLabel&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;useGeneratedKeys&quot; value=&quot;true&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;PARTIAL&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;autoMappingUnknownColumnBehavior&quot; value=&quot;WARNING&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;defaultExecutorType&quot; value=&quot;SIMPLE&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;defaultStatementTimeout&quot; value=&quot;25&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;defaultFetchSize&quot; value=&quot;100&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;safeRowBoundsEnabled&quot; value=&quot;false&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;false&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;localCacheScope&quot; value=&quot;SESSION&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;jdbcTypeForNull&quot; value=&quot;OTHER&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;setting name=&quot;lazyLoadTriggerMethods&quot; value=&quot;equals,clone,hashCode,toString&quot;/&gt;</div><div>&lt;/settings&gt;</div></div><ul><li><div>日志的配置&nbsp;</div></li></ul><div>日志是开发项目中必不可少的，通过日志可以追踪程序的执行，以及异常的信息。</div><div>市场上有非常多的日志框架软件，不需要自己开发日志框架</div><div>Mybatis项目开发使用最多的是log4j（即Log for Java）</div><div>通过MyBatis的全局参数logImpl， 可以配置使用的日志产品，如下代码设置使用Log4j作为MyBatis的日志。</div><div>settings&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;setting name=&quot;logImpl&quot; value=&quot;LOG4J&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&lt;/settings&gt;</div><div>如使用log4j:</div><div>&lt;!-- <a href="https://mvnrepository.com/artifact/log4j/log4j">https://mvnrepository.com/artifact/log4j/log4j</a> --&gt;</div><div>&lt;dependency&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;log4j&lt;/groupId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;log4j&lt;/artifactId&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;1.2.17&lt;/version&gt;</div><div>&lt;/dependency&gt;</div><div>要启用log4j日志，需要创建log4j的配置文件：</div><div>log4j.properties，并存储在项目的classpath根目录下（开发阶段：src/main/resources）</div><div># Global logging configuration</div><div>log4j.rootLogger=ERROR, stdout</div><div># MyBatis logging configuration...</div><div>log4j.logger.com.city.oa.dao.IDepartmentDao=TRACE</div><div># Console output...</div><div>log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div>log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</div><div><br/></div><ul><li><div>log4j.logger.com.city.oa.dao.IDepartmentDao=TRACE</div></li></ul><div>该配置是对部门DAO接口IDepartmentDao方法的执行实现追踪。</div><div>也可以对包下的所有DAO接口方法的执行实现追踪。</div><div>log4j.logger.com.city.oa.dao=DEBUG</div><div>即在logger后面把DAO接口的包写上，会自动日志所有包下DAO接口方法的执行。</div><div>第3节 MyBatis的API</div><div>MyBatis主要提供了如下API实现配置信息的读取，映射信息的读取，管理数据库连接池，实现持久化功能（CUDR）等。</div><ul><li><div>MyBatis编程的核心API</div></li><ul><li><div>Resource</div></li><li><div>SqlSessionFactoryBuilder</div></li><li><div>SqlSessionFactory</div></li><li><div>SqlSession</div></li><li><div>Configuration</div></li></ul><li><div>org.apache.ibatis.io.Resources&nbsp;</div></li></ul><div>该类用于读取MyBatis的配置文件，将其转换为输入字节流，以供SqlSessionFactoryBuilder使用。</div><div>如下代码是Resources的编程使用：读取MyBatis配置文件。</div><div>String resource = &quot;mybatis-config.xml&quot;;</div><div>InputStream inputStream = Resources.getResourceAsStream(resource);</div><ul><li><div>SqlSessionFactoryBuilder：该类型的对象用于解析Mybatis的配置文件，创建SqlSessionFactory对象。</div></li></ul><div>该类的核心方法是build方法，根据不同的配置信息，用于创建SqlSessionFactory</div><div>SqlSessionFactory build(InputStream inputStream)</div><div>通过配置文件，并使用默认的环境ID，创建SqlSessionFactory对象。</div><div>SqlSessionFactory build(InputStream inputStream, String environment)</div><div>通过配置文件，并指定特定的环境ID，创建SqlSessionFactory对象。</div><div>SqlSessionFactory build(InputStream inputStream, Properties properties)</div><div>通过配置文件，并属性集合参数，创建SqlSessionFactory对象。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>MyBatis可以定义多个环境，以实现对不同数据库的连接。如下代码定义了2个环境，一个ID是dev, 另一个id是pro.</div><div>&lt;environments default=&quot;dev&quot;&gt;</div><div>&nbsp;&nbsp;&lt;environment id=&quot;development&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;transactionManager type=&quot;JDBC&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;dataSource type=&quot;POOLED&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&lt;/environment&gt;</div><div>&nbsp;&nbsp;&lt;environment id=&quot;pro&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;transactionManager type=&quot;MANAGED&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;dataSource type=&quot;JNDI&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</div><div>&nbsp;&nbsp;&lt;/environment&gt;</div><div>&lt;/environments&gt;</div><div>如下代码，将使用默认的dev环境：</div><div>String resource = &quot;mybatis-config.xml&quot;;</div><div>InputStream inputStream = Resources.getResourceAsStream(resource);</div><div>SqlSessionFactory ssf=new SqlSessionFactoryBuilder().build(inputStream);</div><div>如下代码，将使用指定的pro环境：</div><div>String resource = &quot;mybatis-config.xml&quot;;</div><div>InputStream inputStream = Resources.getResourceAsStream(resource);</div><div>SqlSessionFactory ssf=new SqlSessionFactoryBuilder().build(inputStream,”pro”);</div><div>可以配置属性集合参数，传入到SqlSessionFactoryBuilder对象中。</div><div>Properties ps=new Properties();</div><div>ps.put(“username”,”root”);</div><div>ps.put(“password”,”root”);</div><div>SqlSessionFactory ssf=new SqlSessionFactoryBuilder().build(inputStream,”pro”,ps);</div><div>在XML文件中可以使用传入的属性参数，如${username}, ${password}.</div><div>而且传入到SqlSessionFactoryBuilder对象方法build的属性参数，优先级是最高的。</div></div><ul><li><div>SqlSessionFactory</div></li></ul><div>SqlSessionFactory内部维护MyBatis的环境和配置信息，如维护数据库连接池，事务管理器等。</div><div>SqlSessionFactory的最核心功能是打开一个新的SqlSession对象。</div><div>其提供的打开SqlSession的方法如下：</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>SqlSession openSession()</div><div>使用默认的方式打开一个SqlSession。</div><div>（1）NOT auto-commit 不自动提交事务.</div><div>（2）从配置的环境中的数据库连接池取得Connection。</div><div>（3）使用环境配置的事务隔离级别</div><div>（4）PreparedStatements 不重复使用，每次创建新的</div><div>（5）不会批量处理更新，而是直接执行更新update</div><div>最常使用的方法。</div><div>SqlSession openSession(boolean autoCommit)</div><div>可以指定是否自动提交。如果为true，每次SqlSession的持久化方法自动提交。</div><div>不需要执行session.commit();&nbsp;&nbsp;</div><div>不推荐使用。</div><div>SqlSession openSession(Connection connection)</div><div>使用给定的Connection开启一个SqlSession对象。</div><div>不推荐使用。</div><div>SqlSession openSession(TransactionIsolationLevel level)</div><div>直接指定隔离级别，参考Spring的事务处理。</div><div>SqlSession openSession(ExecutorType execType, TransactionIsolationLevel level)</div><div>指定执行SQL语句的类型和隔离级别</div><div>ExecutorType取值：</div><div>ExecutorType.SIMPLE:&nbsp;&nbsp;使用不重复的PreparedStatement</div><div>ExecutorType.REUSE:&nbsp;&nbsp;使用重复的PreparedStatement</div><div>ExecutorType.BATCH：批处理更新语句。</div><div>很少使用。</div><div>SqlSession openSession(ExecutorType execType)</div><div>指定执行SQL的对象类型</div><div>SqlSession openSession(ExecutorType execType, boolean autoCommit)</div><div>执行SQL执行对象类型，是否自动提交事务</div><div>SqlSession openSession(ExecutorType execType, Connection connection)</div><div>执行SQL执行对象类型，给定使用的数据库连接</div></div><ul><li><div>SqlSession&nbsp;</div></li></ul><div>SqlSession是MyBatis的持久化对象，通过它完成持久化操作，即对数据库的CUDR。</div><div>SqlSession提供了直接执行Mapper（也就是DAO）接口的方法</div><ul><ul><li><div>insert：执行DAO接口的增加方法</div></li></ul></ul><div>session.insert(“com.city.oa.dao.IDepartmentDao.insert”,dm);</div><div>这里：com.city.oa.dao.IDepartmentDao.insert 是接口的方法</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dm是DepartmentModel类的对象。</div><ul><ul><li><div>update：修改方法</div></li></ul><div>session.update(“com.city.oa.dao.IDepartmentDao.update”,dm);</div><ul><li><div>delete：删除方法</div></li></ul><div>session.delete(“com.city.oa.dao.IDepartmentDao.delete”,dm);</div><ul><li><div>selectOne：查询方法，取得单个Model对象</div></li></ul><div>DepartmentModel dm=session.selectOne(“com.city.oa.dao.IDepartmentDao.selectByNo”, no);</div><ul><li><div>selectList：查询方法，取得Model类列表</div></li></ul><div>List&lt;DepartmentModel&gt; list=session.selectList(“com.city.oa.dao.IDepartmentDao.selectListByAll”);</div><div>以上持久化方法，实际编程中不推荐使用。应该使用取得DAO接口方法，取得DAO实现类的对象。</div><li><div>取得Mapper（DAO）接口对象的方法</div></li><ul><li><div>通过SqlSession的getMapper方法可以取得DAO接口的实现类对象。</div></li><ul><li><div>这是MyBatis推荐的方法，取得DAO接口的对象后，就可以直接调用DAO接口的方法，不再需要执行insert, update, delete等持久化方法，这些传递的参数都是Object，不是类型安全的。</div></li></ul></ul><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao dd=session.getMapper(IDepartmentDao.class);</div><div>dd.insert(dm);</div><ul><li><div>事务处理方法</div></li></ul></ul><div>SqlSession提供的事务处理方法</div><div>commit();</div><div>rollback();</div><div>MyBatis 第3讲 MyBatis的DAO接口的CUDR方法映射</div><div>MyBatis的映射基础</div><div>MyBatis是一个持久层框架，实现对数据库的CUDR功能。</div><div>MyBatis通过对DAO接口的方法对应的执行SQL的映射，完成核心的持久化功能。</div><div>因此映射是MyBatis的编程基础。</div><ul><li><div>MyBatis的映射的内容：</div></li><ul><li><div>对于DAO接口中定义的持久化功能CUD（增加，修改，删除）方法，, MyBatis实现每个方法对应的SQL语句映射，XML方式对应SQL语句的标记是&lt;insert&gt;, &lt;update&gt;, &lt;delete&gt;，Java注解类方式提供的注解类是@Insert, @Update, @Delete。</div></li><li><div>对于DAO接口中的查询功能R（查询 ）方法，XML方式提供了&lt;select&gt;标记， 注解类方式提供了@Select, 用于实现查询方法对应的SQL语句映射。</div></li><li><div>查询方法结果类型的映射：MyBatis不但要实现方法的对应的select语句映射，还需要定义查询结果集到返回结果类型的映射。</div></li><ul><li><div>如果返回Model类对象，或Model类对象的集合（List），需要定义表的字段到Model类属性的映射。这类似与Hibernate的ORM，但是MyBatis映射时不需要指定表名 与Model类的映射关系。只需指定字段名与属性的对应关系即可。</div></li><li><div>Mybatis可以定义任何类似Model类的类定义，来接收查询返回结果。定义的结果Model类，不一定与表对应。</div></li></ul><div>如查询如下的汇总统计数据：</div><div>select DEPTNO no, avg(SALARY) avg, sum(salary) sum &nbsp;from oa_employee group by DETPNO</div><div>我们可以定义一个接收上面结果的Model类：</div><div>public class TotalInfoModel {</div><div>&nbsp;&nbsp;private int no=0;</div><div>&nbsp;&nbsp;private double avg=0;</div><div>&nbsp;&nbsp;private double sum=0;</div><div>&nbsp;&nbsp;//set和get方法</div><div>}而Hibernate只能实现Model类对表的映射，需要指定类对表， 属性对字段的映射。</div><ul><li><div>MyBatis查询时，实现的是查询结果 对 类的映射，跟表没有关系， 查询可以是任意复杂的select语句，包括关联，分类汇总，子查询等。因此MyBatis是查询结果集到Model类的映射。 这一点一定要牢记</div></li><li><div>开发MyBatis应用时，一定要注意与Hibernate的区别。</div></li></ul><div>Hibernate应用要求每个表需要定义一个对应的Model类。</div><div>MyBatis应用原则上是要求针对查询的结果定义对应的接收Model类，因此MyBatis应用需要定义的Model类，要比表的个数多。因为有些统计查询结果，也需要定义专门的Model类进行接收。</div><div>MyBatis应用根据查询结果的需要，就可以定义一个对应的Model类。</div><div>一般情况下，每个表基本上也是对应一个Model类，用于接收对此表的查询结果。</div><div>也需要对一个统计分析的查询结果，也定义对应的Model类来接收。</div><div>因此MyBatis映射的核心内容：</div><div>DAO接口方法和对应的SQL语句的映射。</div><div>（2）查询结果集到Model类的映射。</div></ul><li><div>MyBatis映射的实现方式</div></li><ul><li><div>XML方式 （推荐使用的）：使用专门的XML文件实现DAO接口方法与SQL的映射，以及查询结果到接收类的映射（广义的Model类）。</div></li></ul><div>这是MyBatis推荐的映射实现方法。XML方式可以实现高级的映射功能，如关联查询结果映射，动态SQL映射等。这些是注解类方式无法实现的。</div><ul><li><div>注解类方式</div></li></ul><div>MyBatis提供了在DAO接口方法前使用注解类实现该方法对应的SQL语句的映射配置、</div><div>如下代码简单演示了使用注解类@Insert，@Update，@Delete完成DAO接口中的增加，修改，删除的方法对应的SQL语句映射的配置。</div></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//部门的DAO接口</div><div>public interface IDepartmentDao {</div><div>//增加新部门</div><div>@Insert(&quot;insert into oa_department (DEPTCODE,DEPTNAME) values (#{code},#{name})&quot;)</div><div>public void insert(DepartmentModel dm) throws Exception;</div><div>//修改部门</div><div>@Update(&quot;update oa_department set DEPTCODE=#{code},DEPTNAME=#{name} where DEPTNO=#{no}&quot;)</div><div>public void update(DepartmentModel dm) throws Exception;</div><div>//删除部门</div><div>@Delete(&quot;delete from oa_department where DEPTO=#{no}&quot;)</div><div>public void delete(DepartmentModel dm) throws Exception;</div><div>}</div></div><div>第2节&nbsp;DAO接口的增加方法映射</div><ul><li><div>DAO接口增加方法映射XML方式：MyBatis提供了&lt;insert&gt;标记实现DAO接口中执行增加insert SQL语句的映射。</div></li></ul><div>&lt;insert</div><div>&nbsp;&nbsp;id=&quot;DAO接口方法名&quot;</div><div>&nbsp;&nbsp;parameterType=&quot;DAO接口方法参数类型&quot;</div><div>&nbsp;&nbsp;flushCache=&quot;true|false&quot;</div><div>&nbsp;&nbsp;statementType=&quot;执行SQL语句对象的类型&quot;</div><div>&nbsp;&nbsp;keyProperty=&quot;主属性名称&quot;</div><div>&nbsp;&nbsp;keyColumn=&quot;主键字段名称&quot;</div><div>&nbsp;&nbsp;useGeneratedKeys=&quot;true|false&quot;</div><div>&nbsp;&nbsp;timeout=&quot;20&quot;&gt;</div><div>&nbsp;INSERT 语句</div><div>&lt;/insert&gt;</div><ul><li><div>&lt;insert&gt;标记的主要属性：</div></li><ul><li><div>.id：指定DAO接口的方法名。实现对该DAO接口方法的执行。</div></li><li><div>parameterType：指定DAO接口方法参数的类型。一般情况下，不需要指定该属性。MyBatis会自动读取方法的参数类型。</div></li><li><div>flushCache：是否请求Session缓存和2级缓存，当执行完insert是，默认是true。原则上在执行完insert,update, delete时应该清除缓存，当其他用户执行select时，取得的数据是最新的。而不是原来缓存的数据。</div></li><li><div>timeout：设置执行insert语句的超时时间。超过此时间，将抛出异常。</div></li><li><div>.statementType：指定SQL语句的类型，取值：STATEMENT, PREPARED,CALLABLE。默认是PREPARED，使用PreparedStatement对象执行SQL语句。</div></li><li><div>useGeneratedKeys：指定是否使用数据库的自增量字段，取值true: 使用数据库的自增量字段机制，false:不使用。默认为false. 当使用数据库的自增量字段时，应该使用该属性，并取值为true.</div></li><li><div>keyProperty：当使用自动确定主属性的值时，需要指定该属性。取值为Model类的主键属性名。</div></li></ul><div>如 keyProperty=”no”</div><ul><li><div>keyColumn：当使用自动确定主键字段的值时，需要指定该属性。取值为表的主键字段名。如 keyColumn=”DEPTNO”</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;insert id=&quot;insert&quot;&nbsp;&nbsp;&gt;</div><div>insert into oa_employee (EMPID, EMPPASSWORD, EMPNAME,EMPSEX,AGE,Birthday)</div><div>values (#{id},#{password},#{name},#{sex},#{age},#{birthday})</div><div>&lt;/insert&gt;</div><div>MyBatis映射XML文件中使用#{参数名或属性名} 引用DAO接口方法中的参数。</div><div>如果方法中的参数类型是Model对象类型， 则使用#{属性名} 取得Model对象的指定的属性值。如#{name}。</div></div><ul><li><div>主键自增量字段的值的生成的映射</div></li></ul><div>在实际项目中，表的主键字段一般是使用代理主键，并且使用自动增量的方式为主键字段赋值。基本上所有的数据库都支持自增量字段的功能</div><div>对于支持自增量主键的映射，&lt;insert&gt;标记提供了如下属性用于配置自增量字段：</div><div>keyProperty=&quot;Model类属性名&quot; &nbsp;定义与主键字段对应的Model类的属性名。</div><div>keyColumn=&quot;PK字段名&quot; &nbsp;定义主键字段的名</div><div>useGeneratedKeys=&quot;true&quot; &nbsp;取值true，表示使用数据库的自增量字段的功能。不需要手动为主键赋值f。</div><div>如下是映射部门DAO接口 insert增加方法的XML配置：</div><div>&lt;insert id=&quot;insert&quot; keyProperty=&quot;no&quot; keyColumn=&quot;DEPTNO&quot; useGeneratedKeys=&quot;true&quot; &gt;</div><div>insert into oa_department (DEPTCODE,DEPTNAME) values (#{code},#{name})</div><div>&lt;/insert&gt;</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>Service层调用DAO接口的方法完成增加功能：</div><div>public void add(DepartmentModel dm) throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory(&quot;development&quot;);</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao dd=session.getMapper(IDepartmentDao.class);</div><div>dd.insert(dm);</div><div>session.commit();</div><div>session.close();</div><div>}</div><div>调用业务层方法后：</div><div>DepartmentModel dm=new DepartmentModel();</div><div>dm.setCode(&quot;D99&quot;);</div><div>dm.setName(&quot;99部&quot;);</div><div>IDepartmentService ds=new DepartmentServiceImplWithMyBatis();</div><div>ds.add(dm);</div><div>调用后，dm对象的主属性no的值会自动被MyBaits使用自增量字段的值赋值。</div><div>因此可以取得新增的部门编号。</div><div>可以把业务接口改成返回增加新的部门编号的形式：</div><div>public int add(DepartmentModel dm) throws Exception {</div><div>SqlSessionFactory ssf=MyBatisFactory.createSqlSessionFactory(&quot;development&quot;);</div><div>SqlSession session=ssf.openSession();</div><div>IDepartmentDao dd=session.getMapper(IDepartmentDao.class);</div><div>dd.insert(dm);</div><div>session.commit();</div><div>session.close();</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return dm.getNo(); //返回新增加的主键的值，因为是自增量字段，事先不需要赋值</div><div>}</div></div><ul><li><div>不支持自增量字段情况下的主键值自动生成映射</div></li></ul><div>有的数据库是不支持自增量字段的，如Oracle就没有自增量字段。</div><div>对不支持自增量字段的数据库，MyBatis提供了标记&lt;selectKey&gt;标记并使用在&lt;insert&gt;标记内，用于为主键字段和主属性提供计算的值。</div><div>该标记的使用语法如下：</div><div>&lt;insert &nbsp;.... &gt;</div><div>&lt;selectKey &nbsp;&nbsp;</div><div>keyProperty=&quot;主属性&quot; &nbsp;&nbsp;</div><div>resultType=&quot;select语句的返回类型&quot; &nbsp;&nbsp;</div><div>order=&quot;BEFORE|AFTER&quot; &nbsp;&nbsp;</div><div>tatementType=&quot;PREPARED&quot;&gt;</div><div>&nbsp;&nbsp;select 语句（查询结果用于设置主键的值）</div><div>&lt;/selectKey&gt;</div><div>&nbsp;INSERT SQL语句</div><div>&lt;/insert&gt;</div><ul><li><div>&lt;selectKey&gt;的属性</div></li><ul><li><div>keyProperty：指定主属性的名，selectKey将为主属性赋值。</div></li><li><div>.keyColumn：指定主键字段的名称，MyBatis执行&lt;selectKey&gt;中的SQL语句，将执行结果写入到表记录的</div></li></ul><div>主键字段中。</div><ul><li><div>resultType.指定执行select结果的数据类型，一般使用MyBatis的类型的别名。</div></li><li><div>order：取值：BEFORE 或AFTER。BEFORE：表示&lt;selectKey&gt;中的select语句先执行，再执行insert语句； AFTER: 表示显示执行insert，再执行&lt;selectKey&gt;中的select语句。</div></li></ul><div>实际编程中使用AFTER的情况极少。</div><ul><li><div>statementType：取值：STATEMENT, PREPARED and CALLABLE</div></li><div>指定执行Select语句的对象类型。默认是PREPARED，使用PreparedStatement执行</div><div>&lt;insert id=&quot;insert&quot;&gt;</div><div>&nbsp;&nbsp;&lt;selectKey keyProperty=&quot;no&quot; &nbsp;resultType=&quot;int&quot; order=&quot;BEFORE&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;select max(DEPTNO)+1 from oa_department</div><div>&nbsp;&nbsp;&lt;/selectKey&gt;</div><div>&nbsp;&nbsp;insert into oa_department (DEPTNO,DEPTCODE,DEPTNAME) values (#{no},#{code},#{name})</div><div>&lt;/insert&gt;</div></ul><li><div>使用Oracle的序列的值为主键字段生成值</div></li><ul><li><div>由于Oracle没有自增量字段，提供了序列对象可以完成生成不重复数据的机制。</div></li></ul><div>可以指定使用那个序列为主键值生成数据。</div><div>如果部门表定义在Oracle数据库中，并且创建了序列SQ_DEPT，为部门的主键值和主属性生成值的映射案例为：</div><div>&lt;insert id=&quot;insert&quot;&gt;</div><div>&nbsp;&nbsp;&lt;selectKey keyProperty=&quot;no&quot; &nbsp;resultType=&quot;int&quot; order=&quot;BEFORE&quot;&gt;</div><div>select SQ_DEPT.nextval &nbsp;from dual</div><div>&nbsp;&lt;/selectKey&gt;</div><div>&nbsp;&nbsp;insert into oa_department (DEPTNO,DEPTCODE,DEPTNAME) values (#{no},#{code},#{name})</div><div>&lt;/insert&gt;</div><div>案例中先执行select语句，取得序列的下个值，并赋值给主属性no, 在实现insert语句，实现数据的插入。</div><li><div>映射SQL中的参数：在定义DAO接口方法对应的SQL语句时，基本上都需要引入DAO接口方法的参数值。</div></li><li><div>简单类型参数：&nbsp;public DepartmentModel getByNo(int no) throws Exception;</div></li></ul><div>在写SQL语句时，直接使用#{参数名}引用方法的参数，如：</div><div>Select * from oa_department where DEPTNO=#{no}</div><ul><li><div>Model对象类型参数：当DAO接口方法参数是Model对象时，使用#{属性名}取得对象的属性</div></li></ul><div>public void insert(DepartmentModel dm) throws Exception;</div><div>映射语句：</div><div>&lt;insert id=&quot;insert&quot; keyProperty=&quot;no&quot; keyColumn=&quot;DEPTNO&quot; useGeneratedKeys=&quot;true&quot; &gt;</div><div>insert into oa_department (DEPTCODE,DEPTNAME) values (#{code},#{name})</div><div>&lt;/insert&gt;</div><ul><li><div>多参数：</div></li><ul><li><div>使用Map：因为Map是key-value对，在映射SQL中，可以使用#{key}引用对应的value值。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(Map params) throws Exception;</div><div>如果调用时，传入的Map对象如下：</div><div>Map params=new HashMap();</div><div>params.put(&quot;start&quot;,1);</div><div>params.put(&quot;rows&quot;,20);</div><div>List&lt;DepartmentModel&gt; list=dao.getListByAllWithPage(params);</div><div>在映射SQL的代码中，使用 #{key}引用Map的key值。</div><div>&lt;select id=&quot;getListByAllWithPage&quot; parameterType=”map” resultType=&quot;Department&quot; &gt;</div><div>select DEPTNO as no, DEPTCODE as code, DEPTNAME as name&nbsp;&nbsp;</div><div>from oa_department&nbsp;&nbsp;limits #{start,javaType=int},#{rows,javaType=int}&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&lt;/select&gt;</div><div>由于Map的key和value的类型都是Object，因此在使用#{key}引用Map的参数key时，推荐使用javaType指定参数值的类型，以便MyBatis更好的解析参数。</div></div><ul><ul><li><div>使用细粒度的参数：DAO接口参数可以使用独立的细粒度参数。</div></li></ul><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(int start,int rows) throws Exception;</div><div>在此情况下，这种多个细粒度参数是无法直接在SQL引用的，必须使用注解类@Param对每个参数进行注解，MyBatis才能引用这些参数。</div></ul><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(@Param(&quot;start&quot;) int start,@Param(&quot;rows&quot;) int rows) throws Exception;</div><div>&nbsp;Select * from oa_department limits #{start},#{rows}</div><ul><li><div>参数的引用：直接引用参数或Model对象的属性</div></li><ul><li><div>指定参数的类型：#{}表达式，除指定参数名或属性名外，可以指定参数的Java类型，和数据库的字段类型。</div></li></ul><div>#{property,javaType=int,jdbcType=NUMERIC}#{height,javaType=double,jdbcType=NUMERIC,numericScale=2}</div><div>注意：如果数据库字段允许为null，而Java类型是简单类型， 此时应该使用jdbcType指定数据库字段类型。原则上与Model类简单类型（如int, double,long）</div></ul><div>第3节&nbsp;DAO接口的修改和删除方法的SQL映射</div><ul><li><div>DAO接口修改方法的映射</div></li><ul><li><div>修改方法的标记&lt;update&gt;语法</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;update</div><div>&nbsp;&nbsp;id=&quot;DAO接口方法名&quot;</div><div>&nbsp;&nbsp;parameterType=&quot;方法的参数类型&quot;</div><div>&nbsp;&nbsp;flushCache=&quot;true|false&quot;</div><div>&nbsp;&nbsp;statementType=&quot;执行SQL语句的对象的类型&quot;</div><div>&nbsp;&nbsp;timeout=&quot;超时时间&quot;&gt;</div><div>UPDATE SQL语句</div><div>&lt;/update&gt;</div><div>&lt;update&gt;标记的属性与&lt;insert&gt;的属性和功能相同</div><div>案例：</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;Department&quot;&gt;</div><div>update oa_department set DEPTCODE=#{code}, DEPTNAME=#{name}</div><div>where DEPTNO=#{no}</div><div>&lt;/update&gt;</div></div><ul><li><div>DAO接口删除方法的映射</div></li><ul><li><div>DAO接口中删除方法的映射标记&lt;delete&gt;语法：</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;delete&nbsp;&nbsp;&nbsp;</div><div>id=&quot;DAO接口方法名&quot;</div><div>&nbsp;&nbsp;parameterType=&quot;方法的参数类型&quot;</div><div>&nbsp;&nbsp;flushCache=&quot;true|false&quot;</div><div>&nbsp;&nbsp;statementType=&quot;执行SQL语句的对象的类型&quot;</div><div>&nbsp;&nbsp;timeout=&quot;超时时间&quot;&gt;</div><div>DELETE SQL语句</div><div>&lt;/delete&gt;</div><div>其中：&lt;update&gt;标记的属性与&lt;insert&gt;的属性和功能相同</div><div>案例：</div><div>&lt;delete id=&quot;delete&quot; parameterType=&quot;Department&quot;&gt;</div><div>delete from oa_department where DEPTNO=#{no}</div><div>&lt;/delete&gt;</div></div><div>第4节&nbsp;DAO接口中查询方法的SQL映射</div><div>基本上所有软件项目在对数据库进行操作时，80%-90%的操作是查询操作，因为insert, update和delete操作都没有select语句执行的次数多。</div><div>因此MyBaits在映射DAO接口的方法方法时，使用最多的也是Select的SQL映射。</div><ul><li><div>MyBatis映射DAO接口的查询方法时需要映射的内容</div></li><ul><li><div>DAO接口方法对应的SELECT语句映射。：需要完成方法对应的Select语句的映射配置，使用&lt;select&gt;标记完成。</div></li><li><div>DAO接口方法的返回结果类型的映射：</div></li></ul><div>需要告诉MyBatis如何将Select语句返回的结果集与DAO接口的方法的返回类型进行映射，即ResultMap映射配置。</div><div>通常情况下，DAO接口查询的方法返回Model类对象，或Model对象的集合（List&lt;Model类&gt;）,此时需要定义返回的结果集的字段与Model类属性之间的映射， 这与Hibernate的Model类映射非常类似。</div><div>如果定义复杂的select语句，返回一些统计数据，此时就需要定义一个查询结果的类，用于接收返回的数据。</div><li><div>XML映射文件中映射DAO接口的查询方法</div></li></ul><div>MyBatis使用&lt;select&gt;标记完成DAO接口中查询方法的SQL映射。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>其语法为：</div><div>&lt;select</div><div>&nbsp;&nbsp;id=&quot;DAO接口的方法名&quot;</div><div>&nbsp;&nbsp;parameterType=&quot;方法的参数类型&quot;</div><div>&nbsp;&nbsp;resultType=&quot;结果类型&quot;</div><div>&nbsp;&nbsp;resultMap=&quot;结果映射MapID&quot;</div><div>&nbsp;&nbsp;flushCache=&quot;true|false&quot;</div><div>&nbsp;&nbsp;useCache=&quot;true|false&quot;</div><div>&nbsp;&nbsp;timeout=&quot;10&quot;</div><div>&nbsp;&nbsp;fetchSize=&quot;256&quot;</div><div>&nbsp;&nbsp;statementType=&quot;STATEMENT|PREPARED|CALLABLE&quot;</div><div>&nbsp;&nbsp;resultSetType=&quot;FORWARD_ONLY|SCROLL_SENSITIVE|SCROLL_INSENSITIVE| DEFAULT&quot;&gt;</div><div>&nbsp;&nbsp;SELECT SQL语句</div><div>&lt;/select&gt;</div><div>映射案例：部门DAO接口：</div><div>//查询部门-查询单个部门</div><div>public DepartmentModel getByNo(int no) throws Exception;</div><div>映射代码：</div><div>&lt;select id=&quot;selectByBo&quot; parameterType=&quot;_int&quot; resultType=&quot;Department&quot; &gt;</div><div>select DEPTNO as no, DEPTCODE as code, DEPTNAME as name</div><div>from oa_department</div><div>where DEPTNO=#{no}</div><div>&lt;/select&gt;</div></div><ul><li><div>&lt;select&gt;标记的属性：</div></li></ul><div>以部门DAO接口的方法：</div><div>public DepartmentModel getByNo(int no) throws Exception;</div><div>为例来说明各个属性的取值</div><ul><ul><li><div>id：指定DAO接口的查询方法名。&lt;select id=”getByNo” &gt;</div></li><li><div>parameterType：指定DAO接口的参数的类型，可以是Java的类全名，也可以是配置文件中配置的别名，如果是Model类，推荐配置别名。一般不需要指定该属性，MyBatis会使用反射机制取得方法中的参数类型。</div></li><ul><li><div>&lt;select id=”getByNo” parameterType=”_int” &gt;</div></li></ul><div>如果方法中有多个参数，不能指定该属性，如下DAO接口方法：</div><div>//查询部门-查询多个部门，返回部门列表,分页方式</div><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(int rows,int page) throws Exception;</div><div>方法中传递2个参数，不能指定parameterType。</div><div>&lt;select id=”getListByAllWithPage” &nbsp;&gt;当方法中包含多个参数时，为了在映射SQL中引用参数的名称，需要使用注解类@Param为参数取名，否则MyBatis无法取得参数的名称</div><li><div>resultType：指定DAO接口方法的返回结果的类型。</div></li><ul><li><div>如果DAO接口方法返回Model类对象，resultType就是Model类。</div></li><li><div>如果返回Model类的集合对象，如List&lt;Model类&gt;，则resultType也是Model类，记住不是List类型。</div></li><li><div>如果返回简单类型，直接就是简单类型， 如返回int, resultType=”_int”</div></li><li><div>注意：如果返回类型是Model类对象，要求select的项目的名称必须与Model类的属性名一致。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>如部门的Model类的定义如下：</div><div>@Alias(&quot;Department&quot;)</div><div>public class DepartmentModel {</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private int no=0;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private String code=null;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private String name=null;</div><div>&nbsp;&nbsp;&nbsp;//set和get方法</div><div>}</div><div>DAO接口方法：</div><div>public DepartmentModel getByNo(int no) throws&nbsp;&nbsp;Exception;</div><div>如果查询映射如下：</div><div>&lt;select id=”selectByNo” resultType=”Department”&nbsp;&nbsp;parameterType=”_int” &gt;</div><div>Select DEPTNO,DEPTCODE, DEPTNAME</div><div>From oa_department where DEPTNO=#{no}</div><div>&lt;/select&gt;</div><div>由于字段名与Model类的属性名不一致，MyBatis是无法把字段值set到对应的Model对象的属性中。</div><div>解决方法：</div><div>1. 定义Model类属性名与字段名完全一致。</div><div><br/></div><div>@Alias(&quot;Department&quot;)</div><div>public class DepartmentModel {</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private int deptNo=0;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private String deptCode=null;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private String deptName=null;</div><div>&nbsp;&nbsp;&nbsp;//set和get方法</div><div>}</div><div>注意：字段名与属性名的大小写是无关的，只要字符相同即可。</div></div><div><br/></div><ul><ul><li><div>将select的项目名称通过别名改造为与属性名称相同。</div></li><ul><li><div>&lt;select id=”selectByNo” resultType=”Department” parameterType=”_int” &gt;</div></li><li><div>Select DEPTNO no,DEPTCODE code, DEPTNAME as name</div></li><li><div>From oa_department where DEPTNO=#{no}</div></li><li><div>&lt;/select&gt;</div></li></ul><li><div>如果字段名与属性名不一致，通过别名方式确实可以解决问题，但是如果需要写的select SQL很多，因为DAO接口会有非常多的查询方法，返回Model类，或Model类集合</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>例如部门DAO接口就定义了3个查询方法，都是返回Model对象或Model对象集合：</div><div>//查询部门-查询单个部门</div><div>public DepartmentModel getByNo(int no) throws Exception;</div><div>//查询部门-查询多个部门，返回部门列表</div><div>public List&lt;DepartmentModel&gt; getListByAll() throws Exception;</div><div>//查询部门-查询多个部门，返回部门列表</div><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(@Param(&quot;start&quot;) int start,@Param(&quot;rows&quot;) int rows) throws Exception;</div><div>在写查询的select映射语句时，就需要反复写字段名和别名</div><div>select DEPTNO no,DEPTCODE code, DEPTNAME as name From oa_department</div><div>如果可以写成</div><div>select * from oa_department</div><div>将极大简化查询方法映射select语句的编写。</div><div>这种情况就需要强大的ResultMap定义了，即结果集与Model类的映射。</div><div>resultMap</div></div><div><br/></div><ul><li><div>resultMap：指定已经定义的ResultMap定义。通过ResultMap的映射将select查询结果 映射到Mode类对象中。</div></li></ul><div>下面将专门讲解ResultMap的定义和使用。</div><div>记住：resultType和resultMap只能二选一。</div><div>推荐使用resultMap.</div><ul><li><div>flushCache：执行此select语句前是否清空本地缓存（SqlSession缓存）和二级缓存（使用第三方缓存框架实现的缓存）。</div></li></ul><div>取值：true &nbsp;清除缓存， false：不清空缓存。 默认:false</div><ul><li><div>.useCache：是否将查询的结果存储到二级缓存中。取值：true 存放到二级缓存；false:不存储到二级缓存。默认：true</div></li><li><div>timeout：设置select语句的执行超时时间。默认未设定，根据数据库的默认设置值。</div></li><li><div>fetchSize：设置查询的抓取的结果集记录个数。 MySQL不支持批量抓取，查询时会一次性取得所有记录，容易造成内存溢出。而其他数据库如Oracle，支持批量抓取，每次处理设定的记录数。</div></li><li><div>statementType：设置执行映射SQL语句的类型，取值：STATEMENT,PREPARED,CALLABLE</div></li></ul><div>默认：PREPARED 预编译的对象</div><ul><li><div>resultSetType：设置查询结果集光标类型，取值：FORWARD_ONLY| SCROLL_SENSITIVE|SCROLL_INSENSITIVE|DEFAULT</div></li><li><div>默认未设定，当JDBC驱动类自动确定结果集光标类型。</div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//查询部门-查询单个部门</div><div>public DepartmentModel getByNo(int no) throws Exception;</div><div>//查询部门-查询多个部门，返回部门列表</div><div>public List&lt;DepartmentModel&gt; getListByAll() throws Exception;</div><div>//查询部门-查询多个部门，返回部门列表</div><div>public List&lt;DepartmentModel&gt; getListByAllWithPage(@Param(&quot;start&quot;) int start,@Param(&quot;rows&quot;) int rows) throws Exception;</div><div>映射案例：</div><div>&lt;select id=&quot;selectByBo&quot; parameterType=&quot;_int&quot; resultType=&quot;Department&quot; &gt;</div><div>select DEPTNO as no, DEPTCODE as code, DEPTNAME as name</div><div>from oa_department&nbsp;&nbsp;where DEPTNO=#{no}</div><div>&lt;/select&gt;</div><div><br/></div><div>&lt;select id=&quot;getListByAll&quot;&nbsp;&nbsp;resultType=&quot;Department&quot; useCache=&quot;true&quot; flushCache=&quot;false&quot;&gt;</div><div>select DEPTNO as no, DEPTCODE as code, DEPTNAME as name&nbsp;&nbsp;from oa_department&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&lt;/select&gt;</div><div>&lt;select id=&quot;getListByAllWithPage&quot;&nbsp;&nbsp;resultType=&quot;Department&quot; &gt;</div><div>select DEPTNO as no, DEPTCODE as code, DEPTNAME as name&nbsp;&nbsp;from oa_department</div><div>limits #{start},#{rows}&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&lt;/select&gt;</div></div><div>第5节&nbsp;MyBatis查询方法的结果类型映射</div><ul><li><div>直接使用resultType定义查询结果</div></li></ul><div>通过&lt;select&gt;标记的属性resultType指定方法的返回类型。</div><div>前面已经讲过通过resultType指定返回类型，要求select项目的名必须与Model的属性名称一致。</div><div>如果select的项目名称与Model类不一致，需要使用别名实现查询结果的读取。</div><div>&lt;select id=&quot;getListByAllWithPage&quot; &nbsp;resultType=&quot;Department&quot; &gt;</div><div>&nbsp;select DEPTNO as no, DEPTCODE as code, DEPTNAME as name &nbsp;from oa_department</div><div>&nbsp;limits #{start},#{rows} &nbsp;</div><div>&lt;/select&gt;</div><div>实际项目中查询方法返回Model类或Model类的集合对象时，使用resultType指定返回类型是非常不方便的。推荐使用单独定义的ResultMap。</div><div>方法如果返回简单类型，如String， int,double , long 应该使用resultType指定结果类型。</div><ul><li><div>使用&lt;resultMap&gt;定义查询结果</div></li><ul><li><div>通过&lt;select&gt;标记的属性resultMap可以指定单独定义的结果集映射ID。</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>案例：</div><div>&lt;select id=&quot;getListByAll&quot;&nbsp;&nbsp;resultMap=&quot;DepartmentResultMap&quot; useCache=&quot;true&quot; flushCache=&quot;false&quot;&gt;</div><div>select *&nbsp;&nbsp;from oa_department&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&lt;/select&gt;</div><div>通过resultMap=&quot;DepartmentResultMap&quot;指定定义的resultMap。</div></div><div>引用的resultMap必须事先定义，可以定义在当前映射文件，以可以定义在其他的映射文件中。</div><div>引入其他映射文件中定义的resultMap需要指定DAO接口的名称。</div><div>&lt;select id=&quot;getListByAll&quot; &nbsp;</div><div>resultMap=&quot;com.city.oa.dao.IDepartmentDao.DepartmentResultMap&quot;</div><div>useCache=&quot;true&quot; flushCache=&quot;false&quot;&gt;</div><div>select * &nbsp;from oa_department &nbsp;</div><div>&lt;/select&gt;</div><ul><li><div>&lt;resultMap&gt;标记：MyBatis提供了专门的标记&lt;resultMap&gt;定义结果集映射。</div></li></ul><div>该标记的功能是完成查询select项目名称到Model类属性间的映射。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;resultMap id=&quot;DepartmentResultMap&quot; type=&quot;Department&quot;&gt;</div><div>&nbsp;&nbsp;&lt;id property=&quot;no&quot; column=&quot;DEPTNO&quot; /&gt;</div><div>&nbsp;&nbsp;&lt;result property=&quot;code&quot; column=&quot;DEPTCODE&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;result property=&quot;name&quot; column=&quot;DEPTNAME&quot;/&gt;</div><div>&lt;/resultMap&gt;</div><div>定义了resultMap后，</div><div>&lt;select id=&quot;getListByAll&quot;&nbsp;&nbsp;resultMap=&quot;DepartmentResultMap&quot; &gt;</div><div>select&nbsp;&nbsp;*&nbsp;&nbsp;from oa_department&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&lt;/select&gt;</div><div>使用resultType的select的映射：</div><div>&lt;select id=&quot;getListByAll&quot;&nbsp;&nbsp;resultType=&quot;Department&quot; &gt;</div><div>select DEPTNO as no, DEPTCODE as code, DEPTNAME as name&nbsp;&nbsp;</div><div>from oa_department</div><div>&lt;/select&gt;</div><div>可见使用resultType指定返回结果，必须指定别名才能实现当字段名与属性名不一致的情况。</div></div><ul><li><div>&lt;resultMap&gt;的语法&nbsp;</div></li><ul><li><div>属性</div></li><ul><li><div>id：指定结果映射Map的ID</div></li><li><div>type: 指定对应的Model类型</div></li><li><div>extends : 指定父resultMap的ID，实现映射定义的继承机制。</div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;resultMap id=&quot;DepartmentResultMap&quot; type=&quot;Department&quot;&gt;</div><div>&nbsp;&nbsp;&lt;id property=&quot;no&quot; column=&quot;DEPTNO&quot; /&gt;</div><div>&nbsp;&nbsp;&lt;result property=&quot;code&quot; column=&quot;DEPTCODE&quot;/&gt;</div><div>&nbsp;&nbsp;&lt;result property=&quot;name&quot; column=&quot;DEPTNAME&quot;/&gt;</div><div>&lt;/resultMap&gt;</div><div>&lt;resultMap id=&quot;DepartmentWithEmployeeResultMap&quot; type=&quot;Department&quot; extends=”DepartmentResultMap”&gt;</div><div>&lt;collection property=”employees” column=”DEPTNO” select=”com.city.oa.dao.IEmployeeDao.selectListByDepartment” /&gt;</div><div>&lt;/resultMap&gt;</div></div><ul><ul><li><div>子元素&lt;id&gt;：指定与主键字段对应的属性映射。</div></li><ul><li><div>&lt;id property=&quot;no&quot; column=&quot;DEPTNO&quot; /&gt;</div></li><li><div>属性：property指定Model类的属性名， column指定select的项目名。</div></li></ul><li><div>子元素&lt;result&gt;：指定非主键，非外键字段对应的属性。即普通属性的映射。</div></li></ul><div>属性:property指定Model类的属性名，column指定Select项目的名称，一般是表的字段名， 也可以是select项目的别名。</div><ul><li><div>子元素&lt;association&gt;</div></li><li><div>子元素&lt;collection&gt;</div></li></ul></ul><hr/><div>MyBatis第4讲 MyBatis SQL的高级映射和编程</div><div>实际项目开发中，所有管理的业务对象都是有关联关系的，如部门，员工，爱好，地址和联系方式等。在数据库中使用外键作为表间的关联实现，在Java Model类中使用关联属性对象间的关联。</div><div>本章首先讲解关联关系的增加，修改，删除的SQL映射和编程，再讲解关联关联的查询的SQL映射和编程。</div><div>最后讲解MyBatis的动态SQL语句映射。</div><div>第1节 有关联关系的CUD映射和编程</div><ul><li><div>OA项目的表间关系</div></li></ul><div>数据库表：部门表（oa_department），爱好表(oa_behave)，员工表(oa_employee)，地址表(oa_employeeaddress)，联系信息表(oa_employeecontactinfo), 员工爱好关联表（oa_employeebehave）</div><ul><li><div>【】OA项目的Model类定义代码</div></li></ul><div>OA项目中Model类的定义代码如下：（与Hibernate项目相同）（注意省略了get和set方法）</div><div>需要注意的是，Hibernate定义对多关联属性时，推荐使用Set集合，而MyBatis推荐使用List集合，因此Model类中原来的Set都改为List类型。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>部门Model类</div><div>@Alias(&quot;Department&quot;)</div><div>public class DepartmentModel {</div><div>private int no=0;</div><div>private String code=null;</div><div>private String name=null;</div><div>//一对多</div><div>private List&lt;EmployeeModel&gt; employees=null; //部门关联的员工对象（多个）</div><div>}</div><div>2.爱好Model类</div><div>@Alias(&quot;Behave&quot;)</div><div>public class BehaveModel implements Serializable {</div><div>private int no=0;</div><div>private String name=null;</div><div>//多对多关联</div><div>private List&lt;EmployeeModel&gt; employees=null; //指定爱好下的员工集合</div><div>}</div><div>3.员工Model类</div><div>@Alias(&quot;Employee&quot;)</div><div>public class EmployeeModel implements Serializable {</div><div>private String id=null;</div><div>private String password=null;</div><div>private String name=null;</div><div>private String sex=null;</div><div>private int age=0;</div><div>private double salary=0;</div><div>private Date birthday=null;</div><div>private Date joinDate=null;</div><div>private byte[] photo=null;</div><div>private String photoFileName=null;</div><div>private String photoContentType=null;</div><div>private String cardcode=null; //身份证号</div><div>//多对一关联关系</div><div>private DepartmentModel department=null; //关联的部门</div><div>//多对多关联</div><div>private List&lt;BehaveModel&gt; behaves=null; //员工拥有的爱好集合</div><div>//一对一关联， 员工的地址信息（共享主键方式）</div><div>private AddressModel address=null;</div><div>//一对一关联，员工的联系信息（独立外键方式，外键唯一且不为空）</div><div>private ContactInfoModel contactInfo=null;</div><div>}</div><div>可见员工Model类与其他Model类都有关联 。</div><div>4.地址Model类</div><div>@Alias(&quot;Address&quot;)</div><div>public class AddressModel implements Serializable {</div><div>private String id=null; //员工账号 主键同时是外键</div><div>private String city=null; //城市</div><div>private String address=null; //地址</div><div>private String postcode=null; //邮政编码</div><div>private EmployeeModel employee=null; //外键关联的员工，一对一</div><div>}</div><div>地址Model类与员工Model类构成一对一关联关系。使用共享主键方式实现，即主键同时是外键。</div><div>5.员工联系信息Model类</div><div>@Alias(&quot;ContactInfo&quot;)</div><div>public class ContactInfoModel implements Serializable {</div><div>private int no=0;</div><div>private String mail=null;</div><div>private String mobile=null;</div><div>private String qq=null;</div><div>private EmployeeModel employee=null;</div><div>}</div><div>员工联系Model类与员工Model类也构成一对一关联关系，使用单独的外键加唯一性约束实现。</div><div><br/></div></div><ul><li><div>有关联关系的Model类对应表的持久化映射（增加，修改，删除）</div></li><ul><li><div>一对多和多对一关联关系</div></li><ul><li><div>增加操作时先增加一方的对象，如部门和员工，先增加部门信息，再增加员工信息。修改操作时，单独修改多方就可以。删除操作直接删除多方即可。</div></li><li><div>一方映射：部门增加，修改，删除的映射均不需要修改</div></li></ul><div>&lt;insert id=&quot;insert&quot; keyProperty=&quot;no&quot; keyColumn=&quot;DEPTNO&quot; useGeneratedKeys=&quot;true&quot; &gt;</div><div>insert into oa_department (DEPTCODE,DEPTNAME) values (#{code},#{name})</div><div>&lt;/insert&gt;</div><ul><li><div>多方的增加映射：在原来没有关联的映射基础上，需要对外键字段的使用关联对象的属性。如下增加员工的映射：</div></li></ul><div>&lt;insert id=&quot;insert&quot; parameterType=&quot;Employee&quot; &gt;</div><div>insert into oa_employee (EMPID,DEPTNO,EMPPASSWORD,EMPNAME,EMPSEX,AGE,BIRTHDAY,JOINDATE)</div><div>values (#{id},#{department.no},#{password},#{name},#{sex},#{age},#{birthday},#{joinDate})</div><div>&lt;/insert&gt;</div><div>从映射代码可见，员工表的DEPTNO是外键字段，赋值时使用#{department.no}，即关联的部门Model对象的no属性值。</div><ul><li><div>多方的修改映射</div></li></ul><div>多方修改映射时，需要对外键字段的赋值，使用关联对象的主属性值。</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;Employee&quot;&gt;</div><div>update oa_employee set DEPTNO=#{department.no} EMPPASSWORD=#{password},EMPNAME=#{name},</div><div>EMPSEX=#{sex},AGE=#{age},BIRTHDAY=#{birthday},JOINDATE=#{joinDate}</div><div>where EMPID=#{id}</div></ul><div>&lt;/update&gt;</div><ul><li><div>多方的删除映射</div></li></ul><div>多方的删除映射不需要修改。</div><ul><li><div>.多对多关联关系的操作映射</div></li><ul><li><div>多对多关联的增加编程</div></li><ul><li><div>增加时单独增加员工和爱好</div></li><li><div>再映射为员工增加爱好的方法。</div></li></ul></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>//为员工增加爱好，单个爱好, 参数：员工ID，爱好编号</div><div>public void insertBehave(@Param(&quot;id&quot;) String id,@Param(&quot;behaveNo&quot;) int behaveNo) throws Exception;</div><div>XML映射：</div><div>&lt;insert id=&quot;insertBehave&quot;&gt;</div><div>insert into oa_employeebehave values (#{id},#{behaveNo})</div><div>&lt;/insert&gt;</div><div>直接向关联表增加关联数据即可。</div><div>//为员工增加爱好，多个爱好,参数:员工ID，爱好编号数组</div><div>public void insertBehaves(@Param(&quot;id&quot;) String id,@Param(&quot;behaveNos&quot;) int[] behaveNos) throws Exception;</div></div><div>使用MyBatis的动态SQL映射，通过&lt;foreach&gt;标记实现循环增加映射</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;insert id=&quot;insertBehaves&quot;&gt;</div><div>insert into oa_employeebehave values</div><div>&lt;foreach collection=&quot;behaveNos&quot; item=&quot;behaveNo&quot; separator=&quot;,&quot;&gt;</div><div>(#{id},#{behaveNo})</div><div>&lt;/foreach&gt;</div><div>&lt;/insert&gt;</div><div>执行时生成：</div><div>insert into oa_employeebehave values (&quot;1001&quot;,1),(&quot;1001&quot;,2),(&quot;1001&quot;,3)</div></div><div><br/></div><ul><ul><li><div>多对多关联的修改编程</div></li><ul><li><div>对员工的爱好进行修改，通常是先将此员工的爱好全部参数，在使用增加方法增加爱好。</div></li><li><div>在员工DAO接口中定义删除指定员工的爱好的方法</div></li><li><div>public void deleteBehaves(String id) throws Exception;</div></li><li><div>删除爱好的XML映射：</div></li></ul><div>&lt;!-- 删除指定员工的爱好 全部 --&gt;</div><div>&lt;delete id=&quot;deleteBehaves&quot; parameterType=&quot;string&quot;&gt;</div><div>delete from oa_employeebehave where EMPID=#{id}</div><div>&lt;/delete&gt;</div><div>在员工DAO接口中不需要定义修改爱好方法，只需定义增加和删除即可。</div><li><div>多对多关联的删除编程</div></li><div>直接定义指定员工的删除爱好的方法即可：</div><div>public void deleteBehaves(String id) throws Exception;</div><div>删除爱好的XML映射：</div><div>&lt;!-- 删除指定员工的爱好 全部 --&gt;</div><div>&lt;delete id=&quot;deleteBehaves&quot; parameterType=&quot;string&quot;&gt;</div><div>delete from oa_employeebehave where EMPID=#{id}</div><div>&lt;/delete&gt;&nbsp;当删除员工时，删除此员工的所有爱好。</div></ul><li><div>一对一关联关系的操作映射</div></li></ul><div>项目案例中，员工和地址，员工和联系信息Model类都是一对一的关联关系。</div><div>但是实现的方式不同，员工和地址使用共享主键模式（主键兼做外键），员工和联系信息使用独立外键（外键+唯一）模式实现。</div><ul><ul><li><div>增加编程：单独映射每个对象的增加，即员工的增加，地址的增加，联系信息的增加：</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public void insert(EmployeeModel em) throws Exception; //增加员工</div><div>XML映射：</div><div>&lt;insert id=&quot;insert&quot; parameterType=&quot;Employee&quot; &gt;</div><div>insert into oa_employee (EMPID,DEPTNO,EMPPASSWORD, EMPNAME,EMPSEX,AGE,SALARY,BIRTHDAY,JOINDATE)</div><div>values (#{id},#{department.no},#{password},#{name},#{sex},#{age},#{salary},#{birthday},#{joinDate})</div><div>&lt;/insert&gt;</div><div>public void insert(AddressModel am) throws Exception; //增加员工地址的地址</div><div>XML映射：</div><div>&lt;insert id=&quot;insert&quot; parameterType=&quot;Address&quot; &gt;</div><div>insert into oa_employeeaddress (EMPID,CITY,ADDRESS,POSTCODE)</div><div>values (#{employee.id},#{city},#{address},#{postcode})</div><div>&lt;/insert&gt;</div><div>其中员工地址表的主键字段EMPID的值使用#{employee.id} 进行赋值，因为双方公用主键。</div><div>员工联系信息的增加方法：</div><div>public void insert(ContactInfoModel am) throws Exception;</div><div>XML映射：</div><div>&lt;insert id=&quot;insert&quot; parameterType=&quot;ContactInfo&quot; keyProperty=&quot;no&quot; keyColumn=&quot;CINO&quot; useGeneratedKeys=&quot;true&quot; &gt;</div><div>insert into oa_employeecontactinfo&nbsp;&nbsp;(EMPID,MAIL,MOBILE,QQ)</div><div>values (#{employee.id},#{mail},#{mobile},#{qq})</div><div>&lt;/insert&gt;</div><div>由于联系信息表的主键字段是自增量字段，因此使用数据库的自增字段配置模式（keyProperty=&quot;no&quot; keyColumn=&quot;CINO&quot; useGeneratedKeys=&quot;true&quot;），外键字段EMPID的值使用#{employee.id}, 即员工的主属性值进行赋值。</div></div><div>在编写业务方法时，不需要地址和联系信息都编写增加业务方法，都在员工的增加方法中实现即可。</div><div>如下代码，在员工的增加方法中，分别调用员工的DAO接口方法，地址的DAO接口方法，联系信息的DAO接口方法，实现对员工的增加，地址的增加，联系信息的增加。</div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>public void add(EmployeeModel em) throws Exception {</div><div>SqlSession session=ssf.openSession();</div><div>IEmployeeDao ed=session.getMapper(IEmployeeDao.class);</div><div>IAddressDao ad=session.getMapper(IAddressDao.class);</div><div>IContactInfoDao cid=session.getMapper(IContactInfoDao.class);</div><div>ed.insert(em); //增加员工</div><div>ad.insert(em.getAddress()); //增加地址</div><div>cid.insert(em.getContactInfo()); //增加联系信息</div><div>session.commit(); //以上三个insert作为一个事务提交</div><div>session.close();</div><div>}</div><div>员工的增加方法add的参数EmployeeModel对象已经包含了关联的地址对象，联系信息对象。</div></div><ul><ul><li><div>修改编程</div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>与增加类型，修改员工时，也是同时修改其对应的地址信息和联系信息。</div><div>修改员工方法：</div><div>public void update(EmployeeModel em) throws Exception;</div><div>修改映射：</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;Employee&quot;&gt;</div><div>update oa_employee set DEPTNO=#{department.no} , EMPPASSWORD=#{password},EMPNAME=#{name},</div><div>EMPSEX=#{sex},AGE=#{age},SALARY=#{salary},BIRTHDAY=#{birthday},JOINDATE=#{joinDate}</div><div>where EMPID=#{id}</div><div>&lt;/update&gt;</div><div>修改地址方法：</div><div>public void update(AddressModel am) throws Exception;</div><div>修改地址映射：</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;Address&quot;&gt;</div><div>update oa_employeeaddress set CITY=#{city},ADDRESS=#{address}, POSTCODE=#{postcode}&nbsp;&nbsp;where EMPID=#{employee.id}</div><div>&lt;/update&gt;</div><div>注意：使用#{employee.id}作为修改的条件。</div><div>修改联系信息方法：</div><div>public void update(ContactInfoModel am) throws Exception;</div><div>XML映射：</div><div>&lt;update id=&quot;update&quot; parameterType=&quot;ContactInfo&quot;&gt;</div><div>update oa_employeecontactinfo&nbsp;&nbsp;set MAIL=#{mail},MOBILE=#{mobile},QQ=#{qq}&nbsp;&nbsp;where EMPID=#{employee.id}</div><div>&lt;/update&gt;</div><div>也是使用#{employee.id}作为修改的条件，不要使用主键值，因为在未来页面中输入中输入的员工的ID，以及联系信息，如Mail，Mobile等，不是联系信息的主键值序号。</div><div>在员工的修改业务层方法中，也是同时调用员工，地址和联系信息的DAO接口的update方法同时完成这个表的修改。</div><div>public void modify(EmployeeModel em) throws Exception {</div><div>SqlSession session=ssf.openSession();</div><div>IEmployeeDao ed=session.getMapper(IEmployeeDao.class);</div><div>IAddressDao ad=session.getMapper(IAddressDao.class);</div><div>IContactInfoDao cid=session.getMapper(IContactInfoDao.class);</div><div>ed.update(em);</div><div>ad.update(em.getAddress());</div><div>cid.update(em.getContactInfo());</div><div>session.commit();</div><div>session.close();</div><div>}</div><div>在员工修改的方法中，分别取得员工，地址和联系信息的DAO接口对象，依次调用它们的update方法，同步完成这三个信息的修改。</div></div><ul><li><div>删除编程：与增加，修改类似，删除也是同步完成的。</div></li></ul><div>分别完成员工，地址，联系信息的删除映射。</div><div>分别在员工的DAO接口，地址的DAO接口，联系信息的DAO接口定义删除方法，传入各自的Model类对象。</div><div>第2节&nbsp;MyBatis的关联查询映射 - 对一关联查询映射&nbsp;</div><div>上一讲我们学习了使用&lt;resultMap&gt;实现简单的查询结果到Model类的映射。</div><div>如果查询时有关联关系的查询，就需要使用关联关系的结果映射语句。本节介绍对一关联关联结果映射的子标记&lt;association&gt;。</div><div>在项目的OA案例中，如果我们想在查询员工的时候，同时把员工关联的部门也查询出来，因为员工和部门之间的关联关系是多对一，就需要使用&lt;association&gt;实现对部门的结果映射</div><div>同样，员工（EmployeeModel）对地址（AddressModel），员工对联系信息(ContactInfoModel) 是一对一关联关系，当查询员工的时候，也直接取得其对应的地址对象，或联系信息对象，都需要使用&lt;association&gt;进行映射。</div><div>&lt;association&gt;的功能是实现对一关联关系的结果映射，MyBatis不像Hibernate那样区别多对一，或一对一，只要是对一，都使用&lt;association&gt;.</div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;association&gt;的使用语法</span>&nbsp;:</div></li><div style="margin-left: 40px;">&lt;resultMap &nbsp;id=”MapID”&nbsp;type=”Model类名或别名”&nbsp;&gt;</div><div style="margin-left: 40px;">&nbsp;&nbsp;&lt;id property=”属性名”&nbsp;column=”字段名”&nbsp;/&gt;</div><div style="margin-left: 40px;">&lt;result property=”属性名”&nbsp;column=”字段名”&nbsp;/&gt;</div><div style="margin-left: 40px;">&nbsp;&nbsp;&lt;association 属性名=”值”&nbsp;属性名=”值”&nbsp;... /&gt;</div></ul><div style="margin-left: 80px;">&lt;/resultMap&gt;</div><div style="margin-left: 80px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">其中</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;association&gt;的属性名根据不用的情况可以使用不同的属性。</span><br/></div><div style="margin-left: 80px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">为实现对一关联关系的对象的结果查询，</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">MyBatis支持2种不同的方式取得关联的对一对象。</span><br/></div><ul><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">内嵌式</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select方式:</span></div></li></ul><div style="margin-left: 40px;">通过配置单独执行的select语句取得关联的对一对象。</div><div style="margin-left: 40px;">如取得员工对象时，先执行查询员工表的select，再执行查询部门表的select语句。</div><div style="margin-left: 40px;">此时可能需要执行多个select查询语句，会影响到系统的性能，不推荐使用。</div><div style="margin-left: 40px;">当需要查询员工列表的情况下，会执行1+N个select语句，首先执行一个主查询select语句，查询N个员工， 再对每个员工记录，执行一条select部门的查询语句，就需要执行N个select语句，如果记录较多，执行的select会非常多，严重影响系统的性能。不推荐使用。</div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">内嵌式</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">resultMap方式</span></div></li></ul><div style="margin-left: 40px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">通过使用配置的</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">resultMap，再使用关联查询方式，直接取得当前对象和他关联的对一对象。</span></div><div style="margin-left: 40px;">此时通过执行一个有关联的select语句，将员工表和部门表进行关联，可以同时取得员工对象和他关联的部门对象。</div><div style="margin-left: 40px;">此时只需执行一个select语句即可取得所有的对象，推荐使用此方式。</div><div style="margin-left: 40px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">此方式的缺点就是需要自己编写有关联的查询语句，而</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select模式只需写各自的简单的select语句即可。</span><br/></div><div style="margin-left: 40px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">无法哪种方式，</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;association&gt;的如下属性是相同的</span><br/></div><ul><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">property=</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">关联的属性名:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定关联的对一对象的属性名。</span></div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">如员工的Model定义：</font></div><div><font style="font-size: 14pt;">public class EmployeeModel implements Serializable {</font></div><div><font style="font-size: 14pt;">//多对一关联关系</font></div><div><font style="font-size: 14pt;">private DepartmentModel department=null; //关联的部门</font></div><div><font style="font-size: 14pt;">//多对多关联</font></div><div><font style="font-size: 14pt;">private List&lt;BehaveModel&gt; behaves=null; //员工拥有的爱好集合</font></div><div><font style="font-size: 14pt;">//一对一关联， 员工的地址信息（共享主键方式）</font></div><div><font style="font-size: 14pt;">private AddressModel address=null;</font></div><div><font style="font-size: 14pt;">//一对一关联，员工的联系信息（独立外键方式，外键唯一且不为空）</font></div><div><font style="font-size: 14pt;">private ContactInfoModel contactInfo=null;</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">有3个对一的关联属性：department, address, contactInfo.</font></div></div><ul><ul><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">javaType=</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">关联对象的</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">Java类型</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span></div></li></ul><div style="margin-left: 40px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">一般情况下，</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">MyBatis会自动根据Model类的定义，通过反射机制取得属性的类型。</span><br/></div></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">如下示意代码，演示了员工的结果映射：</font></div><div><font style="font-size: 14pt;">&lt;resultMap id=”EmployeeResultMap” type=”Employee” &gt;</font></div><div><font style="font-size: 14pt;">&lt;id property=”id” column=”EMPID” /&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=”name” column=”EMPNAME” /&gt;</font></div><div><font style="font-size: 14pt;">......</font></div><div><font style="font-size: 14pt;">&lt;association property=”department” javaType=”Department” .... /&gt;</font></div><div><font style="font-size: 14pt;">&lt;association property=”address” javaType=”Address” .... /&gt;</font></div><div><font style="font-size: 14pt;">&lt;association property=”contactInfo” javaType=”ContactInfo” .... /&gt;</font></div><div><font style="font-size: 14pt;">.....</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">一般情况下，javaType的值使用Model类的别名，也可以使用类的全名。</font></div></div><div><br/></div><ul><li><div>使用内嵌式select方式取得关联的对一对象的结果映射</div></li></ul><div style="margin-left: 40px;">在&lt;resultMap&gt;中使用&lt;association&gt;中使用select和column属性实现内嵌式select方式取得关联的对一对象。</div><div style="margin-left: 40px;">通过执行单独的Select语句，取得关联的对一的对象。</div><div style="margin-left: 40px;">此时使用属性：</div><ul><ul><li><div>column=”外键字段名”</div></li></ul><div>&nbsp; &nbsp; 指定关联的对一的外键的字段名。如员工表的DEPTNO字段，MyBatis会把此字段的值传递给要实现的select映射的ID。</div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select=</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">执行的</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">Select的映射ID</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span></div></li></ul><div style="margin-left: 40px;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">要执行此查询取得关联的对象的记录，需要定义此</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select的映射&lt;select&gt;，此时select指定&lt;select&gt;映射的ID</span><br/></div><ul><li><div><span style="min-height: 21pt; font-family: ΢���ź�; color: #010101; font-size: 16.0pt; font-decoration: Normal;">fetchType=”lazy|eager” 指定检索的类型， lazy 延迟检索， eager:立即检索。</span></div></li></ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">员工</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">DAO接口，取得指定的员工，并取得其关联的部门对象（多对一）关联。</span></div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">public EmployeeModel selectByIdWithDepartment(String id) throws Exception;</font></div><div><font style="font-size: 14pt;">XML映射：</font></div><div><font style="font-size: 14pt;">首先定义员工的基础结果映射：EmployeeResultMap</font></div><div><font style="font-size: 14pt;">不包含关联关系</font></div><div><font style="font-size: 14pt;">&lt;resultMap&nbsp;&nbsp;id=&quot;EmployeeResultMap&quot; type=&quot;Employee&quot;&gt;</font></div><div><font style="font-size: 14pt;">&lt;id property=&quot;id&quot; column=&quot;EMPID&quot; /&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;password&quot; column=&quot;EMPPASSWORD&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;name&quot; column=&quot;EMPNAME&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;sex&quot; column=&quot;EMPSEX&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;age&quot; column=&quot;AGE&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;salary&quot; column=&quot;SALARY&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;birthday&quot; column=&quot;BIRTHDAY&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;result property=&quot;joinDate&quot; column=&quot;JOINDATE&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">再定义关联部门的resultMap, 并使用resultMap的继承机制，继承基础resultMap</font></div><div><font style="font-size: 14pt;">&lt;!-- 关联部门的员工结果映射&nbsp;&nbsp;使用内嵌式select实现关联对象取得--&gt;</font></div><div><font style="font-size: 14pt;">&lt;resultMap&nbsp;&nbsp;id=&quot;EmployeeWithSelectDepartmentResultMap&quot; type=&quot;Employee&quot; extends=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&lt;association property=&quot;department&quot; column=&quot;DEPTNO&quot; select=&quot;com.city.oa.dao.IDepartmentDao.selectByBo&quot;&gt;&lt;/association&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">该resultMap继承了上面定义的基础resultMap，不再需要定义简单的属性，直接定义关联部门的映射，使用&lt;association&gt;的select方式实现。</font></div><div><font style="font-size: 14pt;">&lt;association</font></div><div><font style="font-size: 14pt;">property=&quot;department&quot;</font></div><div><font style="font-size: 14pt;">column=&quot;DEPTNO&quot; select=&quot;com.city.oa.dao.IDepartmentDao.selectByBo&quot;&gt;&lt;/association&gt;</font></div><div><font style="font-size: 14pt;">其中：property=&quot;department&quot; 指定员工Model类的部门属性</font></div><div><font style="font-size: 14pt;">column=&quot;DEPTNO&quot; 指定员工表的外键字段名</font></div><div><font style="font-size: 14pt;">select=&quot;com.city.oa.dao.IDepartmentDao.selectByBo&quot; 指定使用部门DAO接口的selectByNo的方法和映射，取得关联的部门对象。</font></div><div><font style="font-size: 14pt;">定义接口方法的selectByIdWithDepartment(String id)的SQL映射：</font></div><div><font style="font-size: 14pt;">&lt;!-- 取得指定的员工&nbsp;&nbsp;只取关联的部门对象--&gt;</font></div><div><font style="font-size: 14pt;">&lt;select</font></div><div><font style="font-size: 14pt;">id=&quot;selectByIdWithDepartment&quot;</font></div><div><font style="font-size: 14pt;">parameterType=&quot;string&quot;</font></div><div><font style="font-size: 14pt;">resultMap=&quot;EmployeeWithMapDepartmentResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">select * from oa_employee&nbsp;&nbsp;where a.EMPID=#{id}</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">因为关联&lt;assoication&gt;使用内嵌式select方式，主方法的SQL映射就非常简单，直接使用select * from oa_employee&nbsp;&nbsp;where a.EMPID=#{id}</font></div><div><font style="font-size: 14pt;">MyBatis在查询每个员工对象时，会根据&lt;association&gt;的select属性，执行指定的DAO接口方法以及对应映射的SELECT语句，并把column=”DEPTNO”的值，传递给该方法，取得关联的部门对象，并把部门对象set到员工对象中，返回包含关联部门对象的员工对象。</font></div><div><font style="font-size: 14pt;">在测试类中：</font></div><div><font style="font-size: 14pt;">ApplicationContext ac=</font></div><div><font style="font-size: 14pt;">new AnnotationConfigApplicationContext(SpringConfigForMyBatis.class);</font></div><div><font style="font-size: 14pt;">IEmployeeService es=ac.getBean(&quot;employeeServiceWithMyBatis&quot;,IEmployeeService.class);</font></div><div><font style="font-size: 14pt;">EmployeeModel em=es.getByIdWithDepartment(&quot;1005&quot;);</font></div><div><font style="font-size: 14pt;">System.out.println(em.getName());</font></div><div><font style="font-size: 14pt;">System.out.println(em.getDepartment().getName());</font></div><div><font style="font-size: 14pt;">通过Spring IoC容器取得员工业务对象，调用其getByIdWithDepartment方法，取得指定员工对象，可同时取得关联的部门对象。</font></div><div><font style="font-size: 14pt;">System.out.println(em.getDepartment().getName());</font></div><div><font style="font-size: 14pt;">显示员工的关联部门对象的名称。</font></div><div><font style="font-size: 14pt;">类似的取得关联的地址，联系信息（对一关联），也可以使用类似的resultMap完成：</font></div><div><font style="font-size: 14pt;">&lt;resultMap&nbsp;&nbsp;id=&quot;EmployeeWithSelectAddressAndContactInfoResultMap&quot; type=&quot;Employee&quot; extends=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&lt;association property=&quot;address&quot; column=&quot;EMPID&quot; select=&quot;com.city.oa.dao.IAddressDao.selectById&quot;&gt;&lt;/association&gt;</font></div><div><font style="font-size: 14pt;">&lt;association property=&quot;contactInfo&quot; column=&quot;EMPID&quot; select=&quot;com.city.oa.dao.IContactInfoDao.selectById&quot;&gt;&lt;/association&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">映射取得员工和关联的地址，联系方式的DAO接口方法</font></div><div><font style="font-size: 14pt;">&lt;!-- 取得指定的员工&nbsp;&nbsp;只取关联的部门对象--&gt;</font></div><div><font style="font-size: 14pt;">&lt;select</font></div><div><font style="font-size: 14pt;">id=&quot;selectByIdWithAddressAndContactInfo&quot;</font></div><div><font style="font-size: 14pt;">parameterType=&quot;string&quot;</font></div><div><font style="font-size: 14pt;">resultMap=&quot;EmployeeWithSelectAddressAndContactInfoResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">select * from oa_employee&nbsp;&nbsp;where a.EMPID=#{id}</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">映射时只需将resultMap的值改为指定的EmployeeWithSelectAddressAndContactInfoResultMap，即可完成查询员工和他关联的地址和联系信息对象。</font></div></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">使用内嵌式</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">resultMap方式取得关联的对一对象的结果映射</span></div></li><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">MyBatis也支持内嵌式ResultMap（Nested ResultMap）方式实现对一关联结果查询.</span></div></li><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;association property=</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">对一关联属性</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&nbsp;resultMap=</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">关联对象的结果映射</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">ID</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">”</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&nbsp;/&gt;</span></div></li></ul></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">案例如下：</font></div><div><font style="font-size: 14pt;">&lt;!-- 关联部门的员工结果映射&nbsp;&nbsp;使用内嵌式ResultMapq方式实现关联对象的取得--&gt;</font></div><div><font style="font-size: 14pt;">&lt;resultMap&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">id=&quot;EmployeeWithMapDepartmentResultMap&quot;</font></div><div><font style="font-size: 14pt;">type=&quot;Employee&quot; extends=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&lt;association</font></div><div><font style="font-size: 14pt;">property=&quot;department&quot; resultMap=&quot;com.city.oa.dao.IDepartmentDao.DepartmentResultMap&quot; /&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">案例中定义的员工结果ResultMap映射中，关联的属性department（部门）的结果使用部门DAO接口中定义的resultMap：</font></div><div><font style="font-size: 14pt;">com.city.oa.dao.IDepartmentDao.DepartmentResultMap</font></div><div><font style="font-size: 14pt;">可见在一个DAO接口的映射XML文件中可以引用另一个DAO接口映射XML文件中定义的ResultMap。</font></div><div><font style="font-size: 14pt;">使用内嵌式resultMap定义关联的属性结果映射，在查询关联的对象时，必须使用关联查询，取得查询对象和其关联对象。因为没有指定任何select语句来查询关联的对象。不像内嵌式select方式。</font></div><div><font style="font-size: 14pt;">如下案例在查询员工对象时，引用了包含了内嵌式resultMap的resultMap定义：</font></div><div><font style="font-size: 14pt;">&lt;!-- 取得指定的员工&nbsp;&nbsp;只取关联的部门对象--&gt;</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectByIdWithDepartment&quot;</font></div><div><font style="font-size: 14pt;">parameterType=&quot;string&quot;</font></div><div><font style="font-size: 14pt;">resultMap=&quot;EmployeeWithMapDepartmentResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">select a.*,b.*</font></div><div><font style="font-size: 14pt;">from oa_employee a inner join oa_department b on a.deptno=b.deptno</font></div><div><font style="font-size: 14pt;">where a.EMPID=#{id}</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">此select映射，使用resultMap指定”EmployeeWithMapDepartmentResultMap”作为结果映射类型。</font></div><div><font style="font-size: 14pt;">在select SQL语句中使用关联查询，取得员工和他关联的部门。</font></div><div><font style="font-size: 14pt;">MyBatis根据resultMap定义，和查询的关联记录，自动创建员工对象，部门对象，并把部门对象set到员工对象的属性department中。返回的员工对象，已经包含了关联的部门对象。</font></div><div><font style="font-size: 14pt;">使用内嵌式resultMap，只需执行一个select语句，就可以取得关联的对象，不像内嵌式select需要执行1+N个select查询语句，因此内嵌式resultMap的查询性能要好于内嵌式select.</font></div><div><font style="font-size: 14pt;">实际项目应优先选择内嵌式resultMap方式，尽量不要内嵌式select方式。</font></div></div><div><span style="font-weight: bold; mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">第</span><span style="font-weight: bold; mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">3节 MyBatis的关联查询映射 - 对多关联查询映射</span></div><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">MyBatis提供了&lt;resultMap&gt;的子元素&lt;collection&gt;用于映射对多的关联关系，包括一对多和多对多关联。</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">&lt;resultMap id=”mapId” type=”Model类或别名”&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;id&nbsp;&nbsp;.... /&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;result .... /&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;collection property=”关联的对多属性” javaType=”容器的类型” column=”关联的主键字段” ofType=”容器中包含的Model类的类型” select=”Select映射ID”</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;resultMap=”Model类的结果映射MapID” /&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">其中：select和resultMap不能同时使用。</font></div><div><font style="font-size: 14pt;">如果使用select属性，实现方式是内嵌式Select方式取得关联的集合属性。</font></div><div><font style="font-size: 14pt;">如果使用resultMap属性，实现方式是内嵌式resultMap，用于取得关联的集合属性。</font></div></div><div><br/></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;collection&gt;标记的主要属性</span></div></li><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">property:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定关联的集合属性。</span></div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">以部门Model类定义为例：</font></div><div><font style="font-size: 14pt;">public class DepartmentModel {</font></div><div><font style="font-size: 14pt;">private int no=0;</font></div><div><font style="font-size: 14pt;">private String code=null;</font></div><div><font style="font-size: 14pt;">private String name=null;</font></div><div><font style="font-size: 14pt;">//一对多</font></div><div><font style="font-size: 14pt;">private List&lt;EmployeeModel&gt; employees=null; //部门关联的员工对象（多个）</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">注意：在Mybatis中对多关联推荐使用List类型，而在Hibernate中则推荐使用Set类型。</font></div><div><font style="font-size: 14pt;">&lt;resultMap id=”departmentWithEmployeeResultMap” type=”Department” &gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;....</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;collection property=”employees”&nbsp;&nbsp;&nbsp;... /&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div></div><ul><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">javaType:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定集合的类型，一般情况下，不需要指定。</span></div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">&lt;resultMap id=”departmentWithEmployeeResultMap” type=”Department” &gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;....</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;collection property=”employees”&nbsp;&nbsp;javaType=”list” ... /&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div></div><ul><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">.ofType:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定集合属性包含的对象的类型，可以使用全名或别名，推荐使用别名。</span></div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">&lt;resultMap id=”departmentWithEmployeeResultMap” type=”Department” &gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;....</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;collection property=”employees”&nbsp;&nbsp;javaType=”list” ofType=”Employee” ... /&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">其他属性如select, column，resultMap用于指定取得关联集合属性的方法。</font></div><div><font style="font-size: 14pt;">MyBatis同样支持内嵌式select和内嵌式resultMap 二种方式。</font></div></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">内嵌</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select方式的对多关联查询结果映射:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">在</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;collection&gt;标记中使用select和column属性时，采用内嵌式select方式取得关联的集合属性。</span></div></li><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定取得关联集合的</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">Select映射ID，必须是已经定义好的select映射，可以取得关联的集合。</span></div></li><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select，是使用内嵌式select方式，需要与column属性结合。</span></div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">&lt;collection property=”employees”&nbsp;&nbsp;javaType=”list” ofType=”Employee”</font></div><div><font style="font-size: 14pt;">column=”DEPTNO” select=”com.city.oa.dao.IEmployeeDao.selectListByDepartment” ... /&gt;</font></div><div><font style="font-size: 14pt;">column=”DEPTNO” 指定部门的主键字段名，此值将作为参数传入到员工DAO接口的方法selectListByDepartment。</font></div><div><font style="font-size: 14pt;">select指定取得此集合的DAO接口方法，即员工DAO接口的selectListByDepartment方法。</font></div><div><font style="font-size: 14pt;">在员工的DAO接口中定义了此方法：</font></div><div><font style="font-size: 14pt;">//取得指定部门的员工列表，参数：部门编号</font></div><div><font style="font-size: 14pt;">public List&lt;EmployeeModel&gt; selectListByDepartment(int departmentNo) throws Exception;</font></div><div><font style="font-size: 14pt;">并在其XML映射文件中对此方法进行了定义：</font></div><div><font style="font-size: 14pt;">&lt;!-- 取得指定部门的员工列表，不去关联的属性 --&gt;</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListByDepartment&quot; parameterType=&quot;_int&quot; resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">select * from oa_employee where DEPTNO=#{departmentNo}</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">MyBatis执行关联映射时，会把部门编号传递给&lt;collection&gt;属性select指定的方法，将返回的结果set到部门对象的集合属性employees.</font></div></div><ul><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">column:</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">指定字段名，此字段的值将传递给</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select指定的DAO方法。</span></div></li></ul><div style="margin-left: 40px;">对多关联，此字段一把是主键字段。</div><div style="margin-left: 40px;">如取得部门的关联的员工集合， 需要设定部门的主键字段DEPTNO为column的值。</div><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">内嵌</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">resultMap方式的对多关联查询结果映射</span></div></li></ul><div style="margin-left: 40px;">当使用&lt;collection&gt;标记的resultMap属性时，则告诉MyBatis使用内嵌式resultMap方式取得关联的集合属性。</div><div>&nbsp;<br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">语法：</font></div><div><font style="font-size: 14pt;">&lt;collection</font></div><div><font style="font-size: 14pt;">property=”emloyees”</font></div><div><font style="font-size: 14pt;">javaType=”list”</font></div><div><font style="font-size: 14pt;">ofType=”Employee”</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;resultMap=”com.city.oa.dao.IEmployeeDao.EmployeeResultMap” /&gt;</font></div><div><font style="font-size: 14pt;">其中：resultMap指定的com.city.oa.dao.IEmployeeDao.EmployeeResultMap是在员工DAO接口映射XML文件中定义的EmployeeResultMap， 该resultMap用于定义员工的结果集映射。</font></div><div><font style="font-size: 14pt;">在部门的DAO接口中，增加取得指定部门，并同时取出关联的员工集合的方法：</font></div><div><font style="font-size: 14pt;">//取得指定的部门，并同时取得其关联的员工集合属性</font></div><div><font style="font-size: 14pt;">public DepartmentModel selectByNoWithEmployess(int no) throws Exception;</font></div><div><font style="font-size: 14pt;">在映射该方法时，需要先定义部门的resultMap（通常使用继承机制，先定义没有关联的属性映射，再定义有关联属性的resultMap）</font></div><div><font style="font-size: 14pt;">&lt;!-- 基本的部门结果集映射 没有关联属性 --&gt;</font></div><div><font style="font-size: 14pt;">&lt;resultMap id=&quot;DepartmentResultMap&quot; type=&quot;Department&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;id property=&quot;no&quot; column=&quot;DEPTNO&quot; /&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;result property=&quot;code&quot; column=&quot;DEPTCODE&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;result property=&quot;name&quot; column=&quot;DEPTNAME&quot;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">&lt;!-- 关联员工集合属性的结果集映射&nbsp;&nbsp;使用内嵌是select方式取得关联属性 --&gt;</font></div><div><font style="font-size: 14pt;">&lt;resultMap id=&quot;DepartmentWithEmployeesUsingNestedSelectResultMap&quot; type=&quot;Department&quot; extends=&quot;DepartmentResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;collection property=&quot;employees&quot; ofType=&quot;Employee&quot; column=&quot;DEPTNO&quot;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select=&quot;com.city.oa.dao.IEmployeeDao.selectListByDepartment&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">&lt;!-- 关联员工集合属性的结果集映射&nbsp;&nbsp;使用内嵌是resultMap方式取得关联属性 --&gt;</font></div><div><font style="font-size: 14pt;">&lt;resultMap id=&quot;DepartmentWithEmployeesUsingNestedResultMap&quot; type=&quot;Department&quot; extends=&quot;DepartmentResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&lt;collection property=&quot;employees&quot; ofType=&quot;Employee&quot; resultMap=&quot;com.city.oa.dao.IEmployeeDao.EmployeeResultMap&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&gt;</font></div><div><font style="font-size: 14pt;">&lt;/resultMap&gt;</font></div><div><font style="font-size: 14pt;">以上案例中分别使用内嵌式select和内嵌式resultMap定义了2个 resultMap.</font></div><div><font style="font-size: 14pt;">当定义&lt;select&gt;映射时，通过属性resultMap可以指定使用哪种resultMap，以取得关联的员工属性。</font></div><div><font style="font-size: 14pt;">案例：使用内嵌式resultMap取得部门的关联属性：</font></div><div><font style="font-size: 14pt;">&lt;!-- 取得指定的部门，并同时取得其关联的员工集合属性 --&gt;</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectByNoWithEmployess&quot; parameterType=&quot;_int&quot; resultMap=&quot;DepartmentWithEmployeesUsingNestedResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">select a.*,b.*</font></div><div><font style="font-size: 14pt;">from oa_department a left outer join oa_employee b on a.DEPTNO=b.DEPTNO</font></div><div><font style="font-size: 14pt;">where a.DEPTNO=#{no}</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">代码中映射部门DAO接口的selectByNoWithEmployess方法</font></div><div><font style="font-size: 14pt;">//取得指定的部门，并同时取得其关联的员工集合属性</font></div><div><font style="font-size: 14pt;">public DepartmentModel selectByNoWithEmployess(int no) throws Exception;</font></div><div><font style="font-size: 14pt;">根据部门编号取得部门对象，并取得关联的员工集合。</font></div><div><font style="font-size: 14pt;">由于resultMap：DepartmentWithEmployeesUsingNestedResultMap 使用的是内嵌式resultMap方式取得关联的collection集合属性，在映射select时，需要使用关联查询：</font></div><div><font style="font-size: 14pt;">select a.*,b.*</font></div><div><font style="font-size: 14pt;">from oa_department a left outer join oa_employee b on a.DEPTNO=b.DEPTNO</font></div><div><font style="font-size: 14pt;">where a.DEPTNO=#{no}</font></div></div><div><span style="font-weight: bold; mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">第</span><span style="font-weight: bold; mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">4节 动态SQL映射</span></div><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">在实际项目开发中，经常需要根据不同的筛选条件，执行不同条件的</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">select语句，或update和delete语句。</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">如下员工的DAO接口方法：</font></div><div><font style="font-size: 14pt;">//根据综合检索条件取得员工列表，演示动态SQL的映射</font></div><div><font style="font-size: 14pt;">//按姓名模糊检索，按性别检索，</font></div><div><font style="font-size: 14pt;">//按年龄区间检索，按加入公司日期区间检索</font></div><div><font style="font-size: 14pt;">public List&lt;EmployeeModel&gt; selectListBySearchCondition(String name, String sex, int minAge, int maxAge, Date startJoinDate, Date endJoinDate) throws Exception;</font></div><div><font style="font-size: 14pt;">就是根据不用的参数，对员工进行筛选。</font></div><div><font style="font-size: 14pt;">如果name是null或””, 就不根据员工姓名进行筛选，否则就使用模糊检索对员工姓名进行筛选。</font></div><div><font style="font-size: 14pt;">如果minAge=0， 就不筛选员工的最低年龄，否则增加最低年龄限制。</font></div><div><font style="font-size: 14pt;">如果maxAge=0， 就不筛选员工的最高年龄，否则增加最高年龄限制。</font></div><div><font style="font-size: 14pt;">类似的Java编程如下：</font></div><div><font style="font-size: 14pt;">String sql=”select * from oa_employee where 1=1 ”;</font></div><div><font style="font-size: 14pt;">if(name!=null &amp;&amp; name.trim().length()&gt;0){</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;sql=sql+” and EMPNAME like ‘%”+name+”%’”;</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">if(minAge!=0){</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;sql=sql+” and AGE&gt;=”+minAge +” ”;</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">if(maxAge!=0){</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;sql=sql+” and AGE&lt;=”+maxAge”</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">...... //其他条件</font></div><div><font style="font-size: 14pt;">在上面的案例中使用了SQL中直接加参数的形式，此时只能使用Statement执行SQL，此方式执行SQL，有安全漏洞，推荐使用PreparedStatement执行。</font></div><div><font style="font-size: 14pt;">此时就需要写出如下形式：</font></div><div><font style="font-size: 14pt;">String sql=”select * from oa_employee where 1=1 ”;</font></div><div><font style="font-size: 14pt;">if(name!=null &amp;&amp; name.trim().length()&gt;0){</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;sql=sql+” and EMPNAME like ?”;</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">if(minAge!=0){</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;sql=sql+” and AGE&gt;=? ”;</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">if(maxAge!=0){</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;sql=sql+” and AGE&lt;=?”</font></div><div><font style="font-size: 14pt;">}</font></div><div><font style="font-size: 14pt;">...... //其他条件</font></div><div><font style="font-size: 14pt;">在创建了PreparedStatement对象后，还需要判断参数的值，再设定?的值，非常的麻烦，况且?的位置的不固定的，是变化的。如果使用位置参数是无法实现的，但JDBC的PreparedStatement又不支持命名参数。</font></div><div><font style="font-size: 14pt;">即使使用Hibernate的HQL，也需要以上复杂的编写。</font></div><div><font style="font-size: 14pt;">MyBatis对这种动态SQL的映射提供了很好的支持。在编写XML方式的SQL映射时，可以使用MyBatis提供的动态SQL映射标记实现SQL语句的动态生成。</font></div><div><font style="font-size: 14pt;">MyBatis提供的动态SQL语句XML映射方式，借鉴了JSP的JSTL语法，提供了如下标记使用动态SQL的映射：</font></div><div><font style="font-size: 14pt;">• if</font></div><div><font style="font-size: 14pt;">• choose (when, otherwise)</font></div><div><font style="font-size: 14pt;">• trim (where, set)</font></div><div><font style="font-size: 14pt;">• foreach</font></div></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;if&gt;标记</span></div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">语法：</font></div><div><font style="font-size: 14pt;">&lt;if test=”OGNL表达式”&gt;</font></div><div><font style="font-size: 14pt;">动态SQL语句</font></div><div><font style="font-size: 14pt;">&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">当表达式为true时，动态SQL语句 增加到SQL映射中，否则不起作用。</font></div><div><font style="font-size: 14pt;">案例：</font></div><div><font style="font-size: 14pt;">DAO接口方法：</font></div><div><font style="font-size: 14pt;">public List&lt;EmployeeModel&gt; selectListBySearchCondition(String name, String sex, int minAge, int maxAge, Date startJoinDate, Date endJoinDate) throws Exception;</font></div><div><font style="font-size: 14pt;">XML映射代码：</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListBySearchCondition&quot; resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">SELECT * FROM oa_employee WHERE 1=1</font></div><div><font style="font-size: 14pt;">&lt;if test=&quot;name != null &amp;&amp; name!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;AND EMPNAME like #{name}</font></div><div><font style="font-size: 14pt;">&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&lt;if test=&quot;minAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and AGE &gt;=#{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&lt;if test=&quot;maxAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and AGE &lt;= #{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&lt;if test=&quot;startJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and JOINDATE &gt;=#{startJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&lt;if test=&quot;endJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and JOINDATE &lt;=&nbsp;&nbsp;#{endJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">注意：在XML映射文件中，不能使用 AGE&lt;#{maxAge}, 因为XML中能直接使用&lt;, &gt;符号，必须使用转义字符。</font></div><div><font style="font-size: 14pt;">XML中可以使用的转义字符如下：</font></div><div><br/></div><div><br/></div><div><br/></div></div><div><br/></div><div><en-media hash="d3a21b10179eef346f0b951494999de6" type="image/png"/></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">choose</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&nbsp;(</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">when</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&gt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">,</span> <span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">otherwise</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&gt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">)</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">标记</span></div></li></ul><div style="margin-left: 80px;">&lt;if&gt;是允许多个条件同时成立，如果只允许诸多条件中的一个成立时，由于MyBaits没有提供Java类似的多分支结构的if标记。</div><div style="margin-left: 80px;">Java语言的多分支结构语法：</div><div style="margin-top: 1em; margin-bottom: 1em;"><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">为此</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">MyBatis提供了&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">choose</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&gt;, &lt;when&gt; ，&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">otherwise</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&gt;来实现只能一个条件满足的分支结构，其语法如下：</span></div><div style="margin-left: 40px;"><br/></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">&lt;choose&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;when test=&quot;条件1&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部分SQL语句</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;when test=&quot;条件2&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部分SQL语句</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;...</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;otherwise&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部分SQL语句</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/otherwise&gt;</font></div><div><font style="font-size: 14pt;">&lt;/choose&gt;</font></div><div><font style="font-size: 14pt;">将上面的SQL映射改为如下：</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListBySearchCondition&quot; resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">SELECT * FROM oa_employee WHERE 1=1</font></div><div><font style="font-size: 14pt;">&lt;choose&gt;</font></div><div><font style="font-size: 14pt;">&lt;when test=&quot;name != null &amp;&amp; name!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;AND EMPNAME like #{name}</font></div><div><font style="font-size: 14pt;">&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&lt;when test=&quot;minAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and AGE &gt;=#{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&lt;when test=&quot;maxAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and AGE &lt;= #{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&lt;when test=&quot;startJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and JOINDATE &gt;=#{startJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&lt;when test=&quot;endJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;and JOINDATE &lt;=&nbsp;&nbsp;#{endJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&lt;/when&gt;</font></div><div><font style="font-size: 14pt;">&lt;otherwise&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AND AGE=20</font></div><div><font style="font-size: 14pt;">&lt;/otherwise&gt;</font></div><div><font style="font-size: 14pt;">&lt;/choose&gt;</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">当使用&lt;choose&gt;, &lt;when&gt;和&lt;otherwise&gt;后，只能有一个条件满足， 因此生成的动态SQL只能增加一个条件。</font></div><div><font style="font-size: 14pt;">因此实际项目中使用此模式的动态SQL较少，使用&lt;if&gt;的比较多。</font></div><div><br/></div></div><div style="margin-left: 40px;"><br/></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;foreach&gt;标记</span></div></li></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">&lt;foreach&gt;可以对DAO接口方法中的集合参数进行遍历，与JSTL的&lt;c:forEach&gt;类似。通过遍历方法的集合参数，可以生成动态SQL语句。</font></div><div><font style="font-size: 14pt;">其语法如下：</font></div><div><font style="font-size: 14pt;">&lt;foreach</font></div><div><font style="font-size: 14pt;">item=&quot;遍历的对象名&quot; index=&quot;序号变量名&quot;</font></div><div><font style="font-size: 14pt;">collection=&quot;参数中的容器对象参数名&quot;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;open=&quot;开始符号&quot; separator=&quot;间隔符号&quot; close=&quot;结尾符号&quot;</font></div><div><font style="font-size: 14pt;">&gt;</font></div><div><font style="font-size: 14pt;">循环生成的SQL语句</font></div><div><font style="font-size: 14pt;">&lt;/foreach&gt;</font></div><div><font style="font-size: 14pt;">案例：</font></div><div><font style="font-size: 14pt;">加入在员工的DAO接口：IDepartmentDao中定义了取得指定的多个爱好的员工列表方法：</font></div><div><font style="font-size: 14pt;">//取得有指定多个爱好的员工列表，爱好通过数组参数确定</font></div><div><font style="font-size: 14pt;">public List&lt;EmployeeModel&gt; selectListByBehaves(@Param(&quot;behaves&quot;) int[] behaves) throws Exception;</font></div><div><font style="font-size: 14pt;">其SQL映射代码如下：</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListByBehaves&quot; resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">select * from oa_employee</font></div><div><font style="font-size: 14pt;">where EMPID in (select EMPID</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from oa_employeebehave</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where BNO in</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;foreach collection=&quot;behaves&quot; item=&quot;behaveNo&quot; open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#{behaveNo}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/foreach&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">配置中循环体：#{behaveNo}， 分隔符是”,”，开始符号是 (，结束符号是 ).</font></div><div><font style="font-size: 14pt;">因此&lt;c:foreach&gt;生成的表达式如下形式：</font></div><div><font style="font-size: 14pt;">(1,2,3)</font></div><div><font style="font-size: 14pt;">最终执行时生成的SQL语句如下：</font></div><div><font style="font-size: 14pt;">select * from oa_employee where EMPID in (select EMPID from oa_employeebehave where BNO in ( ? , ? , ? ) )</font></div><div><font style="font-size: 14pt;">由于MySQL支持多数据增加的insert语句，其语法形式是：</font></div><div><font style="font-size: 14pt;">Insert into 表名 values (项目,项目), (项目,项目), (项目,项目),..., (项目,项目)</font></div><div><font style="font-size: 14pt;">可以使用Mybatis的&lt;foreach&gt;进行数据的循环增加：</font></div><div><font style="font-size: 14pt;">员工DAO接口中定义了给员工增加多个爱好的方法：</font></div><div><font style="font-size: 14pt;">public void insertBehaves(@Param(&quot;id&quot;) String id,@Param(&quot;behaveNos&quot;) int[] behaveNos) throws Exception;</font></div><div><font style="font-size: 14pt;">使用&lt;foreach&gt;实现的SQL映射代码如下：</font></div><div><font style="font-size: 14pt;">&lt;!-- 为员工增加爱好， 多个 --&gt;</font></div><div><font style="font-size: 14pt;">&lt;insert id=&quot;insertBehaves&quot;&gt;</font></div><div><font style="font-size: 14pt;">insert into oa_employeebehave values</font></div><div><font style="font-size: 14pt;">&lt;foreach collection=&quot;behaveNos&quot; item=&quot;behaveNo&quot; separator=&quot;,&quot;&gt;</font></div><div><font style="font-size: 14pt;">(#{id},#{behaveNo})</font></div><div><font style="font-size: 14pt;">&lt;/foreach&gt;</font></div><div><font style="font-size: 14pt;">&lt;/insert&gt;</font></div></div><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">trim (</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">where</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&gt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">,</span> <span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">set</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&gt;</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">)</span><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">标记</span></div></li><ul><li><div><span style="mso-spacerun: &apos;yes&apos;; font-family: 微软雅黑; font-size: 16.0000pt; mso-font-kerning: 1.0000pt;-en-paragraph:true;">&lt;where&gt;标记</span></div></li></ul></ul><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><font style="font-size: 14pt;">在上面使用动态&lt;if&gt;或&lt;choose&gt;机制形成动态筛选条件时，如下映射SQL：</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListBySearchCondition&quot;&nbsp;&nbsp;resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select *</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from oa_employee where</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;name!=null and name!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EMPNAME like #{name}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;sex!=null and sex!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and EMPSEX=#{sex}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;minAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and AGE &amp;gt;=#{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;maxAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and AGE &amp;lt;= #{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;startJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and JOINDATE &amp;gt;=#{startJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;endJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and JOINDATE &amp;lt;=&nbsp;&nbsp;#{endJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/where&gt;</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">当第1个条件不满足时，生成的SQL语句如下形式：</font></div><div><font style="font-size: 14pt;">Select * from oa_employee where and AGE&gt;=?</font></div><div><font style="font-size: 14pt;">此SQL语句语法是错误的。</font></div><div><font style="font-size: 14pt;">一般情况下，为防止上述错误出现，我们需要使用如下形式的SQL语句：</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListBySearchCondition&quot;&nbsp;&nbsp;resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select *</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from oa_employee where 1=1</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;name!=null and name!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and EMPNAME like #{name}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;sex!=null and sex!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and EMPSEX=#{sex}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;minAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and AGE &amp;gt;=#{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;maxAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and AGE &amp;lt;= #{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;startJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and JOINDATE &amp;gt;=#{startJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;endJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and JOINDATE &amp;lt;=&nbsp;&nbsp;#{endJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/where&gt;</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">即select语句的固定部分使用</font></div><div><font style="font-size: 14pt;">Select * from oa_employee where 1=1</font></div><div><font style="font-size: 14pt;">后面在使用动态SQL语句增加条件。</font></div><div><font style="font-size: 14pt;">MyBatis为解决以上问题，提供了&lt;where&gt;标记，实现动态的where条件映射。</font></div><div><font style="font-size: 14pt;">使用&lt;where&gt;标记改造后的SQL映射如下：</font></div><div><font style="font-size: 14pt;">&lt;select id=&quot;selectListBySearchCondition&quot;&nbsp;&nbsp;resultMap=&quot;EmployeeResultMap&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select *</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from oa_employee</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;where&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;name!=null and name!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and EMPNAME like #{name}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;sex!=null and sex!=&apos;&apos;&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and EMPSEX=#{sex}</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;minAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and AGE &amp;gt;=#{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;maxAge!=0&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and AGE &amp;lt;= #{minAge}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;startJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and JOINDATE &amp;gt;=#{startJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if test=&quot;endJoinDate!=null&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and JOINDATE &amp;lt;=&nbsp;&nbsp;#{endJoinDate}&nbsp;&nbsp;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/where&gt;</font></div><div><font style="font-size: 14pt;">&lt;/select&gt;</font></div><div><font style="font-size: 14pt;">其中&lt;where&gt;标记的功能是：</font></div><div><font style="font-size: 14pt;">1. 如果没有任何条件满足，则没有任何筛选条件，生成的原始SQL将是：</font></div><div><font style="font-size: 14pt;"><br/></font></div><div><font style="font-size: 14pt;">select * from oa_employee where</font></div><div><font style="font-size: 14pt;">通过&lt;where&gt;标记，将单独的where删除，最终成为：</font></div><div><font style="font-size: 14pt;">select * from oa_employee</font></div><div><font style="font-size: 14pt;">将是合法的SQL语句。</font></div><div><font style="font-size: 14pt;">2. 如果有任何的条件成立，生成的原始SQL将是：</font></div><div><font style="font-size: 14pt;"><br/></font></div><div><font style="font-size: 14pt;">select * from oa_employee where and EMPNAME&nbsp;&nbsp;like ? and AGE&gt;=?</font></div><div><font style="font-size: 14pt;">这是非法的SQL语句。</font></div><div><font style="font-size: 14pt;">此时&lt;where&gt;标记会把紧挨着的and删除，最终的SQL是：</font></div><div><font style="font-size: 14pt;">select * from oa_employee where&nbsp;&nbsp;EMPNAME like ?&nbsp;&nbsp;and AGE&gt;=?</font></div><div><font style="font-size: 14pt;">生成合法的SQL语句。</font></div><div><font style="font-size: 14pt;">MyBaits的&lt;where&gt;自动将where后面的and或or删除。</font></div><div><font style="font-size: 14pt;">&lt;where&gt;也可以写成如下的替代：</font></div><div><font style="font-size: 14pt;">&lt;trim prefix=&quot;WHERE&quot; prefixOverrides=&quot;AND |OR &quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;...</font></div><div><font style="font-size: 14pt;">&lt;/trim&gt;</font></div><div><font style="font-size: 14pt;">即使用&lt;trim&gt;标记。实际编程中使用&lt;where&gt;较多，使用&lt;trim&gt;较少。</font></div><div><font style="font-size: 14pt;">2.&lt;set&gt;标记</font></div><div><font style="font-size: 14pt;">与&lt;where&gt;生成动态筛选条件类似，&lt;set&gt;用于生成动态的update中的set语句。</font></div><div><font style="font-size: 14pt;">使用&lt;set&gt;标记的动态修改映射如下：</font></div><div><font style="font-size: 14pt;">&lt;update id=&quot;update&quot;&nbsp;&nbsp;parameterType=&quot;Department&quot;&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;update oa_department</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;set&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if&nbsp;&nbsp;test=&quot;code!=null&quot;&gt;DEPTCODE=#{code},&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;if&nbsp;&nbsp;test=&quot;name!=null&quot;&gt;DEPTNAME=#{name},&lt;/if&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/set&gt;</font></div><div><font style="font-size: 14pt;">&nbsp;&nbsp;where DEPTNO=#{no}</font></div><div><font style="font-size: 14pt;">&lt;/update&gt;</font></div><div><font style="font-size: 14pt;">MyBatis的&lt;set&gt;标记可以自动将动态SQL后面的”,”自动删除。</font></div><div><font style="font-size: 14pt;">注意：</font></div><div><font style="font-size: 14pt;">动态update语句中 在修改的时候，必须至少修改一项，即至少有一项不能为空。</font></div><div><font style="font-size: 14pt;">否则生成的SQL语句：</font></div><div><font style="font-size: 14pt;">update oa_department where DEPTNO=?</font></div><div><font style="font-size: 14pt;">会是非法的SQL语句。</font></div></div><div><br/></div><div><br/></div><div><br/></div></div></en-note>]]></content><created>20200602T140320Z</created><updated>20200607T042830Z</updated><tag>Hibernate-吕</tag><tag>Mybatis</tag><note-attributes><author>郎博年</author><source>desktop.win</source><source-application>yinxiang.win32</source-application></note-attributes><resource><data encoding="base64">
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
uY/OvXZ64wT5yNSAWO9El7pfm1wOzQxieGpQkuHofXMBwIl0hDqz+LlnPq+u85wa+qqlwU2w8tyD
pV2tH7wLXDEw0adua0n+oy2dp3oO/Hk50nDX0tLS0vqvehruTKQbHhkRj7ykshxpOVmIT0lCTX2d
hOc5LbOntwetykO3zG1vlWz59i4jqturkNIQB99id7jm2sugFf9SD/HQA4pvwrv4OqIV1Dl/nd5w
20iLJKKx7rygIxslnfmStFbTZylbI+hr+yolhD403SchbRvgxVtnOF4Zf55Wv5uctYTJmdmeZy1f
EzMR8pkCeRr3yLm3X6wej7XvXFgwc755qEFmwTOEzscRT9saMbBct0YQ1OPRg5+YH0dpZwFiG8MR
qZ5XYnOUlMo19tephQAh/iQPgOfKv8Eafr3nrqWlpaX1ykTALypoTc9MS417l4I4x74y7G7q6sDM
7KyE7VkDzzK5UfOY8ujNmJicwMT0OPrGe9Ay1IjGwTopb2saqJPM9KaBejQPNqBxoFZK3ghIPhb3
xukd9yugMuucI1uHpwekJM6sPHCG2NngxjzDvfcJgbiUwUmmvMUes5790aIAk78fnRmWhQP/lm0g
zdNm+x1D9Ow3/+SyX0L2U2qRwMdYWvDwccTztgyqsT2+7fwH1HmzrSzD/PT2mcA3p7x62/2X/o4C
PO9rew7LkYa7lpaWlpbWKpOGu5aWlpaW1iqThruWlpaWltYqk4a7lpaWlpbWKpOGu5aWlpaW1iqT
hruWlpaWltYqk4a7lpaWlpbWKpOGu5aWlpaW1iqThruWlpaWltYqk4a7lpaWlpbWKpOGu5aWlpaW
1iqThruWlpaWltYqk4a7lpaWlpbWKpOGu5aWlpaW1iqThruWlpaWltYqk4a7lpaWlpbWKpOGu5aW
lpaW1iqThruWlpaWltYqk4a7lpaWlpbWqhLw/wGCPfU+9Dd2kQAAAABJRU5ErkJggg==
</data><mime>image/png</mime><width>503</width><height>325</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="4420c2b0b190add78ed1a5111ef8875d" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="503" objHeight="325"><item x="170" y="20" w="51" h="12"><t w="58">应用程序</t><t w="42">應用程序</t><t w="36">应規程序</t><t w="34">應規程序</t><t w="31">应周程序</t><t w="29">庄周程序</t><t w="29">启用程序</t><t w="27">应用穆序</t><t w="26">应用稳序</t></item><item x="41" y="59" w="51" h="12"><t w="55">配置文件</t><t w="39">配麗文件</t><t w="38">配置文1牛</t><t w="36">配置刘牛</t><t w="35">配置制牛</t><t w="35">配麗文1牛</t><t w="33">配萃文件</t><t w="33">配麗刘牛</t><t w="32">配麗制牛</t></item><item x="161" y="67" w="74" h="15"><t w="68">Configuration</t><t w="51">Configration</t><t w="27">ATI载目</t><t w="27">ATI载且</t><t w="26">ATI佔目</t><t w="26">ATI载訂</t><t w="26">ATI砸目</t><t w="26">ATI 0目</t><t w="25">目爲</t><t w="24">找爲</t></item><item x="18" y="75" w="64" h="12"><t w="54">hibernate.cf</t><t w="40">hiberate.cf</t><t w="35">hibenate.cf</t><t w="34">hibernatecf</t><t w="33">hiernate.cf</t><t w="31">IIIB</t><t w="29">late -</t><t w="29">late ,</t><t w="29">late 。</t><t w="28">Laic -</t></item><item x="72" y="76" w="19" h="13"><t w="32">cf鲁</t><t w="31">cf 3 -</t><t w="31">cr鲁</t><t w="30">载塔</t><t w="30">cr 3 -</t><t w="30">cf 3 。</t><t w="30">cf 3 ,</t><t w="29">cr 3 。</t><t w="29">cr 3 ,</t><t w="29">载皺</t></item><item x="92" y="76" w="19" h="11"><t w="45">xml</t><t w="31">nl</t><t w="30">割</t><t w="27">訂1</t><t w="27">訂!</t><t w="27">刻</t><t w="26">鯛</t><t w="26">目1</t><t w="26">目!</t><t w="26">賢1</t></item><item x="398" y="55" w="78" h="67"><t w="50">日</t><t w="48">白</t><t w="47">曰</t><t w="46">臼</t><t w="26">B</t></item><item x="158" y="111" w="8" h="11"><t w="40">S</t><t w="36">$</t><t w="26">醫</t><t w="26">呂</t><t w="24">吕</t><t w="23">g</t></item><item x="165" y="114" w="11" h="8"><t w="47">臼</t><t w="45">白</t><t w="42">目</t><t w="38">因</t><t w="35">团</t><t w="33">蝉</t><t w="33">轎</t><t w="32">鹦</t><t w="32">鱷</t></item><item x="176" y="111" w="63" h="14"><t w="60">sionFactory</t><t w="37">sinFactory</t><t w="36">sonFactory</t><t w="35">si0Factory</t><t w="26">载欣</t><t w="26">0欣</t><t w="25">計盞</t><t w="25">計售</t></item><item x="30" y="133" w="11" h="12"><t w="38">映</t><t w="33">曉</t><t w="30">夢</t></item><item x="38" y="132" w="43" h="12"><t w="35">榜汶件</t><t w="34">測文件</t><t w="34">榜坟件</t><t w="34">榜蚊件</t><t w="33">榜澈件</t><t w="33">滴文件</t><t w="33">泗文件</t><t w="33">谢文件</t><t w="32">榜?文件</t><t w="32">濾汶件</t></item><item x="29" y="150" w="18" h="9"><t w="33">上教1</t><t w="33">上散1</t><t w="33">上厘</t><t w="32">上叔1</t><t w="32">上号1</t><t w="32">上制</t><t w="31">道教1</t><t w="31">道散1</t><t w="30">道叔1</t><t w="30">眉教1</t></item><item x="49" y="153" w="9" h="6"><t w="35">謀</t><t w="32">江</t><t w="29">詢</t><t w="28">趾</t></item><item x="59" y="150" w="19" h="9"><t w="35">割野1</t><t w="35">刚野1</t><t w="35">瓣野1</t><t w="34">驮野1</t><t w="34">刚慧1</t><t w="34">割慧1</t><t w="34">瓣慧1</t><t w="33">刚目1</t><t w="33">割目1</t><t w="33">瓣目1</t></item><item x="178" y="152" w="40" h="11"><t w="71">Session</t></item><item x="273" y="151" w="23" h="11"><t w="41">查询</t><t w="32">壹询</t><t w="31">亞询</t><t w="16">盔询</t><t w="16">蛮询</t><t w="12">董询</t><t w="12">蜜询</t><t w="11">壶询</t><t w="11">盔淘</t><t w="11">蛮淘</t></item><item x="359" y="153" w="15" h="11"><t w="34">曼目</t><t w="34">Qu</t><t w="33">臭目</t><t w="33">覓目</t><t w="33">旻目</t><t w="32">曼旨</t><t w="32">臭旨</t><t w="31">曼據</t><t w="31">曼彗</t><t w="31">覓旨</t></item><item x="375" y="155" w="16" h="10"><t w="34">鵡欣</t><t w="33">垂欣</t><t w="33">鵡檸</t><t w="33">垂檸</t><t w="32">鵡戰</t><t w="32">鵡粵</t><t w="32">垂戰</t><t w="32">垂粵</t><t w="31">荀欣</t><t w="30">睿欣</t></item><item x="161" y="218" w="24" h="9"><t w="40">Tran</t><t w="34">丁ran</t><t w="34">uran</t><t w="30">丁RA ?</t><t w="28">丁? an</t><t w="17">丁? ? ?</t></item><item x="186" y="220" w="10" h="7"><t w="25">锋</t><t w="25">輿</t><t w="23">輻</t><t w="22">轎</t></item><item x="197" y="217" w="25" h="10"><t w="39">Mimi</t><t w="34">mi 011</t><t w="34">moil</t><t w="33">mi载II</t><t w="32">mi oil</t><t w="32">mi载il</t><t w="32">mi 0 II</t><t w="32">雌, 011</t><t w="32">mi载11</t><t w="32">mi 。 II</t></item><item x="42" y="224" w="25" h="12"><t w="43">异常</t><t w="41">異常</t><t w="37">彝常</t><t w="36">异當</t><t w="34">興常</t><t w="34">彝當</t><t w="34">異當</t><t w="31">興當</t></item><item x="324" y="219" w="27" h="13"><t w="65">正常</t><t w="31">王常</t><t w="12">AA</t></item><item x="423" y="261" w="25" h="18"><t w="25">套/</t><t w="23">攜/</t><t w="23">慮/</t><t w="23">套1</t><t w="23">套,</t><t w="22">谦/</t><t w="21">攜1</t><t w="21">慮1</t><t w="21">攜,</t><t w="21">慮,</t></item><item x="45" y="275" w="23" h="12"><t w="40">回滚</t><t w="39">回滾</t><t w="38">回灌</t><t w="38">回濠</t><t w="21">!二</t><t w="21">」二</t><t w="20">!亨</t><t w="20">」亨</t></item><item x="320" y="270" w="25" h="12"><t w="46">提交</t><t w="37">提賽</t><t w="35">捉交</t><t w="32">捉賽</t><t w="15">7寅</t><t w="15">7袋</t><t w="15">7备</t><t w="15">7譴</t><t w="13">,寅</t><t w="13">,袋</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
iVBORw0KGgoAAAANSUhEUgAAAWgAAAE6CAYAAAA7o8gpAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAALMXSURBVHhe7b0HmxbFtv7NdziCGZCkkkVAclSC
RCVIzlkBIwICApKTZAmKWUTBiIIRMAAqQUAREBWMiHGb9t5nn/9bb/3WcI81vZ8ZZoY0zNR9Xevp
fip3ddXdq1dXKOQiIlLg//v//j8Tnf+///f/0o+I3JPhFCbplkqSaSL/93//5/7zn/+4//3f/3X/
/ve/3b/+9S/3z3/+0+Svv/4y+fPPP9wff/zhfv/9d/fbb7+5f/zjH+7XX3+1c/3nSJg///wzXZQO
QrrkQV7/8XmqLMmyIZSJ/5ldD/4cMwsj/1QSEZEVIkFHpARkkyStpBwvDNA54SBDiPKnn35yX3/9
tfvss8/chx9+6LZs2eLWr1/vnnpqlVu2fJmbNXu2mzR5khs7bqy7/fbb3eAhg13v3r1dt27dXJcu
nV337t3cDTd0dNdd19a1btXKtWnT2s45tm7dyktr17ZtW9e+fTvXqdMNPl5Xi9+7T283ePBgn+Yd
Pu1x7p5JkyyvZcuWuTVr1rjXXnvNbd682e3Zs8fK9s0337hffvnFPxT+aWXX9eq6kv+zIyGS/yMi
kogEHZESIalAQuH/UJJhEcKj/X7//fdu1+7d7o033nCPPfaom+3JEMLt07ev6+gJtqUn12bNmhqp
tmt3vevYsaORcL/+/d3td9zuxt09zk2YONFNnjLFzZg5082dO9ctXLjQPfDAAyYPPvigT/cxT+xP
uWeffdatXv20W7VqlbnhB9kvWbLELVy00M2aNctN8emQ1qRJk91dY8a4W2+71fXs1ct16drV593B
E3wb17xZM3fttdfaeccbbnADBw50o0ePdvfeO8c9+eST7s0333Sf7Nvnjh496q/xf9MJOllHguoj
6Q6S/yMikogEHZEpRCqpJCQdztGMDx065DZs2OjmzJnj+vTp4xo2augqX1HZVapc2dWtW9d16NDe
3XTTTZ4gJ7kVDz7k1q5d6za99ZZp0Z9//rlp1d9++6378cefzEwhswTmCJk7OP4vZgkvmA5kfghF
7ma+8IIpI91UcuyI+eNnrx3/+OOP7siRI6YtU/5du3YZCT/zzLOe4JfbAwKtG+28Ro0armLFiu7K
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
qefnX3C+7S5e46qr3HPPP2/1mCRodtauW6+uTafWxrvsrs64buKzel7Lli3dk6tWWVzFP52IBB0R
cQYRdjrOkahBp2m7OicP/rMz9AUXXuCKFy9mi/fXql3LiLRqtaruzQ0bbDH/3r17u8JFCrtWrVvZ
cqWXXnapu7hoUff6G29YOmG52HG/fIXy7pISJWxKNUuhXn/9da7IuUVc27ZtXY8ePVzJUiVdmTJl
3FtvvZWhTJJTjUjQERFnEGGnU6ePGvTfUHzymTdvrrvo4otc8+bNTOP98MMPXdOmTdy5557rxo4d
455++inbDR3iZplStsdiVxYId8iQIenbZclUsXHTJle2XFmL88UXh7yG/rArUbKEaelffvWVmVBu
uukmI/ybb7nZ/fbb72ZS2bZtu3vxxRfd2rUvuo/37j3ha8wKkaAjIs4gwk7HORIJ+m8ofkjQrb12
zH/ktttuMy26a9eu7u6777YdxFm4iRmOEPFbb79tW2axQQAaMunJVMGa1Ox5yF6Jn33+uRs9erSZ
RSZPnmxxkWeeecZ2dGnZqqX74tAht2zZUletejWLB7k3atTIrVu/3sp4KhAJOiLiDCLsdJwjkaD/
huKLoNFwW7RoYW5oxN27dTNSRVMeOXKkbZHFWtPK++OP97pixYq5WrVqec13W3p6HDFxsEwqBM0m
AH379TMyXvnkk+kEvWXrVnOr36C+e+6551wVT5YlSpRwr772uq1JfUmJS8xmzQPhVCASdETEGUTY
6ThHIkH/DcUXQV/sNejqV1V3M2fNcgMGDnBFixW1j4ZveLLFHME+hsuXL0/P++OPP3YXXXSRq127
tnv//ffTiRe/jRs3ugoVK7oyl5axj4u9evd25xQu7FavXp2e7/btO8yEUrduXbdixQrTnvk4uX37
dvvI2LNXT3fzzTfbUqinApGgIyLOIMJOxzkSCfpvKL4IumjRi70U9ddezzW+urHr3KWLe+qpp2w4
3ODBgz3BnmMLCylvbMSYPdCgGaGBmwg6zcRR3j4CfuSJvFfvXqYtr169Jj3MNk/EkHbNWjW91vyq
mVLI/9oW17qpU6e6V155xX333RELfyoQCToi4gwi7HScI5Gg/4bii6CxQbP+9J49u712/JH75ptv
zLzw++9/uDtH3mkmjnDt5D17PnIXXHCBacCbN29233z7rTty5Hsj1PSPhGUvNxNHn759jeBXrnzS
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
AAAAAElFTkSuQmCC
</data><mime>image/png</mime><width>360</width><height>314</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="410f69c6154719ec3d938133fca66a75" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="360" objHeight="314"><item x="148" y="31" w="63" h="11"><t w="56">database</t><t w="40">data base</t><t w="36">data辆SE</t><t w="36">data略SE</t><t w="35">da TA base</t><t w="35">da轨base</t><t w="35">da隸base</t><t w="35">da鞘base</t><t w="35">來TA base</t><t w="35">data ? ase</t></item><item x="163" y="89" w="32" h="11"><t w="28">瀬目载</t><t w="27">瀬目歎</t><t w="27">忒目载</t><t w="27">忒目歎</t><t w="26">瀬睏</t><t w="26">瀬吕载</t><t w="26">忒睏</t><t w="26">瀬吕歎</t><t w="26">忒吕载</t><t w="26">瀬呂载</t></item><item x="170" y="113" w="18" h="20"><t w="11">滿?</t></item><item x="133" y="133" w="53" h="16"><t w="66">「一一－</t><t w="64">「一一二</t><t w="63">厂一一二</t><t w="58">「一一一</t><t w="57">厂一一一</t><t w="55">「一二二</t><t w="55">「二一二</t><t w="53">厂一二二</t><t w="53">厂二一二</t><t w="53">「一二一</t></item><item x="215" y="135" w="9" h="14"><t w="23">1</t><t w="23">丁</t><t w="11">l</t></item><item x="255" y="135" w="71" h="14"><t w="78">「一一一一</t><t w="78">厂一一一一</t><t w="78">广一一一一</t><t w="69">厂一一一二</t><t w="69">厂一一二一</t><t w="69">厂二一一一</t><t w="69">厂一二一一</t><t w="68">「一一一二</t><t w="68">「一一二一</t><t w="68">「二一一一</t></item><item x="150" y="158" w="59" h="13"><t w="73">Hibernate</t><t w="58">Hibe用ate</t></item><item x="275" y="84" w="57" h="11"><t w="32">hib音精at靡</t><t w="32">hib em at靡</t><t w="32">hi be mat靡</t><t w="32">hi be精at靡</t><t w="32">hib音mat靡</t><t w="32">hib音轍at靡</t><t w="32">hibernate</t><t w="32">hi be mat 8</t><t w="32">hi be轍at靡</t><t w="32">hi be精at 8</t></item><item x="253" y="103" w="44" h="14"><t w="52">system</t><t w="28">呂ys tem</t><t w="24">呂ys te ?</t><t w="24">呂? stem</t><t w="20">呂ys ?音?</t><t w="18">呂?音tem</t><t w="17">呂? st音?</t><t w="14">呂?音te ?</t></item><item x="302" y="103" w="56" h="14"><t w="41">boundary</t><t w="33">bo UNDA假</t><t w="33">bo UNDA膠</t><t w="33">bound音假</t><t w="33">bound音膠</t><t w="33">bo UNDA程</t><t w="33">bound异假</t><t w="33">bound异膠</t><t w="33">bo UNDA秤</t><t w="33">bound呂假</t></item><item x="261" y="159" w="22" h="12"><t w="32">con</t><t w="30">MN</t><t w="30">co目</t><t w="29">co找</t><t w="29">co栽</t><t w="29">gon</t><t w="27">帥目</t><t w="27">go目</t><t w="27">歎on</t><t w="27">師目</t></item><item x="283" y="159" w="7" h="12"><t w="24">看</t></item><item x="292" y="161" w="27" h="12"><t w="35">GU韓</t><t w="34">GU購</t><t w="33">GU镇</t><t w="33">GU啃</t><t w="29">gum</t><t w="23">靂目韓</t><t w="23">靂目購</t><t w="22">音目韓</t><t w="22">音目購</t><t w="22">靂目镇</t></item><item x="319" y="159" w="22" h="12"><t w="36">lion</t><t w="33">TI on</t><t w="32">II on</t><t w="32">TI 0矗</t><t w="32">TI 0舒</t><t w="32">TI 0栽</t><t w="31">II 0矗</t><t w="31">II 0舒</t><t w="31">II 0栽</t><t w="29">1 ion</t></item><item x="0" y="135" w="84" h="14"><t w="71">’「一一一一</t><t w="57">er一一一一</t><t w="49">er一一一二</t><t w="49">er一一二一</t><t w="49">er二一一一</t><t w="48">er一二一一</t></item><item x="29" y="159" w="58" h="14"><t w="48">mappings</t><t w="45">mapping $</t><t w="37">Mapp in Gs</t><t w="37">map pings</t><t w="36">Mapp mgs</t><t w="36">Mapp吨$</t><t w="36">Mapp 1目Gs</t><t w="36">Mapp 1 ng $</t><t w="36">map ping $</t><t w="35">闇ap pings</t></item><item x="242" y="229" w="38" h="11"><t w="32">PO Jos</t><t w="31">PO Jo $</t><t w="30">pm OS</t><t w="30">Rojo $</t><t w="30">田Jos</t><t w="29">pm 0 $</t><t w="28">田Jo $</t><t w="28">惡0 Jos</t><t w="27">鞋0 Jos</t><t w="27">竄0 Jos</t></item><item x="146" y="290" w="33" h="11"><t w="36">client</t><t w="30">Ci IE辦</t><t w="30">Cl IE辦</t><t w="30">Gile辦</t><t w="30">Cl佰辦</t><t w="30">Ci佰辦</t><t w="30">GI IE辦</t><t w="30">gl IE辦</t><t w="30">Cl IE僧</t><t w="30">Ci IE僧</t></item><item x="184" y="290" w="29" h="11"><t w="64">code</t><t w="30">co偏</t><t w="30">co de</t><t w="29">co郝</t><t w="28">县ode</t><t w="28">COD音</t><t w="28">县0 de</t><t w="28">县0偏</t><t w="27">县od音</t><t w="27">蠢ode</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
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
</data><mime>image/png</mime><width>440</width><height>87</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="407cdb693021a953f9baf76b619538f9" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="440" objHeight="87"><item x="28" y="28" w="46" h="10"><t w="59">driver</t><t w="51">口river</t><t w="39">drive赏</t><t w="39">drive繫</t><t w="39">drive資</t><t w="39">drive萱</t><t w="36">且river</t><t w="35">訂river</t><t w="34">且rive赏</t></item><item x="37" y="64" w="71" h="12"><t w="56">+drive(car:</t><t w="46">+drive (car:</t><t w="44">十drive (car:</t><t w="35">+drive (ca:</t><t w="35">+drive (cr:</t><t w="33">十drive (ca:</t><t w="30">Dr Ive</t><t w="30">ER Ive</t><t w="29">Dri隸悲</t></item><item x="116" y="65" w="20" h="10"><t w="66">Car</t><t w="26">6</t></item><item x="137" y="64" w="18" h="12"><t w="26">叫：</t><t w="13">欲*妇</t><t w="13">欲*炊</t><t w="13">欲末妇</t><t w="13">欲末炊</t><t w="13">欲*酝</t><t w="13">欲*缸</t><t w="12">欲本妇</t><t w="12">譚*妇</t><t w="12">衣*妇</t></item><item x="163" y="65" w="28" h="10"><t w="57">void</t><t w="49">飞，oid</t><t w="35">vole</t><t w="34">隨old</t><t w="34">隨釘LD</t><t w="33">隸old</t><t w="33">隸釘LD</t><t w="33">Vo LD</t><t w="33">隨纽LD</t><t w="33">邓old</t></item><item x="272" y="27" w="24" h="12"><t w="71">Car</t><t w="33">CA資</t><t w="33">CA管</t><t w="33">CA赏</t><t w="31">gar</t><t w="30">ga資</t><t w="30">ga管</t><t w="30">ga赏</t><t w="28">嚴AR</t></item><item x="282" y="64" w="52" h="12"><t w="35">啡’noveO：</t><t w="28">邨/已?</t><t w="27">邨/訊</t><t w="26">邨/巻?</t><t w="26">邨/誡</t><t w="26">邨/巳?</t><t w="26">藝/已?</t><t w="25">七頁</t><t w="24">七瓦</t><t w="24">七目</t></item><item x="342" y="65" w="28" h="10"><t w="50">飞，oid</t><t w="32">? void</t><t w="29">vole</t><t w="24">Vo LD</t><t w="24">Vo ID</t><t w="23">隨old</t><t w="23">隨OID</t><t w="23">邓old</t><t w="23">邓OID</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
iVBORw0KGgoAAAANSUhEUgAAAREAAADACAYAAAAjgVewAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAh+SURBVHhe7d1fqx1XGQdgP0Q/Rf0EvVDojRcS
rBSUIpYWvNY7A1bwogVvlFYwpfmjiUmRliQmMREhNm0S0BiTWI5UQkKwjZCaStDAuSm9GpmTPWax
smbN7LzpyZ7ZzwM/zsx61+y9QzM/9gTK+UIDEKBEgBAlAoQoESBEiQAhSgQIUSJAiBIBQpQIEKJE
gJBQiXz62WZz8+NLIjKT3PpkY3F3jxcqkcOnv9vsPfpsc+jUiyIyg7z25pebax+dWdzh44RKpH3T
tr2AeTh57qVm49rxxdk4SgT4PyUChCgRIESJACFKBAhRIkCIEgFClAgQokSAECUChCgRIESJACFK
BAhZmRJ5escTxQCrbaW+iZRKQ5HAalMiQIgSAUImVyLteZpOvpafd9L1MfNOel6aw7pauRLJk8rP
W6U96VrfcWfZeb6ndA2sk5X/JpLqbuI8qfw8VZu1SvN0bWgO62hyJTJkzGukSZWuTdeG5rCO1q5E
cun+0rXLzGEdTb5E8rXaawxdH53DOlqZEmlvxi416b50b76ezjoPs6czdg3WzUp9EwGmR4kAIUoE
CFEiQIgSAUKUCBCiRIAQJQKEKBEgRIkAIUoECFEiQIgSAUKUCBCiRICQbS+R/cef23rT81d2icgM
sufI15v3rx5Z3OHjhErkjcNfa3YffqY5cOLbIjKDvHroS82Fjf2LO3ycUIkcPPlCc/XGuWZzc1NE
ZpBjZ3Zu7+OMEhGZV5SIiISiREQklMdeIhc33moOnHh+66fje8cfXP/D1vG7F3c5XpPj3517ufnH
P69M5vj2vz9anRK5dfv61nn70/G94/Y/UHt889YHjtfkuL0x7/znX5M5/u/dO6tTIiIy7SgREQlF
iYhIKEpkibS/LrN0LLLOWZsSSX9vbmk9XSultGfMdduRoc8x9s8o8jCZbIk87E1Rum7Maz3sdauS
KX1WmVaUSM9amtp8KjfnVD6nTC+TK5H2ZshT21Oa9a31XVe6pktpVnqNWrr93TX5+TJradJ53x6R
aGb3TSRfHzrP14bmefr2164pJd+fntdmpfPSWmmPyKPIbB9n2nmXfD09T9dKs9p6m9psmeSvk57X
ZqXz0lppj8ijyCxLJJ2NuZnatS75rJuX1tvUZsume638NZc9L62V9og8inicydbGvm7fWrfeN6ul
uya/dtnz0lppj8ijyGRLpE17Y/TdQGOS703P09fr1sesdet9s6EMvWY6T9fy2Zi5yKPIpEtku5Pe
hG5IkXtRIiISihIRkVCUiIiEokREJBQlIiKhKBERCWXbS+S3Z3/QvLLnSZl5Xm5/7v5icSbzy7K/
pD9UIqyH85df3yqRW59sLFbgPiXCoDfe3tGcPPvD5r2/vLZYgfuUCFV37n64VSJ3N281P//1Vxar
cJ8Soap9lGnT2n/8Wx5peIASoar9FtJ+G2n98f19Hml4gBKhV/co0/FIQ4kSoVf6KNPxSENOidAr
fZTpeKQhp0Qoyh9lOh5pyCkRikqPMh2PNKSUCEWlR5mORxpSSoQH9D3KdDzSkFIiPKD2KNPxSENH
ifCAw6e/d+//2h3I32/8fnEF60yJMMjjCzVKhEFKhBolwiAlQo0SYZASoUaJMEiJUKNEGKREqFEi
DFIi1CgRBikRapQIg5QINUqEQUqEGiXCICVCjRJhkBKhRokwSIlQo0QYpESoUSIMUiLUKBEGKRFq
lAiDlAg1SoRBSoQaJcIgJUJNqERufnypOX9ll8w8p//04+YnB54qzmR++fSzzcUdPk6oRA6derE5
ee6l4geR+eTs5Z81J97dWZzJvLL36LPNxrXjizt8nHCJtN9GgHlovxQoEeChKREgRIkAIUoECFEi
QIgSAUKUCBCiRIAQJQKEKBEgRIkAIUoECFEiQMjKlMjTO57ozXbYzveCOVmpEun0HX/elAgsbyUf
Zx7XzaxEYHlKJKFEYHmTK5F2liY3NG/1zbvzvnkrnaXzfC0/h7maVImU1tO1oXmrdt4eD81zpf1D
18CcTK5ESsn1zUt7U6V5fn0pqfwc5m7y30RytZt66PrSfJnrW2P2wJzMqkRK83Tt876+NWYPzIl/
E1ni+qF5q7QH5mzlSqS9CbuUpPPSnnzeJVVaf5i12no6gzlbyW8iwHQoESBEiQAhSgQIUSJAiBIB
QpQIEKJEgBAlAoQoESBEiQAhSgQIUSJAiBIBQpQIELLtJbL7yDPN629/tfnFsW+KyAzy04NPNRc2
9i/u8HFCJfLL4881J9/7UXP+0j4RmUH2Hf1G89erRxZ3+DihEjl48oXm6o1zzebmpojMIMfO7Nze
xxklIjKvKBERCUWJiEgoj71E3rnwavPKnie3fjq+d3xx462t49+8833Ha3J84MTzW/fFVI5v3b6+
OiUiItOOEhGRUJSIiISiRB5R2t94VzoWmXuUSCXdr8MszdKU9qxKkQx9jrF/RpG+TLZEtusv/pj3
Ke2Z0o2pRCQSJTKQofepzadycyoRiWRyJdL+hc9T2zNmPZ+l8+44X8/npfTtr12Tp9vfXZOfL7OW
Jp337REZk9l9E8nXu/O+9TGzsXvzlGb5641J7T1rs9J5aa20R2RsZlkiefrm6Vq6J03p+tp5mtps
mdTec+jzlD7DmD0iYzP7byJp0lnfcZ58NnSepjZbNt1rLft5Sp9hzB6RsfE4E5gtu9at981q6a7J
r132vLRW2iMyNpMtkTbtX/6+m6Q0S9fz+bJr3Xm3lp73rXXrfbOhDL1mOk/X8tmYucjYTLpEVinp
TeiGlHWKEhGRUJSIiISiREQkFCUiIqEoEREJRYmISCiPpUTOX967VSQiMv28eeo721sif/7br7aK
RETmkzt3P1zc4eOESgRAiQAhSgQIUSJAiBIBQpQIEKJEgICm+R+bVD6uVnnftgAAAABJRU5ErkJg
gg==
</data><mime>image/png</mime><width>273</width><height>192</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="e3adb596faf3b1de553136fd341beca4" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="273" objHeight="192"><item x="21" y="25" w="48" h="12"><t w="71">Person</t><t w="62">Perso口</t><t w="60">Pers。口</t><t w="56">Pers0口</t></item><item x="31" y="62" w="44" h="12"><t w="55">talk（）：</t><t w="29">ki 》 #</t><t w="29">ki妇</t><t w="29">ki 《 #</t><t w="29">ki炊</t><t w="28">ki酝</t><t w="28">ki缸</t><t w="27">应》 #</t><t w="27">縫</t><t w="26">Ko #</t></item><item x="83" y="63" w="28" h="10"><t w="51">飞，oid</t><t w="50">void</t><t w="34">隸臼ID</t><t w="34">隨臼ID</t><t w="33">邓臼ID</t><t w="33">隸已ID</t><t w="33">轩臼ID</t><t w="33">隸釘ID</t><t w="33">隨已ID</t><t w="33">隨釘ID</t></item><item x="20" y="129" w="56" h="12"><t w="73">Teacher</t><t w="61">丁eacher</t><t w="55">Tea巳her</t><t w="53">Te徨cher</t><t w="53">丁ea巳her</t><t w="39">teach已赏</t><t w="39">teach已資</t><t w="39">teach已萱</t><t w="39">teach er</t></item><item x="31" y="165" w="51" h="12"><t w="57">teach（）：</t><t w="38">teach 《妇</t><t w="38">teach 《炊</t><t w="37">Teac HI妇</t><t w="37">Teac HI炊</t><t w="37">teach 《酝</t><t w="37">teach 《缸</t><t w="37">Teac HI酝</t><t w="37">Teac HI缸</t><t w="37">Teac卜《妇</t></item><item x="90" y="166" w="28" h="10"><t w="57">void</t><t w="50">飞，oid</t><t w="35">vole</t><t w="34">隨old</t><t w="34">隨釘LD</t><t w="33">隸old</t><t w="33">隸釘LD</t><t w="33">Vo LD</t><t w="33">隨纽LD</t><t w="33">隨臼LD</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
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
rkJggg==
</data><mime>image/png</mime><width>127</width><height>208</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="de409da399f197fd024d94329968d148" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="127" objHeight="208"><item x="16" y="26" w="12" h="6"><t w="25">电</t><t w="25">一</t><t w="19">疇</t><t w="15">or</t></item><item x="36" y="27" w="20" h="9"><t w="50">lnte</t><t w="43">Inte</t><t w="31">1們te</t><t w="31">丽te</t><t w="29">ln te</t><t w="29">IN te</t><t w="28">丽IE</t><t w="28">區te</t><t w="28">丽树</t><t w="27">ln IE</t></item><item x="57" y="26" w="9" h="10"><t w="30">绣</t><t w="29">簾</t><t w="29">碟</t><t w="28">揉</t><t w="25">阿</t><t w="23">何</t><t w="19">而</t><t w="19">咸</t><t w="18">侨</t></item><item x="65" y="28" w="20" h="8"><t w="68">ace</t><t w="33">异CE</t><t w="33">AC狼</t><t w="32">异狼狼</t><t w="31">8 CE</t><t w="31">AC 8</t><t w="31">AC 9</t><t w="31">异狼8</t><t w="31">寂CE</t></item><item x="92" y="26" w="10" h="10"><t w="74">A</t><t w="27">一八</t><t w="26">一點</t><t w="26">一伞</t><t w="26">一禽</t><t w="23">-八</t><t w="23">-點</t><t w="23">-禽</t><t w="23">-伞</t></item><item x="16" y="111" w="83" h="96"><t w="61">自</t><t w="55">目</t><t w="52">巴</t><t w="52">白</t><t w="51">固</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
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
dAzD/wCa94Z6qrK4AQAAAABJRU5ErkJggg==
</data><mime>image/png</mime><width>651</width><height>95</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="674f2777961e1d8a930189e52855ff66" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="651" objHeight="95"><item x="8" y="29" w="64" h="13"><t w="47">Custorrer</t><t w="40">Gust Omer</t><t w="37">Gust已江已胎</t><t w="37">Gust已江已五</t><t w="37">Gust日江已胎</t><t w="37">Gust已江已薯</t><t w="37">Gust已江巳胎</t><t w="36">Gust已江已蒼</t><t w="36">Gust口江已胎</t><t w="36">Gust日江已五</t></item><item x="25" y="63" w="52" h="10"><t w="37">prod tr ts</t><t w="36">prod LR ts</t><t w="36">prod ir ts</t><t w="36">prod LK ts</t><t w="35">prod tr 《言</t><t w="35">prod ir 《言</t><t w="35">prod LR 《言</t><t w="35">prod LK 《言</t><t w="35">pro dirt言</t><t w="25">prod ?坂《</t></item><item x="85" y="64" w="38" h="7"><t w="41">vector</t><t w="38">隨Ector</t><t w="38">隸Ector</t><t w="38">邓Ector</t><t w="38">鞍Ector</t><t w="37">隨ecto監</t><t w="37">隸ecto監</t><t w="37">隨ecto釐</t><t w="37">隸ecto釐</t><t w="37">隨ecto狐</t></item><item x="132" y="63" w="26" h="8"><t w="41">prod</t><t w="34">PR od</t><t w="32">PR信搀</t><t w="32">PR信选</t><t w="32">PR信昇</t><t w="31">PRO搀</t><t w="31">PRO选</t><t w="31">目rod</t><t w="31">昱rod</t><t w="31">PRO昇</t></item><item x="159" y="64" w="17" h="7"><t w="31">!詢《</t><t w="29">1詢《</t><t w="29">! RT</t><t w="28">!珀《</t><t w="28">!跆《</t><t w="28">1 RT</t><t w="27">1珀《</t><t w="27">1跆《</t><t w="12">trio</t></item><item x="179" y="63" w="11" h="8"><t w="34">末&gt;</t><t w="34">末》</t><t w="33">末/</t><t w="31">墩&gt;</t><t w="31">墩》</t><t w="30">墩/</t><t w="30">嫩&gt;</t><t w="30">嫩》</t><t w="29">嫩/</t><t w="20">* y</t></item><item x="410" y="29" w="53" h="10"><t w="82">product</t><t w="37">PR口duct</t><t w="36">PR已duct</t><t w="36">PR因duct</t><t w="36">PR困duct</t><t w="34">pro duct</t><t w="32">呂赏口duct</t><t w="32">呂資口duct</t></item><item x="427" y="66" w="8" h="5"><t w="34">Ci</t><t w="33">CT</t><t w="33">Cl</t><t w="33">已1</t></item><item x="436" y="66" w="8" h="5"><t w="24">酶</t><t w="20">却</t><t w="19">凑</t><t w="19">本</t></item><item x="446" y="64" w="4" h="7"><t w="17">尤</t></item><item x="454" y="66" w="6" h="5"><t w="36">頓</t><t w="30">阔</t><t w="30">鯛</t><t w="30">韌</t></item><item x="462" y="66" w="17" h="5"><t w="32">頁已?</t><t w="30">瓦已?</t><t w="29">頁巻?</t><t w="29">目已?</t><t w="29">頁巳?</t><t w="28">瓦巻?</t><t w="28">瓦巳?</t><t w="27">目巻?</t><t w="26">目巳?</t><t w="21">頁r</t></item><item x="493" y="63" w="25" h="9"><t w="30">Ci酶《</t><t w="29">GI酶《</t><t w="29">Ci坤《</t><t w="29">GI坤《</t><t w="29">GI却《</t><t w="29">Ci却《</t><t w="29">ct酶《</t><t w="29">GT酶《</t><t w="29">GI珀《</t><t w="29">Ci珀《</t></item><item x="521" y="66" w="18" h="5"><t w="37">頓頁</t><t w="36">頓瓦</t><t w="35">頓目</t><t w="32">阔頁</t><t w="32">鯛頁</t><t w="32">韌頁</t><t w="32">阔瓦</t><t w="31">鯛瓦</t><t w="31">韌瓦</t><t w="31">阔目</t></item><item x="534" y="66" w="11" h="5"><t w="37">已監</t><t w="36">已蒼</t><t w="35">已胎</t><t w="35">已蔔</t><t w="34">ER</t><t w="32">巻監</t><t w="31">巳監</t><t w="30">巻蒼</t><t w="30">巳蒼</t><t w="30">巻胎</t></item><item x="547" y="65" w="4" h="5"><t w="34">*</t><t w="32">末</t><t w="30">束</t><t w="29">常</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
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
LtGl3tp6vE+01EtraX2pl/bzcazl47yW9tbW432ipV5aS+tLPbarsIheERbJsdzs3yySnFdYRK8I
i+RYCotkowqL6BVhkRxLYZFsVGERvSIskmMpLJKNKiyiV4RFciyFRbJRhUX0irBIjuWqsHjtbZ+c
rrzhvdPL//1719fhw+vmB7/o+phdP3Xqjum+R7/WxXX63AmL6JU8LD765NUHezy8uj77Ojz74Tp8
Frg+HtfhfArPSMvXIT/FZ9hvFslGFRbRK36zSI6lsEg2qrCIXhEWybEUFslGFRbRK8IiOZbCYkP6
v6vsx1F+jsIiekVYJMdymLC4FBBq/6u7Wv2oPcx7OKrvaele+/56+7CV93MuPzthEb0iLJJjeV7D
4j4P7DWHbqmeWpuzz/d5WA/7Ho7ie1pzrxZ+hqmtvZ85a+9VWESvCIvkWA4RFmNv6evV+vt8n4fx
XL7++f6e4n2W7revr7erc193q/e0q7X3KSyiV4RFciw3CYuhnlrrlebGer4mfc17qWvr+XXen6vv
0ov9Um1ufqm/VM+vS/3cdF2pl5rW8uvSmrSe99J+qV57Ta3VSvWacX5ck493qaWm/docYRG9IiyS
Y7n3sJgfgqmxn88vXS/1UmNvbn06XjMvr8V6aVyrL/VqtcPcb8098traXvqa10vjcJ33Y702rvWW
1kTTOWm/VKvNr5nPT8dzvdK4VCvNCQqL6BVhkRzLTX+zWKunpr10bmppfqyXxmvn5YZ6bt5L56/p
BZfWpf18bhzX6rXxWsO6aF6vjfNeWs8t9dPamnqpF/ul+q7m90nHc73SuFQrzQkKi+gVYZEcy03/
zeLaQzNY683do9abW1MaL9VT5+bsct+0VrtOx7V6bbzGuXvs0luq565ZH6/z19TafQ5j7evsOi7V
SnOCwiJ6RVgkx/LIw+LcQblLr1Zfc7+5NaVxrb7mfnO9Wv0w95tbUxqnhl6pP3ePXXq1+pr7za0p
jdfUa70545p87a7jUq00JygsoleERXIsz2tYLBkOxtS5fq2Xj2MtH+e1tLe2Hu8TLfXSWlpf6qUu
rUv7td7aerxPtFTP5+fjvFYzzi2tqdXTXq2+ZG3urvdJXbpn2k9reW9NPygsoleERXIsjzwssm4p
MHB3R/k5CovoFWGRHEthkWxUYRG9IiySYyksko0qLKJXhEVyLIVFslGFRfSKsEiOpbBINqqwiF4R
FsmxFBbJRhUW0SvCIjmWwiLZqMIiekVYJMeyGBavPnnhwYNOcjuvv/sSYRFdEsLiE8+cKO5rkv15
68NfOTMsvv3OW9Ndv73i4GEnuZ23/+qr0//efPX0kwn0wx//fEtxT5Ps11dff+ndsAgAAADkCIsA
AACoIiwCAACgirAIAACAKsIiAAAAKkzT/wFTqxQMzTFCBAAAAABJRU5ErkJggg==
</data><mime>image/png</mime><width>651</width><height>108</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="ba6f4e14d624e0442e349c6be446ec85" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="651" objHeight="108"><item x="8" y="31" w="64" h="13"><t w="47">Custorrer</t><t w="40">Gust Omer</t><t w="37">Gust已江已胎</t><t w="37">Gust已江已五</t><t w="37">Gust日江已胎</t><t w="37">Gust已江已薯</t><t w="37">Gust已江巳胎</t><t w="37">Gust已江已蒼</t><t w="37">Gust口江已胎</t><t w="37">Gust日江已五</t></item><item x="410" y="32" w="11" h="10"><t w="33">間&lt;</t><t w="32">間《</t><t w="31">AI</t><t w="30">廠</t><t w="30">衣《</t><t w="30">衣&lt;</t><t w="29">吉《</t><t w="29">吉&lt;</t><t w="28">紙</t><t w="28">紐</t></item><item x="423" y="32" w="34" h="10"><t w="33">燈es日</t><t w="31">迁es日</t><t w="31">燈巳ss</t><t w="31">燈es言</t><t w="31">燈巳霎日</t><t w="31">燈橙ss</t><t w="31">燈巳凹日</t><t w="31">燈es吕</t><t w="31">燈巳污日</t><t w="31">燈橙霎日</t></item><item x="18" y="69" w="17" h="6"><t w="36">一AI</t><t w="33">一AR</t><t w="33">- AI</t><t w="31">一宫?</t><t w="31">一言?</t><t w="30">一氯?</t><t w="30">一涯?</t><t w="30">- AR</t><t w="27">-宫?</t><t w="26">-言?</t></item><item x="36" y="66" w="8" h="8"><t w="30">酝</t><t w="29">道</t><t w="27">旧</t><t w="27">鏈</t></item><item x="46" y="69" w="24" h="6"><t w="35">re宫宫</t><t w="34">res宫</t><t w="34">re宫富</t><t w="34">re富宫</t><t w="34">re ss</t><t w="34">res富</t><t w="34">re富富</t><t w="33">re宫塞</t><t w="33">re塞宫</t><t w="33">re富塞</t></item><item x="74" y="66" w="14" h="8"><t w="31"># AI</t><t w="28">, AI</t><t w="28">? AI</t><t w="27">#紙</t><t w="25">Lai</t><t w="24">,紙</t><t w="24">?紙</t><t w="13"># ? ?</t></item><item x="89" y="66" w="8" h="8"><t w="30">酝</t><t w="27">描</t><t w="27">近</t><t w="26">旧</t></item><item x="99" y="69" w="11" h="5"><t w="36">監已</t><t w="34">re</t><t w="34">蒼已</t><t w="33">監巻</t><t w="33">胎已</t><t w="33">監巳</t><t w="31">蔔已</t><t w="31">蒼巻</t><t w="31">蒼巳</t><t w="30">胎巻</t></item><item x="112" y="68" w="18" h="6"><t w="38">言言*</t><t w="38">言言末</t><t w="37">言言束</t><t w="37">言吕*</t><t w="37">言言常</t><t w="37">言吕末</t><t w="36">言且*</t><t w="36">言吕束</t><t w="36">言且末</t><t w="36">吕言*</t></item><item x="18" y="86" w="6" h="6"><t w="34">十</t><t w="28">斗</t><t w="26">半</t></item><item x="26" y="88" w="4" h="5"><t w="39">言</t><t w="35">吕</t><t w="33">且</t></item><item x="33" y="86" w="9" h="7"><t w="34">誡</t><t w="30">敛</t><t w="29">械</t><t w="27">枫</t></item><item x="45" y="84" w="59" h="10"><t w="46">address輪</t><t w="45">address IA</t><t w="44">address 《氯</t><t w="44">address 《敏</t><t w="44">address 《敌</t><t w="44">address 《涯</t><t w="40">addressin</t><t w="39">addr已言言IA</t><t w="39">addr已言言輪</t><t w="39">addresss</t></item><item x="106" y="85" w="11" h="9"><t w="35">討</t><t w="31">誠</t><t w="30">詛</t><t w="30">诞</t></item><item x="119" y="88" w="4" h="6"><t w="31">墓</t><t w="28">劾</t><t w="27">繫</t><t w="24">遵</t></item><item x="127" y="85" w="11" h="9"><t w="29">#犬</t><t w="27">精</t><t w="27">#合</t><t w="25">掐</t><t w="25">编</t><t w="25">韓</t></item><item x="140" y="85" w="11" h="9"><t w="34">改</t><t w="32">套</t><t w="32">破</t><t w="29">鈕</t></item><item x="153" y="88" w="18" h="6"><t w="33">es嚣</t><t w="33">es蘿</t><t w="33">es $</t><t w="30">悲ss</t><t w="30">籍ss</t><t w="30">悲嚣嚣</t><t w="30">母ss</t><t w="30">籍嚣嚣</t><t w="29">悲嚣蘿</t><t w="29">悲嚣$</t></item><item x="172" y="84" w="15" h="10"><t w="34">家》 #</t><t w="33">家妇</t><t w="33">家》 ,</t><t w="33">家》 ?</t><t w="32">* 》 #</t><t w="32">*妇</t><t w="32">家酝</t><t w="32">家卜</t><t w="31">繼》 #</t><t w="31">*酝</t></item><item x="198" y="85" w="26" h="8"><t w="59">void</t><t w="34">隨OID</t><t w="34">隨釘id</t><t w="33">隸OID</t><t w="33">隸釘id</t><t w="33">隨纽id</t><t w="33">邓OID</t><t w="33">隨臼id</t><t w="33">鞍OID</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
iVBORw0KGgoAAAANSUhEUgAAAl8AAAFoCAYAAABpKJ6VAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAALWwSURBVHhe7d0HgCxF1bdx3u81ZwUkiYICAhIF
JGcJAvISRILkDEqSIAgIkiVnkJyTknMOEpQkkiRIDpIkg4QL9fWvZmtv32F2Z/fe3b27d8+D5Z3t
nunp6a6u+tc5p06Nl8aAjz/+OH380Ufpv+9/kK596L609hl/TD88cOc0/f47pJkO+G2a7eAd05yH
7pTmO2znNN/hO6cFjvxdWugoZZe00NFVqf5d4Mhq3xE7p7mr/T+q3jvrwb9NM1Wfn36/HdJsB/0u
bXr2iemeJ5/I3xUEw4UPPvggPfzww+nvf/97+te//pX++9//duzpO55//vn08ssvp4+qZ3hs8O67
76Znnnkm/ec//0kjRozo2No12oBXXnklX48XXnghvfPOO2Pt3IORqEOPPfZY+ve//93reuozPvvS
Sy+l9957r2PrwPHaa6+lp59+Otel6GOC7lA/PhrxUS4ff/Rx+u8HH6aDH70nzXjNWelbl52cvnXp
SV2WyS45cZSCMRZfI6qTGOGEqn9feuuNdN7f/5Y2OvuEtPARe6eZD9gxzbDfb9IMB2yfZj7wt+mH
lRib4xBlpzR7JbRmr17/sBJbMx/02/SD/bfPou2HB+2UljjmD2mb809Pl957d3r9nbdzAzvio/aN
cxCMKzz33HNp9tlnT+ONN15afPHF0/3339+xp2949tln0+qrr57WXnvtdMMNN3RsHVjuvPPO9NOf
/jRtsMEG6corr8xirDvef//9tP/++6fpp58+rbjiiumyyy5LH374YcfevuXCCy9MJ510Urr44os7
tnTPX//61/x+haAYaFy7v/3tb/l877vvvn4R611x0EEH5bq63HLLpeuuu65ja8/YeOON00wzzZTW
X3/9Pqnjr7/+eue9O++88zq2tsY1OuKII9LCCy+c9tprryzCQoAFXaFmfETzVANFmufDqrz74Qfp
kucfT8veckn6diXAJrv0xLbCq2/El1L9Xz6hqqi4ygtvvJ5ufPSf6eibr01bXnBaWuGkQ9NCR+yV
LVk/PHjnNPvBv0tzVK9nr8qch+ySFjl67/Tzkw9L219ydjr59r+kO556LP3nrTcrwVUpzI+rQtz5
oiAYJvSn+GKp2HnnndM3vvGNfPzf//73HXsGDgOqiy66KH35y1/O57DRRhtl60d3EBjLL798fv/X
v/71dOKJjUasP5hxxhnz98w222wdW7rnl7/8ZX6/cv3113dsHTjUl3XXXTdNNNFEadNNN83ieqDY
Yost0qc//en82//85z93bO0ZCyywQP7cxBNPnO66666OraPPQw891Hnvpppqqo6trWFBJf6913W7
7bbb+lx8uQ877rhj2mqrrQas/POf/+z49qAvaeidj7MWYf1q6JOP0/sfjUi3vfJ8Wu1vV6RvZ7F1
QhZhk/Wn+EI+ocbLTvztBN/94INsDfvXyy+kvz/9ZLrh0QfSNQ/dl659+P50bfX62kceSDc+9mC6
+9kn0uOvvJj+885b6YMRjZFsEXL+q17kbUEwXOgv8cW9cvjhh6cJJpggH1v5/ve/n0f/7QoLR1/x
9ttvp3322afzHA477LC21po33ngjfeUrX8nvn2uuubK1qb8YU/FldPyXv/wlXzOu1f7miSeeSD/5
yU/y96+wwgrp8ccf79jTv3D/sniV397bjr+Ir0kmmSTde++9HVtHn56KLxbTc889t1P8r7rqqv0i
WIUNGCiU6zMQ5Yorruj49qA/yJqnU580+KASYne/9mJa/fYr0+SXEV5Ka+GlYIzFVyvKyY34uFKH
H4+oFOKHeaT7UfV357+lUI9Kdl02lGS9BMFgQqcqRomLoreFZUcsV0/oa/HlWeIO22WXXUa7M2BR
6St0dEsssUQ+7pRTTpkFS7vnXafi/f/zP/+TrTzidfqLMRFf11xzTbrqqqvSLLPMkj772c9mq95T
Tz3Vr+3ZAw880HnOv/rVr9paEfsKrk5C2PcS9D2J3SuwPM0666z5s1NMMUWfuJB7Ir7cB89XEauK
++S5YA3uqhgs9Ja6+Prc5z6XvvWtb7UsE044Yfrf//3f9PnPfz5985vfbPme7sqXvvSlzt8S4mvg
EQM2YsQH6bE3/5PWu/PaNHklvCa9+IQ06SXKqMLLdvSL+IIKnl2G1X/ZTFedXN7W9J99+X0doiw3
UP6Xt4f4CgYXRvrrrLNOZ0PXm7LYYovleJye0Jfii+C7/fbb02qrrZaPp6Gec8450zLLLNNlmXfe
edMXvvCFznPnFmIx6wsMsm6++ebOTok4efHFFzv2do3YMO9nJTnuuOM6tvYPY2r58ns233zz/Bs/
85nP5Nfuabs27c0338wxeFyyvSksbF/96lfz96+88srp7LPPbvm+duWmm27qVbzYySefnO+H711l
lVW6/X233HLLKN919NFHZ+HtswRHfV+9ELKsnj2hJ+JL/TvhhBPye3pTDFx6S118EXut8HyeddZZ
afzxx09zzz13Ov/889vGPzbz61//uvM8Q3wNPA1D0odZxzz1zptpzduvTBNffFyapCa+shjrKOg3
8RUE4yJDTXxxPx166KFphhlmyMf62te+li1YjzzySMc7PonfKA7MaN9nCK+DDz44BzP3BQLnN9lk
k3xsI/7jjz++rdXDLMfvfOc7nedDiO2+++5ti9/SFTp0QdmtAuTHVHzBPbSdiCXAtt1227aWzwcf
fDAHoJdjDXRR55x3K1j09t5771Gur7rJYuOz888//yj7SnF/33rrrU4XY29Lb1ySPRFfrJDlGnse
fvazn+W4rOZiEkCpc8qpp57acYSe0058Eaue0SWXXDK/51Of+lS2sLlevSHE1+DB8OP+115Oi9/0
50qAnZAmq4muEF9BMJqwCtxxxx3pT3/6U4/Ksccem773ve/lRlEjT8SstdZaebZed2XppZfubLQF
AxNutjtGTyxQBIWZXD5XLCKTTjpp2m+//bqNbeEe3WabbTqFl8+aOSZGa0y4+uqr03rrrZd/gxgh
o3zHF8Ol067/dkXnVxdF55xzziiWuJ4WnV8rxGERRt/+9rezEGx2YfaF+AKR+3//939ZoPitZ555
Zsee1gxm8bXddttlt1irz3VX5phjjnwvB4P4EvO44YYbdh57wQUXTP/4xz869o7EYMC98sx439RT
T51FW29pJ76IcTMtuSS9Rz1xvcTtNT8T9cKKLUVHIcTX4IH44oa86aXn0hzXnp2+edGxIb6CYKCR
S+uHP/xhbhTFKRE2pTEenSLeieWtFdwpOnszGcUbCSb2/vJZM9Imm2yy3Cl1VYiRusjRGdjW6r3K
Qgst1K0VrXDMMcdkEVmO265we4oJgjiipZZaKv2///f/8u/RUTnHrgrrQTlOV+KL9Y2bzO9jfTvy
yCPz9Sv0lfhyTLP4ihWTm018Vlc4L528a9rTcumll+bf7fhEO3FRxLO6QpC0+lyrQnx3ZYXcaaed
smgu15k1r/xmdatsby7ENQskwVv/LmKuTKD4zW9+M8q+emEZapUDjNXokksuGaU+qqvlvJxT2U7M
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
m77ddildcknHjiFMiK/2PPLII2mxxRZLs8022yfKggsumI4//viOd44eRxxxRG4Tnn322Y4trZlr
rrnSb6wDN4x55ZVX0u9+97v0hz/8Ib366qsdWxs8/PDDaaONNuq8N5NNNlm3AozoWmuttdIvf/nL
9MILL3Rs7Tmvv/562mabbdIee+yRXwdDgwEXX+uvn9IPfpDSHXd0bOzAvv/8p7HUkEJQffhhY58B
Qdn+xBMpvfdeY/tjjzW23XRTY43IbbdN6b//TWnDDVPViDSOd+mlKX3/+yldfHHjM0GDEF/9i7r3
4ION+vmvf41MJqxfK3X5qaeMWlN69NHGYvIon1OP33ln5DGefrqRUNhzYlmuJZdM6aOPGstxzT9/
4z1DmRBf7fnHP/6RO2kd9AdVZSjl5ary2P5AixHtjTfemGaeeeZRyuRVY/mZz3wmfetb3xpl+9FH
H121r0+ka6+9tqpbH1X1752qXt03Sjn77LPTD3/4w3TPPfe03PcvlX0s89prr1XPzYPVM9fLDN69
4Pbbb0/77rtvFsTE1o9+9KP07W9/O1/HZZZZJl155ZVVP/Vevv4bb7xxvp5488038/vr1+2SavQ0
99xzp6uuumqU7drolVdeOa255ppVf1h1iF1AcG2wwQbprLPOqtqHqoEIhgSDRnzplKr6U1XilH78
45RWWCGlW29tbNfZLL10SosvnqpK6qQbi25bZHvhhRvrPU44YUN8/e1vKc0xR6pGJY3OSwc300yN
dSCDkYT46j/eeitVI9FG/VxuuZSmnjql665riLBVV01V49xYk3S++VK6/vrGMlk77ND4nOW21GVr
mh50UKPuqvc+c8MNKb30UkqTTjqyPhtUGFycc87IwcpQZFwQX8SRDvDfTJP9gOMvXlUGIunUU0/t
LH/84x/TT3/60/TPf/6z451dQ1ztvvvuubPfbLPN0uOPP96x55MQFjqHevnyl79c1eFV8/3ync37
WWCItlYQHeWcL7vssqouV5W5HzjjjDPS17/+9artrxr/foCb789//nO64IIL0htvvFE9gxdXg/xL
sxh78skn8+tddtklWxB///vfp6233rrjk412d8stt+y8XqusskoWwTtUDcB22203yrUkqN0flrXH
WBo6uPzyy0e5/8ccc0zVDy6cfvWrX42yXXFu4Y4cnAwa8cU1OMkkKmdjtM+NuN56RhiN9SCPPLLR
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
xx/PC1MrL774Yv6Mz7/77rvpoIMOSquttlp688038/511103v19G+SOPPDKdccYZ+dg9IcRXMBwJ
8RW0I8RXEIwDEFgnn3xyWmmlldLSSy+d1ltvvXTfffflZXeOPfbY/JBbemfeeedNV199dVp22WXz
OohnnnlmWmGFFdKcc86ZTj/99PT000+nmWeeOU0++eTp7LPPThdffHHac889sxDDbbfdlrbeeuts
PesJQ1l8VZciXXVVSs8917GhBSNGpPTPf6ZK9HZs6IKnnkrp738nflO67rpUieOOHcE4SYivoB0h
voJgHOD2229Pa6+9drr33nuzVeqQQw5Jv/zlL7PQIp64GL1ea6210hNPPJHF11/+8pf0m9/8Jl12
2WXp0UcfzRYt1q+TTjopr5eILbfcMouwDz74IP/92GOPpb333juLsJ4wlMXXCSekNOGEqbouHRta
cNNNKS2zTEoXXdSxoQUvvpjS5pun6lqn6jqntOCCKe23X8fOYJwkxFfQjhBfQTAOcFHV+y+66KKV
EFgmW78WWmih/Dehtf3226drrrkmC6lLLrmkU3xdcMEFaeedd05/+9vfOo7ScF3Wxdcqq6yS/vSn
P3U2Es8//3zaY4890rnnnpv/bsfYFF+VpqwEaEoPPJAq8ZnSuuumdNppYthS2m67Rtl441Rdr5Qu
vrjxmbLPtjXWSOnrX2+Ir9dfT+nIIxvblaOOSunmm1OaY46UPv/5lH72s5TuuCNV1zelddZpvOf0
0xvHvP76lGadNaVTT238veOOKX3/+41zCsZNQnwF7QjxFQTjANyDm2++ebrhhhvSQw89VAmOB7KV
ysO93377ZZG1+OKL59iuIr4IKJavv/71r9la9t///vcT4muzzTZLF154YWcj8dxzz+XjsZb1hLEp
vg45JKUppkjVNUnpwQdT+sY3Utp224ZIIoZYoKo+Mm20UUpTTZXSnXem9PvfpzTbbA3BtdZaKX32
sw3BRpwtskiqvqdxjBlnTOnuuxvWrIkmSun44xvWL2KsutTpmGM0rimdeWZKBx+c0g9/2DgPEGjj
j984VjBuEuIraEeIryAYBxCDJTCecLrlllvSjjvuWAmJSklUEFdzVKqA0Hr77bc7xdc999yTRZkZ
jKecckqO/dIYnHXWWWnFFVdMTz75ZDr00EPTcccdl4UZyme4KXvCYBZf1cfSa6+ldPXVDTG0++4p
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
PuXjjz9OF154YXY5jjfeeGmCCSZIJ598ct7eH+y0007poosu6vgrCMY+Ib6CdoT4CoKgz/nvf/+b
1lhjjfSZz3wm/eQnP0lvvfVWx56+5+9//3t65plnOv4KgrFPiK+gHSG+giDoF2677bY05ZRTpquu
uqpjSxAMD0J8Be0I8RUEQb+gYTn77LPTe++917ElCIYHIb6CdoT4CoJhjlgsMxTPO++89Mtf/jIt
scQSaeaZZ+6T8oMf/KDl9nGpzDHHHGnVVVdNe+65Z57V+f777/dbfFswNAjxFbQjxFcQDHMeeeSR
PGNwgw02SDfddFP697//3bEn6Akse/fff3865phj0tprr51OOOGEfo1xCwY/Ib6CdoT4CoJhzEsv
vZS23377dOihh+YUEcHow9pFhG200Ubp8ssvTyNGjOjYEww3QnwF7QjxFQTDGCKB+HriiSfCVdZH
yDm22Wab5RmfwfAkxFfQjhBfQTCMOeKII3IJN1nf8dxzz6VFFlkkrukwZriKr3/+8585wXKdlVZa
Kb355psdf41k8803zyEPBn2tClpt76pAzOq//vWv9J///CetttpqedtgJcRXEAxjdthhh3Taaad1
/BX0FTPOOGO/LacUDH6Gq/i6++670//93/91/DWSpZZaquPVSH7605+mf/zjH2muueZKn//859Ms
s8ySi6TMJWnyyy+/PMq+5jLNNNPkRM7bbLNNfr/v4fp/8cUX80SYwUyIryAYxvSX+Hr33XdzPNlH
H33UsaV7jJjvvPPO9MEHH3RsaY+Gq69cew899FDHq76B+LrxxhvTiSeeGGUYlq233nrYi6+//e1v
n7gu1113XRZHXhNPu+++e57g88Mf/jB/Br/61a9GEV+zzTZbft2K22+/vUvxJcdg/bsHWyLmEF9B
MIwZXfF18cUXp3PPPTcH6RNZGtG6pUcDqBG99957O7Z0jxQNu+66a7rgggt6HPj/wAMP5O/12cK1
116bUz5o0DXcPWXZZZdNf/rTnzr+GnOIL9aPgw46KMowLDvuuGM65JBDOmrD8EDsKFcfUSFtzfXX
X/+J60JU3XXXXfm1NDTbbrttev755zvFF3H2+9//Pj322GP577r4sm+LLbboLGYZdyW+nEv5Tha2
FVdcMT3++OP5PYOFEF9BMIwZXfElrsLyQQTYa6+9lkXQJptskl5//fW8v8SSGYHWefTRR9Omm26a
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
</data><mime>image/png</mime><width>607</width><height>360</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="2084d20f7cb2fe71e7f05cd5e7f8e758" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="607" objHeight="360"><item x="204" y="0" w="298" h="33"><t w="61">对象的状态转换图</t><t w="59">对象的状态转换圈</t><t w="58">对象的状态转换囡</t><t w="52">对象前状态转换图</t><t w="51">对象的状态转摸图</t><t w="51">对蒙的状态转换图</t><t w="37">对象的</t><t w="35">转换图</t><t w="34">转换圈</t><t w="32">状态</t></item><item x="139" y="53" w="23" h="7"><t w="47">new</t><t w="30">n@w</t><t w="28">甦巻审</t><t w="28">载巻审</t><t w="28">甦巻钾</t><t w="28">载巻钾</t><t w="27">甦巻畔</t><t w="27">甦巻嚇</t><t w="27">载巻畔</t><t w="27">载巻嚇</t></item><item x="165" y="50" w="23" h="11"><t w="35">语句</t><t w="33">语甸</t><t w="32">语曰</t><t w="32">语韌</t><t w="30">谓甸</t><t w="30">语旬</t><t w="30">谓句</t><t w="29">谓曰</t><t w="29">谓韌</t></item><item x="422" y="54" w="9" h="9"><t w="19">描</t><t w="19">起</t><t w="19">擋</t><t w="17">撞</t></item><item x="432" y="55" w="30" h="9"><t w="32">壤回收</t><t w="30">壤圈收</t><t w="30">氧回收</t><t w="30">壤闆收</t><t w="30">氧圈收</t><t w="30">壤圍收</t><t w="30">氧闆收</t><t w="30">氧圍收</t><t w="30">堰回收</t><t w="29">堰圈收</t></item><item x="240" y="66" w="60" h="13"><t w="43">临时状态</t><t w="36">!責时状态</t><t w="36">!昏时状态</t><t w="35">!崙时状态</t><t w="35">!腹时状态</t><t w="35">1責时状态</t><t w="35">1昏时状态</t><t w="34">1崙时状态</t><t w="34">1腹时状态</t><t w="30">临界状态</t></item><item x="6" y="86" w="23" h="10"><t w="42">get()</t><t w="41">get口</t><t w="33">get)</t><t w="31">El 0</t><t w="29">El目</t><t w="29">et 0</t><t w="28">et目</t><t w="27">载10</t><t w="26">EM</t><t w="26">载1 0</t></item><item x="6" y="104" w="7" h="8"><t w="32">L</t><t w="26">t</t><t w="14">且</t></item><item x="12" y="105" w="13" h="7"><t w="45">回</t><t w="42">田</t><t w="37">阳</t><t w="37">曰</t><t w="34">旧</t><t w="20">坟</t><t w="20">Lo目鑽</t><t w="20">Lo目櫃</t><t w="20">Lo目疗</t><t w="19">志国</t></item><item x="24" y="104" w="14" h="9"><t w="36">d()</t><t w="30">11</t><t w="28">1 1</t><t w="26">11 -</t><t w="26">IL</t><t w="25">! 1</t><t w="25">11 ,</t><t w="24">II</t><t w="22">」 Li</t><t w="22">」 II</t></item><item x="7" y="121" w="13" h="10"><t w="37">數!</t><t w="36">數1</t><t w="35">數/</t><t w="33">敷!</t><t w="33">塾!</t><t w="32">敷1</t><t w="32">豊!</t><t w="32">塾1</t><t w="31">敷/</t><t w="31">豊1</t></item><item x="21" y="121" w="35" h="10"><t w="31">質縫9損</t><t w="30">質鏈9損</t><t w="30">質堑9損</t><t w="30">質蜢9損</t><t w="30">質縫9嫂</t><t w="30">質縫9說</t><t w="30">質鏈9嫂</t><t w="30">質堑9嫂</t><t w="30">質堑9說</t><t w="30">質縫9景</t></item><item x="49" y="120" w="8" h="12"><t w="32">D</t><t w="32">口</t></item><item x="7" y="138" w="8" h="10"><t w="39">數</t><t w="36">寰</t><t w="36">敷</t><t w="35">竅</t></item><item x="15" y="140" w="9" h="8"><t w="26">裝</t><t w="21">裳</t><t w="21">喪</t><t w="20">刚</t></item><item x="21" y="140" w="10" h="5"><t w="27">吋</t><t w="27">纯</t><t w="25">电</t><t w="21">忱</t></item><item x="25" y="140" w="11" h="8"><t w="29">妞-</t><t w="27">妞,</t><t w="26">嫡-</t><t w="26">储-</t><t w="25">嫡,</t><t w="25">颊-</t><t w="25">储,</t><t w="25">颊,</t><t w="25">伴</t><t w="21">難</t></item><item x="37" y="138" w="18" h="10"><t w="32">噸19</t><t w="31">彎19</t><t w="30">叩19</t><t w="30">戚19</t><t w="30">噸1 9</t><t w="29">赞軸</t><t w="29">赞助9</t><t w="29">噸! 9</t><t w="28">赞或9</t><t w="28">彎1 9</t></item><item x="57" y="138" w="13" h="10"><t w="34">螃!</t><t w="32">螃1</t><t w="32">零!</t><t w="31">零1</t><t w="30">贿!</t><t w="30">螃/</t><t w="30">螞!</t><t w="30">贿1</t><t w="30">螞1</t><t w="29">零/</t></item><item x="71" y="138" w="9" h="10"><t w="30">鯨</t><t w="29">肚</t><t w="29">勳</t><t w="29">馴</t></item><item x="75" y="140" w="10" h="8"><t w="26">掌</t><t w="26">蒙</t><t w="25">肇</t><t w="23">門</t></item><item x="86" y="140" w="6" h="8"><t w="34">LI</t><t w="33">il</t><t w="33">II</t><t w="26">赞</t></item><item x="92" y="139" w="10" h="10"><t w="45">111</t><t w="36">11 1</t><t w="36">11 !</t><t w="35">1 11</t><t w="32">1 1 1</t><t w="32">1 1 !</t><t w="32">1 ! 1</t><t w="32">1 《 1</t><t w="31">1 ! !</t><t w="31">1 《 !</t></item><item x="7" y="156" w="12" h="10"><t w="36">數!</t><t w="36">數1</t><t w="36">數/</t><t w="35">製!</t><t w="35">製1</t><t w="35">寰!</t><t w="35">敷!</t><t w="35">製/</t><t w="34">寰1</t><t w="34">敷1</t></item><item x="21" y="158" w="8" h="8"><t w="35">徵</t><t w="34">數</t><t w="33">散</t><t w="30">蝕</t></item><item x="30" y="158" w="6" h="8"><t w="25">素</t><t w="21">東</t><t w="20">坡</t></item><item x="37" y="156" w="10" h="10"><t w="29">龔</t><t w="26">羹</t><t w="26">蛙</t><t w="25">触</t></item><item x="48" y="156" w="11" h="10"><t w="32">! 31</t><t w="32">! ? 1</t><t w="31">! 3 !</t><t w="31">! 3 1</t><t w="30">IE !</t><t w="30">IE 1</t><t w="30">! El</t><t w="29">犧!</t><t w="28">犧1</t><t w="28">蟬!</t></item><item x="60" y="156" w="15" h="10"><t w="36">毁11</t><t w="35">敗11</t><t w="35">毀11</t><t w="35">擎11</t><t w="34">毁! 1</t><t w="34">毁1 1</t><t w="34">毁! !</t><t w="33">敗! 1</t><t w="33">毁1 !</t><t w="33">毀! 1</t></item><item x="7" y="173" w="12" h="10"><t w="37">數!</t><t w="36">數1</t><t w="36">敷!</t><t w="35">敷1</t><t w="33">製!</t><t w="33">囊!</t><t w="33">製1</t><t w="32">囊1</t><t w="25">鯽</t><t w="25">毀</t></item><item x="21" y="175" w="8" h="8"><t w="30">徵</t><t w="28">寡</t><t w="28">製</t><t w="27">翟</t></item><item x="30" y="175" w="17" h="8"><t w="32">素讓</t><t w="29">園讓</t><t w="28">素義</t><t w="28">素鞍</t><t w="28">/ -讓</t><t w="27">累讓</t><t w="27">/ ,讓</t><t w="27">園義</t><t w="27">皆讓</t><t w="26">園鞍</t></item><item x="48" y="173" w="16" h="10"><t w="33">gli 》</t><t w="32">gl ! 》</t><t w="31">gli ,</t><t w="31">gl ! ,</t><t w="29">致Li 》</t><t w="28">致! ! 》</t><t w="28">致Li ,</t><t w="28">致1 ! 》</t><t w="27">箏Li 》</t><t w="27">致! ! ,</t></item><item x="192" y="105" w="12" h="7"><t w="28">回</t><t w="28">制</t><t w="27">嗣</t><t w="26">辅</t><t w="26">拥</t></item><item x="209" y="103" w="14" h="10"><t w="34">时｝</t><t w="13">SA veil</t><t w="13">save IL</t><t w="13">SA覽藝IL</t><t w="13">SA覽El 》</t><t w="13">SA覽ell</t><t w="13">SA覽籲IL</t><t w="13">SA覽叠IL</t><t w="12">save 1 》</t><t w="12">SA幫藝IL</t></item><item x="193" y="123" w="20" h="9"><t w="32">歸聽</t><t w="32">蒙聽</t><t w="32">歸聳</t><t w="32">蒙聳</t><t w="32">歸擊</t><t w="32">蒙擊</t><t w="32">钝聽</t><t w="31">钝聳</t><t w="31">歸贈</t><t w="31">蒙贈</t></item><item x="215" y="121" w="10" h="10"><t w="39">數</t><t w="37">敷</t><t w="32">囊</t><t w="31">致</t></item><item x="226" y="121" w="13" h="10"><t w="33">!檀</t><t w="32">!糖</t><t w="32">!塘</t><t w="32">!槍</t><t w="30">1檀</t><t w="29">1糖</t><t w="29">1塘</t><t w="29">1槍</t><t w="24">婉</t><t w="23">蝉</t></item><item x="240" y="121" w="10" h="10"><t w="20">彙</t><t w="18">業</t><t w="17">鰻</t><t w="17">壟</t></item><item x="245" y="121" w="20" h="10"><t w="30">缀,</t><t w="27">墩,</t><t w="27">蝦,</t><t w="26">對,</t><t w="18">蜘</t><t w="15">蜂</t><t w="15">墩</t></item><item x="193" y="140" w="20" h="6"><t w="37">pers</t><t w="34">章er釁</t><t w="34">章瞪「釁</t><t w="33">章瞪RS</t><t w="33">章er曹</t><t w="33">章瞪「曹</t><t w="33">章er譽</t><t w="33">章瞪「譽</t><t w="33">章瞪「醫</t><t w="33">章er醫</t></item><item x="215" y="138" w="18" h="8"><t w="32">蜥纲</t><t w="30">蜥绢</t><t w="30">緒纲</t><t w="30">蜥勵</t><t w="30">蜥哟</t><t w="29">媳纲</t><t w="29">連纲</t><t w="29">緒绢</t><t w="28">媳绢</t><t w="28">連绢</t></item><item x="192" y="156" w="15" h="7"><t w="82">me</t><t w="29">設</t><t w="27">电</t><t w="26">啃</t><t w="25">亢</t></item><item x="206" y="156" w="10" h="9"><t w="41">叩</t><t w="40">咱</t><t w="25">哺</t><t w="25">呻</t><t w="23">咆</t></item><item x="215" y="154" w="13" h="11"><t w="50">e(I</t><t w="14">毓0蝉</t><t w="14">毓0軸</t><t w="14">毓章蝉</t><t w="14">毓章軸</t><t w="14">毓0轉</t><t w="14">毓頹蝉</t><t w="14">毓0帕</t><t w="14">毓頹軸</t><t w="14">毓章轉</t></item><item x="316" y="106" w="10" h="10"><t w="50">1.</t><t w="32">1 。</t><t w="30">1 ,</t><t w="29">i</t><t w="27">氮</t><t w="27">氯</t><t w="26">氫</t><t w="26">釘</t></item><item x="338" y="103" w="47" h="14"><t w="46">是否在</t><t w="38">是苦在</t><t w="35">是否崔</t><t w="35">是否态</t><t w="34">是否盔</t><t w="31">是否雀</t><t w="19">是否過</t><t w="19">是否会</t><t w="19">是否願</t></item><item x="388" y="105" w="47" h="11"><t w="70">Session</t></item><item x="439" y="103" w="46" h="14"><t w="37">缓存中</t><t w="36">綾存中</t><t w="35">緩存中</t><t w="34">绫存中</t><t w="34">缓存申</t><t w="34">綾存申</t><t w="33">缓奋中</t><t w="33">綾奋中</t><t w="32">緩存申</t><t w="32">绫存申</t></item><item x="316" y="124" w="11" h="9"><t w="49">2.</t><t w="31">2 。</t><t w="30">2 ,</t><t w="28">志</t><t w="22">轰</t><t w="22">瓦</t><t w="12">i</t></item><item x="339" y="121" w="14" h="13"><t w="41">在</t></item><item x="355" y="121" w="138" h="14"><t w="43">数据表中是否有对应</t><t w="37">数据表中傷否有对应</t><t w="36">数据表中是否有反应</t><t w="36">数据表中是青布对应</t><t w="36">数据表中是否有效应</t><t w="36">数据表中是否願对应</t><t w="36">数据表中是否須对应</t><t w="36">数据表中是否会对应</t><t w="36">数据表中是否達对应</t><t w="23">在数据表中是否有对应的记录</t></item><item x="496" y="121" w="44" h="13"><t w="42">的记录</t><t w="38">的記录</t></item><item x="348" y="191" w="35" h="10"><t w="41">delete()</t><t w="33">delete)</t><t w="29">El鐵1</t><t w="29">El敏1</t><t w="29">El销1</t><t w="28">El綴1</t><t w="28">et鐵1</t><t w="28">et敏1</t><t w="28">et销1</t><t w="28">et綴1</t></item><item x="510" y="188" w="20" h="9"><t w="32">垃圾</t><t w="28">1臺圾</t><t w="27">1麼圾</t><t w="27">1童圾</t><t w="27">1臺堰</t><t w="27">1臺氧</t><t w="27">1宴圾</t><t w="27">1臺塘</t><t w="26">1麼堰</t><t w="26">1童堰</t></item><item x="531" y="188" w="19" h="9"><t w="34">回收</t><t w="33">回啦</t><t w="33">回歌</t><t w="23">回? ?</t></item><item x="425" y="197" w="60" h="13"><t w="43">删除状态</t><t w="40">删除状志</t><t w="35">删險状态</t><t w="35">紳1除状态</t><t w="35">紳!除状态</t><t w="35">紳」除状态</t><t w="34">剔1除状态</t><t w="34">紳1險状态</t><t w="34">挪1除状态</t><t w="34">剔!除状态</t></item><item x="578" y="193" w="22" h="20"><t w="25">印</t><t w="23">榻</t></item><item x="251" y="198" w="60" h="13"><t w="40">久化状态</t><t w="37">久化状志</t><t w="37">久化伏态</t><t w="36">久化伏志</t></item><item x="227" y="237" w="7" h="6"><t w="34">寧</t><t w="31">夢</t><t w="31">曰</t><t w="30">翻</t></item><item x="238" y="235" w="17" h="8"><t w="30">ic II 》</t><t w="28">ic II ,</t><t w="28">輯位</t><t w="28">ICI位</t><t w="28">im位</t><t w="28">崩位</t><t w="28">ic纲</t><t w="28">ICI 1 》</t><t w="28">im 1 》</t><t w="28">ic LI 》</t></item><item x="226" y="253" w="7" h="7"><t w="46">C</t><t w="25">歌</t><t w="23">载</t><t w="22">is 1</t><t w="22">II 1</t><t w="21">LI 1</t><t w="21">LS 1</t><t w="20">II 」</t><t w="20">is 」</t><t w="20">II ,</t></item><item x="232" y="252" w="10" h="8"><t w="38">阳</t><t w="24">霸Lo</t><t w="24">载Lo</t><t w="24">!穀</t><t w="24">!缪</t><t w="24">Cl载</t><t w="24">载1载</t><t w="24">霸1载</t><t w="24">Cl 。</t></item><item x="246" y="252" w="14" h="9"><t w="40">剖｝</t><t w="28">目IL</t><t w="27">目II</t><t w="27">目1 !</t><t w="27">目1 1</t><t w="27">目《 !</t><t w="26">目《 1</t><t w="26">目1 ,</t><t w="26">目11</t><t w="26">时!</t></item><item x="226" y="271" w="4" h="6"><t w="28">截</t><t w="26">载</t><t w="25">嶽</t></item><item x="232" y="269" w="7" h="8"><t w="29">誇</t><t w="28">路</t><t w="27">跨</t><t w="26">熔</t></item><item x="240" y="269" w="15" h="9"><t w="29">廬損</t><t w="28">廬1 !</t><t w="28">廬纲</t><t w="28">廬矮!</t><t w="28">廬槽</t><t w="27">廬哟</t><t w="27">吕1 !</t><t w="27">吕矮!</t><t w="27">吕損</t><t w="27">吕纲</t></item><item x="295" y="237" w="28" h="10"><t w="46">updat</t><t w="27">遵檯1</t><t w="27">遵吕1</t><t w="26">櫃檯1</t><t w="26">肋章</t><t w="26">遵涯1</t><t w="26">遵矗1</t><t w="26">櫃吕1</t><t w="26">遵ai</t></item><item x="323" y="237" w="10" h="10"><t w="34">叫</t><t w="30">巻il</t><t w="28">瞪il</t><t w="28">軀il</t><t w="27">。 il</t><t w="22">El 1</t><t w="22">El !</t><t w="22">巻? 1</t><t w="21">巻? !</t><t w="21">ell</t></item><item x="332" y="237" w="4" h="10"><t w="63">l</t><t w="61">I</t><t w="50">1</t></item><item x="295" y="256" w="20" h="8"><t w="28">鶴饗</t><t w="26">鶴選</t><t w="26">鶴變</t><t w="26">鶴贈</t><t w="25">鯨饗</t><t w="25">鯨選</t><t w="24">鯨變</t><t w="24">讓饗</t><t w="24">鯨贈</t><t w="24">讓選</t></item><item x="317" y="255" w="15" h="9"><t w="33">費IL</t><t w="33">像IL</t><t w="32">曼IL</t><t w="31">熏IL</t><t w="30">費II</t><t w="30">像II</t><t w="30">曼II</t><t w="28">熏II</t><t w="28">費! !</t><t w="27">像! !</t></item><item x="333" y="255" w="34" h="9"><t w="30">壕攀90</t><t w="29">壕剩90</t><t w="29">壕蝉90</t><t w="29">壕鯽90</t><t w="28">壕剩9 0</t><t w="28">壕攀9 0</t><t w="28">壕蝉9 0</t><t w="28">壕鯽9 0</t><t w="28">據剩90</t><t w="28">據攀90</t></item><item x="295" y="271" w="36" h="10"><t w="36">merge()</t></item><item x="412" y="247" w="5" h="7"><t w="28">鑽</t><t w="28">嬪</t><t w="26">近</t><t w="25">召</t></item><item x="418" y="247" w="7" h="7"><t w="32">鎧!</t><t w="31">鎧1</t><t w="31">脅!</t><t w="29">脅1</t><t w="29">敬!</t><t w="29">叠!</t><t w="28">敬1</t><t w="27">叠1</t><t w="25">创</t><t w="23">钮</t></item><item x="426" y="247" w="20" h="9"><t w="29">瞻鳴0</t><t w="27">瞻嗚0</t><t w="27">勻鳴0</t><t w="27">瞻祕0</t><t w="27">勻嗚0</t><t w="27">叠鳴0</t><t w="27">勻祕0</t><t w="27">叠嗚0</t><t w="27">。鳴0</t><t w="27">瞻。 0</t></item><item x="239" y="317" w="30" h="30"><t w="18">E</t><t w="18">匡</t><t w="16">庄</t><t w="16">臣</t><t w="14">应</t></item><item x="253" y="326" w="60" h="13"><t w="42">游离状态</t><t w="38">游萬状态</t><t w="38">游高状态</t><t w="38">游禹状态</t><t w="30">游萬伏态</t><t w="28">游高拔态</t><t w="21">亘至</t><t w="17">游离态态</t></item><item x="313" y="318" w="15" h="29"><t w="15">1</t></item><item x="515" y="323" w="8" h="9"><t w="25">1進</t><t w="25">1臺</t><t w="24">1淮</t><t w="23">!進</t><t w="23">!臺</t><t w="22">!淮</t><t w="22">擅</t><t w="21">LD</t><t w="20">穀</t><t w="20">垃</t></item><item x="525" y="323" w="10" h="9"><t w="30">誤</t><t w="27">報</t><t w="27">摯</t><t w="26">额</t></item><item x="537" y="323" w="18" h="9"><t w="33">回獲</t><t w="32">回機</t><t w="31">回糊</t><t w="31">回挠</t><t w="28">田獲</t><t w="28">田機</t><t w="28">田糊</t><t w="28">田挠</t><t w="28">韻獲</t><t w="27">韻機</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
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
8uBVYrxdgxTV+jbmahC0XpYHy5fimsoxMesbmeRkNEVkkpOxUYKR520Q9+KlaRsSvizJycioBC8F
NCakhmKeEixnutZOu1V5i3ZGxrpEJjkZGRsYeBcEDPutpFp/LykjIyNjY0QmORkZGRkZGRlNEpnk
ZGRkZGRkZDRJZJKTkZGRkZGR0SSRSU5GRkZGRkZGk0QmORkZGRkZGRlNEpnkZGRkZGRkZDRJZJKT
kZGRkZGR0SSRSU5GRkZGRkZGk0QmORkZGRkZGRlNEpnkZGRkZGRkZDRJZJKTkZGRkZGR0SSRSU5G
RkZGRkZGk0QmORkZGRkZGRlNEpnkZGRkZGRkZDRJZJKTkZGRkZGR0SSRSU5GRkZGRkZGk0QmORkZ
GRkZGRlNEpnkZGRkZGRkZDRJZJKTkZGRkZGR0SSRSU5GRkZGRkZGk0QmORkZGRkZGRlNEpnkZGRk
ZGRkZDRJZJKTkZGRkZGR0SSRSU5GRkZGRkZGk0QmORkZGRkZGRlNEpnkZGRkZGRkZDRJNGqSs2TJ
kvDcc8+Fzz77LH7+7W9/G/7mb/4m9O7dO36G3//+96F58+Zh2rRp9d9Ux69//evw1FNPhY8//rj+
m3WLjz76KIwePTo8/vjj4fPPP6//tmF88skn4cknn4wptcOqwP3q/Ktf/ari/R988EF48MEHw2uv
vVb/zerhrbfeiv314Ycf1n8T4v9/+ctfhvfff7/+m8p46aWXwqOPPhrLsj7gudOnTw9z5syp/2bt
QR88/fTTUZbLWLx4cZR38nnfffeF8ePH15+pDW+88UbMQ1+U8eKLL8b6vffee/XfrBy/+c1vwl13
3RVefvnl+m++gDIuWLAgvPDCCzXLcjW0aNEi/PSnP634nIbw6aefhk6dOsX71a8SxowZE3bYYYco
42sCqW/UuzHj+eefj7qmljbVz8YfXVEJZObee+8N999/f/03K4d2evjhh8Ozzz67Qr7GmzZ85pln
6r9ZOeQ3adKksGjRooryZjyRxy+LO++8M9qYmTNn1n9TO15//fWwzTbbhLFjx1bUtfrk2GOPDZdf
fnm0BWsC9IV+0T4ZldFoSY7B+ZOf/CT84he/iAOCQjMY/+AP/iBce+21UdAZzwsvvDB89atfDXPn
zq2/szLcf8IJJ4QjjzwyKsQRI0aEfffdt8F06qmnhieeeKI+h+Vx3XXXVbwnpVtuuSU+swhEQvmv
uOKKFQaB+lAGhJ9SefPNN6NiOeecc8Kmm24ajjnmmEjoDKRKqZqC8v3VV18d2/GBBx6o//YLaLdv
fOMbYeTIkfXfrIi33347nHnmmRXrKTE0U6dODd/5znfCHXfcsUwJaTt9ePfdd8fPlaB8Xbp0CT/6
0Y/C7373u6jEDj744IrPKaZqCo2COfDAAyveI7Vt27b+yi9AHrbeeuuw11571X+zFPoIYajU3rWm
d955Z7m+lp+23HHHHaNhKSpsCrJ9+/ZRTsjeP//zP9efqQ3jxo0L//u//xtmzZpV/80XIK/GCaNT
KwYPHhz+/d//PfZtGWTx//7v/0KHDh0qGp0ytAE5qtRGxx13XPjWt74ViXj5nHFQSYF7JvlCjnbd
ddcoO8X7PAvJ3mWXXWK9tXXxPEK4OoaBrHz7298OgwYNqv+mOox/zyk+t6Gkrg3h9ttvryjTKWnH
BOOArrnhhhuiTKl/JWij1q1bhx//+MdxnFYyzvTuN7/5zXDGGWfUf7NykI+DDjoolqmsm/Tztttu
G419rTBufvCDH0Q9WC6jfqRT/+d//qciwa8EOrZSHwwdOjS2m7FU6TybU0ne9XXnzp3jmKX7y/ch
dnTs3//934fLLrtshfNlPVEL1FsbbrbZZlX1f0Yj9+Q89NBDcRb2n//5n+Gee+6JzD+RHMaQoaDU
EZaVdTJFbRBceeWV8dqJEyeGs88+O/z3f/93zINR8Vk65ZRT4vebb755HKyVcPzxx4d//Md/DKed
dtqy+yReJWVkTD3HbGbgwIGRcVcjOYR11KhR4dxzzw1HH310JCR/93d/F/78z/88/p8gU1KUoPsr
pYZIHsVM2ZfrY8DuvffeYcstt4yKrBrefffdWB8G72tf+1qsp3L+7d/+bdhiiy3CjTfeGAfppZde
GhXRq6++GuvEmG+//fbRAFUDo8vAHXLIIfHzI488Es4777xIjsyotHOxfeXve96pSujatWv4p3/6
p3DooYcud1/qUzIDyti9e/f4vGokR1t997vfrdjetSbGp+wl0x77779/7A9ePaCc//Iv/zIaJP9f
HZJD9hhgslYGIiAxurWiIZJjDKrff/3Xf0XP1Mqgnxm2cvusLP3rv/5rmDBhQn0uX4BM6uNK90jk
5OSTTw5/+Id/WPH8H/3RH0XSkGBsGadkopwYvOShRMj/7M/+LLZ18RoTkvLsHAn7i7/4i4rPr5S+
8pWv1N9ZGZ79x3/8x9EbwNj/v//3/8J2220XmjVrFr7//e+Hf/u3f6u/8guSo07GoDFeTZeRt9NP
Pz32daW2Xh2SQz+rT7du3eq/WQoEgbfkr/7qrxqc/JTREMkxnsi9vjZ+avEI003l9q8ltWvXbgVb
ozxkxFiodI901llnxUlBpXMS/Vz0us2bN285+SqmNL55r+hOE8TyNdX6emNEoyM5jA+Pg8QNZ7Du
ueeekQQYFASC9wax2WmnneLSFRd9uodLsAwKkSIgZASD0SFQ2PfOO+8cdt999/DKK6/Eaw1Cbv2v
f/3roWPHjlXZNeP7ve99bwUDhjgoYyI5/fv3jyTKclo1kuP/ZoYIzWGHHRauueaa8LOf/SwOXG72
5BEyO3U/YqXOPFxm0r5riOTIX52Ul8GXj7LdfPPNsU20ZdnrVAb3PELDOAPS5d7ibAxhcA1FSZF5
Hpd5tTaEXr16hX/5l3+JpBNR0n/KhuggpUWXtn7kLaLoXFsJSA7PFCVRhP4mL4nkIJ/ajRGoRnIQ
tcceeyy2c62JPDI22sVnBKCsFMEynrbq2bNn/KzN/vRP/zQqSkoLUWOIN9lkk5gOOOCAil5F8iov
3hvPPfzww6OXy1hI5BLB+Ou//utw0kknLTdWJLPqaqhEcjxPvcz8kQyTEARVv1Wa4SYgAJ5VbKuU
eN7I0uTJk1c4Z6JTnJ17hv5ipMiH9p4/f34ksT7zJKqjcYHUMi7ao1+/frF9jjrqqLBw4cKYd5Hw
kTP3I5aMswmG8Yd47rfffpEEkZkf/vCHcXLjr34iu65lWMpjiLHVxp5Fl5A3E4Ji/STeA2SOB7Mh
JJJjYoI8/Mmf/Ekkm7zTvFWVSI6+MxaQIG1QrY8sGcsXuS57lJAcbdGyZcv6b6qDV0KdTdhMgpTD
Z7oBUfR83mkTFf2d5FCi66p5s6qRHHJF1xrz559/fuzz4cOHN6hzAFEo94OkH7UbvV3pfHl51ti2
jGbyp/3IXiI82hLZc56N4XHhzZkxY0bsa2NLWeUrHKGoJ0wY6QN2CKl2rT5WNraEbkLonENAySJ9
i/jy/FeygxsrGh3JobR05OqmSgORUqMA2rRpExUPwmPpCqEqkxzCQ2H+x3/8R4MeiDVJcipB+Qzq
4vJCIjmEOylUg8R3ZZLDQ9CqVauobFJSXkqcC1kbUAyUNENQvA5BKSORHIPONfLgbWLMDVrfyQdR
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
tFMZymMmR7lQjpLyVzKg2pMiXJMKSD0oZjKmLNWgDxgZ40t9i96gakgkR/7a0H21JN7FVYE2MW7W
VLsYn8qRZttrCgxZ8kgkVFqu0tYIPG8GXYC8iaVh6JEJxKTS2NJ/JismVQip5dUUf8bzbDKRlsbt
ukkkCTzTfZbbKuk/YxRBKBvvBPd7Ph3KKyGvhsaDvkIUkE2GPIF3TNuXdWAZdCAdaoJKj6zs+iLJ
MZkqyltDidyqU62gT9y3MhtSK/Qzz2P5jeNfFonk5OWqlWODCDxe02DoKqUyfMeIVDq3tuG5q/vs
YrlX9f7ivesD5bKnVEZD59YlUhlSf6XUFJDqtb7buLGgUntU+66YIF2TPjcE17i+mG+6t6H7G7qm
oXNFOF+uTzXUmueaQCpXrWVr6ii2RxG5jVbERklyMjIyMjIyMpo+MsnJyMjIyMjIaJLIJCcjIyMj
IyOjSSKTnIyMjIyMjIwmiUxyMjIyMjIyMpokMsnJyMjIyMjIaJLIJCcjIyMjIyOjSSKTnIyMjIyM
jIwmiUxyMjIyMjIyMpokMsnJyMjIyMjIaJLIJCcjIyMjIyOjSSKTnIyMjIyMjIwmiUxyMjIyMjIy
MpokMsnJyMjIyMjIaJLIJCcjIyMjIyOjSaLRk5zPP/88fPbZZ/WfMtYlctt/OaT28zfjyyG3Y0bG
hofGYD8aNclJRuKhhx4Kn376aU7rOL322mvhmWeeqXgup5Wn999/Pzz++OPhk08+qXg+p9rTo48+
Gt57772K53LKKafGmdju9Y1GTXLeeeedqNx22mWncPjxh+e0jtPeB+0ddtxlx4rnclp5OvjIg8Mv
tvtFOOy4wyqez6m2dMTxR4StttkqHHjEgRXP55RTTo0zbbPdNvXWfP2h0S9XYYO77L9LuL/uWJKP
dXbcV3f0n9E/nHPVObntV/OY9sK0cMCpB4SFHy8sfJuPVT0eqzv2PmbvMOG3E6JcFs/lIx/5aLzH
DvvtUG/J1x8aPcnh6kdyNNjifKyzQ3v3m94vnH3V2dGwFM/lo7ZjygtTwv6n7B/mfzy/8G0+VvV4
pO7Y65i9wt2/ubvwbT7ykY/GfmSSUwMyyVk/RyY5X/7IJGfNHJnk5CMfG+aRSU4NyCRn/RyZ5Hz5
I5OcNXNkkpOPfGyYRyY5NSCTnPVzZJLz5Y9MctbMkUlOPvKxYR6Z5NSASiRnXRGetfWcleW7rurX
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
Lgxjx44Nr776av03GRs69HeHDh3Cb3/72/pvKuO+++4L559/fnj22Wfrv8nIyMhoumiyJIeBf+WV
V8IzzzwTpk+fHjp37hz233//8Oijj9ZfsRQLFiwI//Iv/xLGjRtX/011fPzxx+GKK66I13/++ef1
336B+++/Pxx44IFh8eLF9d+sHn75y1+Gn/70p6F58+b139SON998M3z9618Pxx9/fHjvvffqv/0C
iM2+++4btthii/Dcc8/Vf/vl8OCDD4ZjjjkmLFmypP6bleP222+P9/z617+u/+YL9OjRI5xwwgk1
kbDnn38+HHrooaFfv35VSd3q4rPPPovy0axZs/DOO+/Uf7v6ePrpp2PfILAJn376aZg1a1a4++67
V0grIyITJ04MRx99dGyDTp06hW9+85uxvA1h6NCh4Q/+4A8i0c3IyMho6miUJAeBYLA++OCDmD76
6KNocGoBozF8+PBw0EEHhe233z78+Mc/Dv/8z/8cfvjDH4aLL744GpoiZs+eHZX+yJEj67+pDuW4
6KKL4vVlkqO81113XfiLv/iLcO6554YPP/yw/kx1IAeMOSNdTHvuuWf4h3/4h/CNb3xjhXPSBRdc
EAlXGZ6JhCmf+h5yyCHL3demTZswePDg8Pd///fhP/7jP5Y7J51++unh8ccfr89tqZFPfVBO6fnq
3bVr15jnQw89tNw1DZGOFi1ahG9/+9uRhBahXXfcccew++6710RyeL3OOeec8J//+Z+hb9++sQ2u
vPLKFepWKd166631uVQGr8gOO+wQNttss/DWW29FEodUVMorJe1bqW/gV7/6Vfi7v/u7cPXVV9d/
E8L7778ffvSjH4X/9//+X/izP/uzmP70T/809uGAAQPqr1oR2vbyyy8Pf/7nfx5+//vfN0hyXKtd
9GcmORkZGRsTGh3JoZDvvffeSFL+9m//Nirkn/zkJ6Fjx47RoNWCxx57LLrkTzvttPC9730vKv/f
/OY39WeXx5oiOfJHqBhEnp6bb755pcSMV4mBVs5iOuyww2Ie3//+91c4JzFuZUOqbLxVCN0RRxwR
r/v3f//38L//+7/huOOOCyeddFLYeeedw7/+679GL47Pm2++eTSSSIXrL7zwwvDkk0/W57h0aUNd
K6XkZUJSNt1004rX8K5UAqP8P//zP5EMMvJFIBaJCDREkorQFjfccENsM0a8W7duy7VXtcSbVA36
E9HiUXvggQfid0jcmWeeWTGvlEaMGLFaJEef6UN4+OGHY/s1RHJ4KY0LZLVPnz7Rg6hvEXmfpUGD
BsVrkT6EEknLJCcjI2NjQqMjOXfddVdU1ozvV7/61UhQGG4z3KOOOip6CFYFZ5xxxnIk59133w1P
PfVUXBKShg0bFpX+9ddfv+w76e23347Xg+UA3yElp5xySrw+XffGG2/EpQzGDymZO3du/D+jYlZd
jegoR8qjnJC8H/zgB7G+lc5L5aUm3ivEwbNTG1kW4Q1C+l577bVIvE488cRobJWLV2unnXaKXpVi
fRMSyWE4GeHvfOc74bbbbot/kRxGGVH5oz/6o9guc+bMCVOnTg0/+9nPIrmsRCy32mqr6GX6kz/5
k/B///d/Ycstt4xJvsrUvXv36Mn42te+tuxcSu3bt4+eukrgqeDNYMgrLSXWCgRlxowZYdtttw3f
/e53Ixmo9sxaoK0PP/zwWH5kUFvpp1QnS1WrQ3IQtL/6q7+KJDaNEW363//93/GzhARBJjkZGRkb
KxoVyUEWttlmm7hUY7aLQADj+Ytf/CLOgu+88874XTUwSGIVWrduHRNF/4//+I/R+PvMGDMIFH1D
CflJMEuudI3Ee3LppZeGf/u3f4veIM/nqTCr//nPfx7LXonoTJgwoWJ+tSbkpAjLKffcc0/8m4DE
8IjNnz8/xrkgD8XlKECYnE8GtohEcnhJeMZ4NVzvr3a88cYbw7e+9a3oIUKmnnjiiehF4UFiTCuR
gz/8wz8MW2+9dbjsssui8ZWvZyA34nOQIHk6l9Ill1wS2xfp+zKEY2VADgcOHBiJQuo74DWZNGlS
zZ6lIl566aXoVVEPROaP//iPwy677LKsbvpjVUkOgouE7bPPPjF/aGi5ynMyycnIyNgY0ahIjuUo
MSXXXHNNDKBNMDNnKP7pn/4p9O7du/7bymCIGCokgDFFcMTJIEm+S0s2DDdjYUZM6Vta8VkAss9F
kiM2xDkGifFz3rIKr83BBx8cvU6WhJAMxlC64447osFm/JGf8rJMIjm33HJLzFuQKVJhGemv//qv
4/KcZzg3c+bMaKD839JJqksR8j/11FPDf/3Xfy1LljIQw/TX85CF4jUpCYidPHlyfW5L0RDJUTdL
c9pNmSzV8VBIlkmqLdkgOWKKkkHn7fEMcT2IDyJWbHtAfpNnqyGS8/rrr8dg5kr1q5aOPPLI+ruX
xiCJk7JLSbl81uaeS27Gjx+/rH8bSkhjGcqNZPPktGzZMnrWYFWXq8i3JVZLaQh2eibSqT49e/Zc
oSytWrXKJCcjI2OjxGqRHB4WnhYGxTKDpY4vs0TQEOTLEFgWEdzqebUCKWF8zXB5CeTFE4TkpO3Z
5ZgcRsHnsqEF8SqWCJy3hGUZwnLBJptsEo13OfFo7LfffjEolkEqEh0kxzXIEGOEyPC6yJ+xR/h4
FpTL8o8dPow4LxGDKxXB+NlFJvC1UtJXDCwDXuk848egF5FIjhgey09Ipvr4e/LJJ8cYFTu4kDFL
L661xGiJRltXkgl1rkRyeL7E1CBw5Kt4bzWSw9OC2KnbscceG/sSUSvWSwwVoulv8fuUtH01kGv1
5FnUX55f7N+UlL/42bJUGdpWILxreRLtftO/q0pylMm9xedJri+XQ0JEtU8mORkZGRsjVpnkMEB2
/ySlynCeffbZqxwrUwsYfjuWPI/xZ8hq2bWUYIlGGS0RcO9T8l+G5Aj4TfUWHGy5JsWdmJm7t7ht
G7Hi7Rk1alTVbeU8I0gMg2SZxtZhXhAEwzIZQiGOBqmqBfqHJ6WcGGh9ddVVV61wzjPFCJWRSA7i
gWQoSyqTnVjIDLLLg8Cw87LpK+fFQmnb8jZ29axEcuTPS+Z9L4wyT1YihYnkIHpFkqNtPQfh460r
v1cIIVBvnrFVMeo8OAhyInT6uRoQEZ4ysloNCFv//v2jx09dtRfiZGlP3VYnJqeMvFyVkZGRsSJW
meRQlIJCKcqULF8k9/uaBM9GegYPgcDZWkkO0pUCPf/yL/8yLqNst912cXlodUiO+BZeIQHQzov1
YYQYUsTCfQJVi54msSSMS6V3wSQw2tpUnAbjx/Dx5MiLd8RuHR4cngRLeZ7XEARHIxKMMy9TSpbt
lJtXqfi9tkEAy14caGi5Sv39FTzMSyIeB3iaeIsYbqRNsHCxzMr2la98JcZe6Y+0/IfUCAhn9N3D
qyMYnIdKnJGyIpmV4pvKxBW0q2Dsv/mbv4lECIGwFKnPPKOSlwkQK941xBM55sUqv3agiFpIzgsv
vBDbSb3Jox116m45VbutDsnRxvJIyZhE9Mh8+o5MIYKZ5GRkZGysWGWSYxlFPAhFKXm/h6WGSi+e
+7IQh4MoeJcMksMg2zG0Mq8Rwyg2gWK3TdoMV14MpXfHMKCWmhhTMTDq4R0nPqfdU0WS43mCi5WB
Z8B5ZMQ7VBjivfbaKxp/u5AsjYivYbA8n2ejFgLIo2FpQd52L/GQCHgFeY0ePToSi5V5dRLJKW7f
Zrh5XhjYMnnzgsTVITm8LcgAcqLdygkhsxxUDnRWNuTNO3v0LS+gZwg8ThCPpZ6Ii+UkJM81YrVq
JTmW7hDb3XbbLfzud7+LbeA9OpaKLHEVA7QT9JM+5HFBFpBaZS2/y6eIlZGcF198McqasugTr0XQ
t/qTzGnP1SE5xgTSdNZZZ8V25M1CZMmzz2LFLO9qm0xyMjIyNlasVkyO2BSGwmzcjJKBrDYzXhNA
MrjhGQoGoWw4i2AEp0yZEr0IDLByIjnKbDmFJ2fvvfeOZZcYMkqf5yR9JxWDcP0EgoBdSwLpPTmM
E4OBCCgTb4Gt2oiI9824n0HTPkhXGQwvI2eGL6mbmbi8k+cpnZMQNMsuvAu77rpr9JhUQpnkIAiM
XFoq0RaCrcXT8KJYNhHv1NByVSWSk96Tg/SpJ89HajtGH1HjwShD2SotVxVJDlgKE+ukXREW13h5
XyU5K5McBlw/pC3aYobUlwwh5NrZtnkenSIsE/Lo6TP9Y3n0y5Ac3iTLgYgvQkg+0ntyeCQRLZMD
rx5oiOQYX2UZQnKKZSsvV6mHcmWSk5GRsTFjtUjO2gLyIgaHUa1EDJAJirshBc3TxMDxTlgmYSQp
/xQ7U0Z5uaoM93kubw0PTfllgAyj5SUkiKHjxbCLhqfDcxmWSmDcLEExZOUkbgap4Skqn+vSpUvM
l2epEookh3HnEeG9sBuK102etkjzQFnOkSqREUgkx7KKd9vIh4fA3yLJcb7Yvtr8y5IcYLCRHd4n
XgnvD6qEIslBiJOnkTdGPBEPmaXAtGQnIYzkrBjjU4YA3y/ryUFkUjyWupRfBmjnniU1S1hJ5osk
BxEjS/qriExyMjIyMlaORkVyHnnkkaiobWempNNMm7Gk5BkpHoPiW3nLYCjM/MVRICJfluTIwyzc
zJ5hLpMc8CwxEbYjM2q8Bz5biileVwmMLEOF3Al01QZFb4llFqRAfggLUoLAVPtdI89jzBhS8TfI
DQOs/WzPXrRoUSRKjD6vi6Bo3p5KSCSHMVU3ybtZ9MOXITkI40033RS9aurtGZVIToL6y89vg5WB
1Go3Hi5kxjuSkCLlQxa1lf5j/LWtpTDElEeHB6uhGKc1QXKKqERyeBd57sRyJVkpkhxxSurFu1RE
NZIj7ogst2jRIpJR7cFzxxMnNiyTnIyMjI0JjYrkMD5mnYJ7eUYYT8GTPDN2VwmmtUvFdbXiy5Kc
IqqRHESFwfR+HkbUEpllIMaqEiypIU2WtBgjyzLiKxhehKlIcixreIswYuLdKK5zTjulZUJJ/I73
uHjpoe3eluvEL/HmeF7xZYCIoCU9hEV+glQZXsspycMClngY8GLbKJ9y8FYBkiPuidEUKyR5Z1BD
JEdf2l4vbx6YIsnhidFXyIdyWpYT/IsYFX/LSp2RM+3Hy4PQqLdlPu+FQXTVPZWpnPSN9/v4f7Xf
yFqbJEf50/uFeNeUNSGRHH2O/CQvYRHetaP/0n2J5KSgae1guU1QfBFDhgzJJCcjI2OjQaMiOcCo
Cxq23JTeSSNQmEKv5ZfCy1hbJIfBYqzKSUCt1+tb4rIbKH3P+KSdYf4KBGaIBP4yUMU4o3LcSwLD
6LmCnhFAwasIDNLnO8tQdqTZ8lw23JXeeKw+yACCJj6H10f+q4IUiF1OX2a5SlkE0p533nlxqQZh
LG/j5uHSF+KBeIOQI94twcmMfJKdlSUkq5pXrBaS49mrQ3J4aMi4ZTPb5ovwPDKrrQSLu059G0J5
uaoIba19Pdc48sxKXrGMjIyMpoZGR3LADJ5nglHgXaD0eUgY+VXF2iI5jBoPRq2pXbt2ywW6qo9Z
uOWt8o4h3/OGeIFgJbjeMk0iTcAIJg9IpXayFV18SqXt7OrFY8K71FCMSiUgOTxtPEP6ShJEW43k
IDCWzpI3zl/3FHegWY4ULyMfZUbgkJgilJM3wg6uIgEgO37qIMnOyhKyUQ2VSI7nWmISo6SOCA5C
1tASakKR5EiWIHmCyv2vDrx0CKmkb1Ym+zw04qUsyZUhf4SRHPIaKX9Dy3QZGRkZTQWNkuSsSfix
RXEI1ZQ6Q9yrV68GjV0CAzdv3rx4/eoQrqYIW7wF/BbbV5vbCbU2XiuwLoG48ZaVt5tbskNOyIEl
SsSiFnJo6ch9Yqb8X3xU8mhlZGRkZKx5NHmSk5GRkZGRkbFxIpOcjIyMjIyMjCaJTHIyMjIyMjIy
miQyycnIyMjIyMhoksgkJyMjIyMjI6NJIpOcjIyMjIyMjCaJTHIyMjIyMjIymiQyycnIyMjIyMho
ksgkJyMjIyMjI6NJIpOcjIyMjIyMjCaJTHIyMjIyMjIymiQ2OJLjN6PKP2iYsf6gP/LveGWsayQ9
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
</data><mime>image/png</mime><width>569</width><height>347</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="8a6c74654c04c83936a2e4ce03f58a38" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="569" objHeight="347"><item x="184" y="5" w="222" h="32"><t w="63">检索策略小结</t><t w="56">检索策赂小结</t><t w="55">检素策略小结</t><t w="55">检索策畸小结</t><t w="54">检索策路小结</t><t w="53">检累策略小结</t><t w="53">检案策略小结</t><t w="50">检索集略小结</t><t w="50">检索策略小组</t><t w="39">策略小结</t></item><item x="35" y="64" w="469" h="17"><t w="45">类级别和关联级别可逸的检索策略及默认的检索策略</t><t w="44">类级别和关联级别可选的检索策略及默认的检索策略</t><t w="44">类级别利关联级别可选的检索策略及默认的检索策略</t><t w="44">类级别和关联级别可选的检索策崎及默认的检索策略</t><t w="44">类级别和关联级别可远的检索策略及默认的检索策略</t><t w="43">类级别和关联级别可逃的检索策略及默认的检索策略</t><t w="31">的检索策略</t><t w="30">级别和关联</t><t w="29">级别利关联</t><t w="29">的检素策略</t></item><item x="43" y="107" w="9" h="10"><t w="28">恰</t><t w="27">拴</t><t w="27">捡</t><t w="26">性</t></item><item x="55" y="107" w="20" h="10"><t w="37">重釐</t><t w="35">重篡</t><t w="35">重复</t><t w="34">重蟹</t></item><item x="76" y="107" w="10" h="10"><t w="33">嗜</t><t w="33">嚐</t></item><item x="88" y="107" w="8" h="10"><t w="34">的</t><t w="32">椅</t><t w="31">砌</t><t w="30">約</t></item><item x="98" y="107" w="9" h="10"><t w="33">伴</t><t w="29">瞥</t><t w="28">侍</t><t w="28">侈</t></item><item x="109" y="107" w="9" h="10"><t w="35">用</t></item><item x="120" y="107" w="8" h="10"><t w="32">選</t><t w="30">送</t><t w="29">繕</t><t w="29">髦</t></item><item x="138" y="107" w="30" h="9"><t w="37">可選的</t><t w="37">可垂的</t><t w="35">可選砌</t><t w="35">可卷的</t><t w="35">可套的</t><t w="35">可垂砌</t><t w="34">可卷砌</t><t w="34">可套砌</t><t w="32">网選的</t><t w="32">网垂的</t></item><item x="171" y="107" w="43" h="9"><t w="37">持重龍嚐</t><t w="37">持重灌嚐</t><t w="37">持重灌嗜</t><t w="37">持重龍嗜</t><t w="37">持重灌拳</t><t w="37">持重龍拳</t><t w="37">持重篱嚐</t><t w="36">持重堪嚐</t><t w="36">持重灌鬚</t><t w="36">持重龍鬚</t></item><item x="230" y="107" w="42" h="10"><t w="33">義約持重</t><t w="33">義的持重</t><t w="32">越約持重</t><t w="32">義椅持重</t><t w="32">越的持重</t><t w="32">義約持董</t><t w="32">義砌持重</t><t w="32">義的持董</t><t w="31">越椅持重</t><t w="31">越約持董</t></item><item x="274" y="107" w="9" h="10"><t w="33">蟹</t><t w="31">堇</t><t w="31">壟</t><t w="31">舊</t></item><item x="284" y="107" w="9" h="10"><t w="34">嚐</t><t w="31">嗜</t><t w="27">啼</t></item><item x="301" y="107" w="30" h="10"><t w="35">蟻行村</t><t w="34">蟻行吋</t><t w="34">年行村</t><t w="34">蟻行射</t><t w="34">蟻行封</t><t w="34">年行吋</t><t w="33">年行射</t><t w="33">咸行村</t><t w="33">年行封</t><t w="33">咸行吋</t></item><item x="333" y="107" w="19" h="10"><t w="36">行為</t><t w="35">萱為</t><t w="34">行盞</t><t w="33">行力</t><t w="33">捏為</t><t w="33">萱盞</t><t w="32">萱力</t><t w="32">抒為</t><t w="31">捏盞</t><t w="30">捏力</t></item><item x="356" y="106" w="20" h="11"><t w="32">營影</t><t w="30">苦影</t><t w="30">蕾影</t><t w="30">營鬚</t><t w="30">番影</t><t w="30">營盤</t><t w="30">營靨</t><t w="29">蕾鬚</t><t w="29">苦鬚</t><t w="29">番鬚</t></item><item x="377" y="107" w="20" h="10"><t w="30">滷的</t><t w="30">舊的</t><t w="29">瘤的</t><t w="29">舊椅</t><t w="29">滷椅</t><t w="29">舊約</t><t w="29">滷約</t><t w="29">嘈的</t><t w="29">瘤椅</t><t w="28">瘤約</t></item><item x="399" y="107" w="9" h="10"><t w="27">拴</t><t w="27">惟</t><t w="27">性</t><t w="25">捡</t></item><item x="410" y="107" w="21" h="10"><t w="35">重方</t><t w="34">畫方</t><t w="34">重肅</t><t w="34">重落</t><t w="33">堇方</t><t w="33">盡方</t><t w="33">重万</t><t w="32">畫肅</t><t w="32">畫落</t><t w="32">堇肅</t></item><item x="433" y="107" w="9" h="10"><t w="29">漁</t><t w="29">盤</t><t w="29">塗</t><t w="27">搶</t></item><item x="139" y="123" w="18" h="9"><t w="36">立即</t><t w="35">立印</t><t w="35">立尊</t><t w="35">皇即</t><t w="34">立卻</t><t w="34">皇印</t><t w="34">皇尊</t><t w="33">皇卻</t><t w="32">主即</t><t w="31">宴即</t></item><item x="160" y="123" w="20" h="9"><t w="29">持素</t><t w="29">持索</t><t w="29">持暈</t><t w="29">持隶</t><t w="28">推素</t><t w="28">推索</t><t w="28">推暈</t><t w="28">推隶</t><t w="28">撿素</t><t w="28">捡素</t></item><item x="138" y="149" w="41" h="21"><t w="27">謎訂</t><t w="27">談訂</t><t w="27">謎悶</t><t w="26">談悶</t><t w="26">謎闆</t><t w="26">謎競</t><t w="26">談闆</t><t w="26">談競</t><t w="25">讓訂</t><t w="25">讓悶</t></item><item x="139" y="173" w="8" h="10"><t w="29">迎</t><t w="29">違</t><t w="28">迹</t><t w="27">遵</t></item><item x="149" y="174" w="8" h="9"><t w="32">切</t><t w="30">翅</t><t w="27">帮</t><t w="25">扭</t></item><item x="160" y="173" w="9" h="10"><t w="31">蓉</t><t w="30">左</t><t w="30">注</t><t w="29">汪</t></item><item x="171" y="174" w="9" h="10"><t w="40">外</t></item><item x="182" y="174" w="8" h="10"><t w="29">導</t><t w="29">溥</t><t w="28">替</t><t w="28">弩</t></item><item x="193" y="174" w="9" h="10"><t w="31">接</t><t w="29">擺</t><t w="24">掙</t><t w="24">搔</t></item><item x="204" y="174" w="9" h="10"><t w="32">捡</t><t w="30">營</t><t w="30">检</t><t w="27">撞</t></item><item x="219" y="173" w="20" h="10"><t w="35">廷廷</t><t w="35">廷遙</t><t w="35">廷逗</t><t w="35">賦廷</t><t w="35">廷艳</t><t w="34">賦遙</t><t w="34">賦逗</t><t w="34">賦艳</t><t w="32">延廷</t><t w="32">延遙</t></item><item x="240" y="174" w="20" h="10"><t w="34">持重</t><t w="33">措重</t><t w="33">持董</t><t w="33">持垂</t><t w="33">持堇</t><t w="33">措董</t><t w="32">措垂</t><t w="32">捡重</t><t w="32">措堇</t><t w="32">撿重</t></item><item x="301" y="149" w="19" h="8"><t w="36">影确</t><t w="36">影携</t><t w="35">影响</t><t w="35">影啡</t><t w="33">鄙确</t><t w="32">鄙携</t><t w="32">鄙响</t><t w="31">鄙啡</t><t w="30">彤确</t><t w="30">彤携</t></item><item x="326" y="150" w="38" h="7"><t w="37">session</t><t w="35">吕砸歌Sion</t><t w="35">吕砸5 Sion</t><t w="35">吕砸$ Sion</t><t w="35">吕。歌Sion</t><t w="35">吕。 5 Sion</t><t w="34">吕。 $ Sion</t><t w="34">吕砸寰Sion</t><t w="34">吕8歌Sion</t><t w="34">吕8 5 Sion</t></item><item x="368" y="149" w="7" h="8"><t w="40">的</t><t w="13">m</t></item><item x="381" y="150" w="19" h="7"><t w="34">load</t><t w="33">Lo吕措</t><t w="33">Lo吕鑽</t><t w="33">Lo吕錢</t><t w="33">Lo吕錯</t><t w="32">Lo 8措</t><t w="32">Lo 8鑽</t><t w="32">Lo 8錢</t><t w="32">Lo摹措</t><t w="32">Lo摹鑽</t></item><item x="402" y="150" w="6" h="9"><t w="30">IL</t><t w="22">! 1</t></item><item x="412" y="149" w="9" h="8"><t w="26">和</t><t w="24">种</t><t w="23">棒</t><t w="21">亢</t><t w="20">to</t><t w="18">,鎮</t><t w="18">,载</t></item><item x="301" y="162" w="5" h="7"><t w="22">禽</t><t w="22">肉</t><t w="21">窝</t><t w="21">佟</t></item><item x="308" y="162" w="8" h="7"><t w="34">費!</t><t w="34">費」</t><t w="30">震!</t><t w="30">震」</t><t w="30">俄!</t><t w="30">俄」</t><t w="29">户!</t><t w="29">户」</t><t w="28">曰</t><t w="27">織</t></item><item x="321" y="161" w="9" h="8"><t w="35">和</t><t w="32">瞩</t><t w="29">牠</t><t w="28">釉</t></item><item x="334" y="162" w="13" h="7"><t w="22">电</t><t w="18">如</t></item><item x="348" y="162" w="20" h="7"><t w="26">1 。諱</t><t w="26">1 。电</t><t w="26">1 。柚</t><t w="26">1 。祕</t><t w="26">1楠8</t><t w="25">1细8</t><t w="24">1杯8</t><t w="24">1丽8</t><t w="24">怕諱</t><t w="24">怕电</t></item><item x="373" y="162" w="13" h="7"><t w="11">妒</t></item><item x="388" y="161" w="28" h="9"><t w="35">LI例外</t><t w="33">II例外</t><t w="32">LI例分</t><t w="32">il例外</t><t w="32">LI 1 , 1外</t><t w="32">LI 1科外</t><t w="31">LI運1外</t><t w="31">! if , 1外</t><t w="31">! ,例外</t><t w="31">! if科外</t></item><item x="417" y="150" w="31" h="20"><t w="28">議農</t><t w="28">#農</t><t w="27">忒農</t><t w="27">#巖</t><t w="27">議巖</t><t w="26">#濃</t><t w="26">議濃</t><t w="26">虛農</t><t w="26">忒巖</t><t w="26">忒濃</t></item><item x="450" y="149" w="21" h="9"><t w="29">方盧</t><t w="29">爛盧</t><t w="28">肃盧</t><t w="28">方遺</t><t w="28">方滷</t><t w="28">方准</t><t w="28">爛遺</t><t w="28">爛滷</t><t w="28">爛准</t><t w="27">肃遺</t></item><item x="478" y="149" w="42" h="8"><t w="36">以及口擁</t><t w="35">以及邸擁</t><t w="35">以及口岭</t><t w="35">以及口峽</t><t w="35">皇及口擁</t><t w="35">以及口喊</t><t w="35">以及邸岭</t><t w="35">以及邸峽</t><t w="35">皇及邸擁</t><t w="35">以及邸喊</t></item><item x="522" y="152" w="8" h="7"><t w="36">歡</t><t w="30">呼</t><t w="29">吋</t><t w="28">嚐</t></item><item x="453" y="162" w="12" h="7"><t w="34">Qu</t><t w="31">標肋</t><t w="31">農肋</t><t w="31">绩肋</t><t w="31">標盯</t><t w="31">農盯</t><t w="30">榻肋</t><t w="30">绩盯</t><t w="30">標廿</t><t w="30">農廿</t></item><item x="467" y="164" w="14" h="7"><t w="35">砸聯</t><t w="34">砸假</t><t w="34">砸秤</t><t w="33">砸顎</t><t w="31">惡聯</t><t w="31">8聯</t><t w="31">惡假</t><t w="31">8假</t><t w="30">惡秤</t><t w="30">8秤</t></item><item x="484" y="162" w="16" h="7"><t w="26">角fl</t><t w="25">角户</t><t w="25">角織</t><t w="25">角FI</t><t w="24">, fl</t><t w="24">壽fl</t><t w="23">褂fl</t><t w="23">, FI</t><t w="23">壽FI</t><t w="22">,户</t></item><item x="504" y="161" w="20" h="9"><t w="32">壘紹</t><t w="31">壘翔</t><t w="30">壘翅</t><t w="30">壘翊</t><t w="30">臺紹</t><t w="30">套紹</t><t w="30">會紹</t><t w="29">臺翔</t><t w="29">套翔</t><t w="29">會翔</t></item><item x="312" y="174" w="8" h="10"><t w="30">畸</t><t w="27">峽</t><t w="26">畴</t><t w="25">疇</t></item><item x="323" y="174" w="8" h="10"><t w="32">着</t><t w="32">射</t><t w="27">檔</t><t w="27">擋</t></item><item x="334" y="173" w="20" h="10"><t w="37">文件</t><t w="33">寓件</t><t w="33">夫件</t><t w="32">戎件</t></item><item x="356" y="173" w="19" h="10"><t w="35">中講</t><t w="35">中囂</t><t w="35">中设</t><t w="35">中燥</t><t w="32">申講</t><t w="31">申囂</t><t w="31">申设</t><t w="31">申燥</t></item><item x="378" y="173" w="7" h="10"><t w="29">窦</t><t w="24">定</t><t w="23">罵</t><t w="22">司</t></item><item x="389" y="174" w="7" h="10"><t w="35">砌</t><t w="35">的</t><t w="31">憋</t><t w="30">約</t></item><item x="400" y="174" w="31" h="10"><t w="36">學切莖</t><t w="35">學切奎</t><t w="35">學切直</t><t w="35">學切窒</t><t w="33">學坝莖</t><t w="33">哇切莖</t><t w="33">學坝奎</t><t w="33">兩切莖</t><t w="33">如切莖</t><t w="33">哇切奎</t></item><item x="432" y="173" w="31" h="10"><t w="36">外達接</t><t w="36">外補接</t><t w="35">外達撐</t><t w="35">外濤接</t><t w="35">外號接</t><t w="35">外補撐</t><t w="34">外濤撐</t><t w="34">外號撐</t></item><item x="465" y="174" w="42" h="10"><t w="32">株章軍略</t><t w="32">株章單略</t><t w="32">偉章單略</t><t w="32">偉章軍略</t><t w="32">株素單略</t><t w="32">株奪單略</t><t w="32">作章單略</t><t w="32">株素軍略</t><t w="32">作章軍略</t><t w="32">株奪軍略</t></item><item x="44" y="173" w="7" h="8"><t w="36">芙</t><t w="35">美</t><t w="34">关</t><t w="32">羡</t></item><item x="54" y="174" w="10" h="10"><t w="30">鬆</t><t w="29">暴</t><t w="28">墅</t><t w="26">塚</t></item><item x="66" y="174" w="19" h="10"><t w="33">退巖!</t><t w="33">退巖」</t><t w="33">退巖1</t><t w="33">退麼」</t><t w="33">退麼!</t><t w="32">退蠻」</t><t w="32">退蠻!</t><t w="32">退塑」</t><t w="32">退塑!</t><t w="32">退麼1</t></item><item x="35" y="205" w="10" h="14"><t w="61">3</t></item><item x="52" y="203" w="203" h="18"><t w="54">种检索策略的运行机制</t><t w="50">种检索策暗的运行机制</t><t w="50">种捡索策略的运行机制</t><t w="50">种检索策畸的运行机制</t><t w="50">种检素策略的运行机制</t><t w="49">种检索策崎的运行机制</t><t w="43">的运行机制</t><t w="41">鰓运行机制</t><t w="41">謗运行机制</t><t w="38">的运行机制」</t></item><item x="12" y="210" w="6" h="5"><t w="58">•</t></item><item x="306" y="259" w="30" h="9"><t w="39">立即加</t><t w="38">立印加</t><t w="37">立韜加</t><t w="36">立舉加</t><t w="34">莖即加</t><t w="34">主即加</t><t w="33">主印加</t><t w="33">莖印加</t><t w="32">主韜加</t><t w="32">莖韜加</t></item><item x="338" y="259" w="9" h="9"><t w="29">羲</t><t w="29">氟</t><t w="28">截</t><t w="26">裁</t></item><item x="349" y="259" w="19" h="9"><t w="38">与捡</t><t w="37">与检</t><t w="36">与椎</t><t w="36">与持</t><t w="32">與捡</t><t w="32">與检</t><t w="32">與椎</t><t w="31">與持</t><t w="18">與撒</t></item><item x="370" y="259" w="9" h="9"><t w="33">業</t><t w="31">彙</t><t w="30">鴦</t><t w="30">暈</t></item><item x="381" y="259" w="31" h="9"><t w="36">方法摄</t><t w="34">方法術</t><t w="34">方法柑</t><t w="34">方法搪</t><t w="33">方浊摄</t><t w="33">方遺摄</t><t w="33">方遺術</t><t w="33">方浊術</t><t w="33">方煉摄</t><t w="33">方遺柑</t></item><item x="413" y="259" w="19" h="9"><t w="35">定的</t><t w="31">窦的</t><t w="31">窕的</t><t w="30">寓的</t><t w="24">定約</t></item><item x="435" y="259" w="19" h="9"><t w="37">对氯</t><t w="36">对蠢</t><t w="36">对淼</t><t w="36">对氟</t><t w="35">對氯</t><t w="35">對蠢</t><t w="35">對淼</t><t w="34">對氟</t></item><item x="457" y="259" w="30" h="9"><t w="37">的关联</t><t w="37">的美联</t><t w="36">的关耿</t><t w="36">的芙联</t><t w="36">的关朕</t><t w="36">的美耿</t><t w="36">的羡联</t><t w="35">的美朕</t><t w="35">的芙耿</t><t w="34">的芙朕</t></item><item x="489" y="259" w="23" h="9"><t w="34">對齡</t><t w="33">對叡,</t><t w="33">對轧</t><t w="33">對軸</t><t w="32">对齡</t><t w="32">對叡&gt;</t><t w="32">對氯,</t><t w="32">對蠢,</t><t w="32">對淼,</t><t w="32">對氯&gt;</t></item><item x="306" y="271" w="18" h="10"><t w="31">可以</t><t w="31">可留</t><t w="31">可誓</t><t w="31">可夢</t><t w="27">耳以</t><t w="27">耳留</t><t w="27">耳誓</t><t w="27">耳夢</t><t w="26">百以</t><t w="26">百留</t></item><item x="327" y="271" w="9" h="10"><t w="32">菅</t><t w="30">諡</t><t w="29">醬</t><t w="28">證</t></item><item x="338" y="271" w="8" h="10"><t w="32">黑</t><t w="30">黒</t><t w="27">萍</t><t w="25">淳</t></item><item x="349" y="271" w="19" h="10"><t w="29">世董</t><t w="29">世畫</t><t w="28">世堇</t><t w="28">世童</t><t w="27">也畫</t><t w="27">也董</t><t w="27">也堇</t><t w="27">也童</t><t w="26">飾畫</t><t w="26">飾董</t></item><item x="370" y="271" w="41" h="10"><t w="33">持重當雲</t><t w="32">持重當雷</t><t w="32">特重當雲</t><t w="32">持重當蕾</t><t w="32">持重當當</t><t w="32">持重盤雲</t><t w="32">特重當雷</t><t w="32">特重當蕾</t><t w="32">特重當當</t><t w="32">持重盤雷</t></item><item x="48" y="300" w="40" h="10"><t w="34">陸操推遺</t><t w="34">陸操推還</t><t w="33">陸操推畫</t><t w="33">陸操推堇</t><t w="33">陸操惟遺</t><t w="33">陸操捷遺</t><t w="32">陸操捡遺</t><t w="32">溼操推遺</t><t w="32">溼操推還</t><t w="32">陸操捷還</t></item><item x="44" y="232" w="87" h="103"><t w="29">圍</t><t w="27">憂</t><t w="25">屢</t><t w="24">纂</t><t w="10">冒亭</t></item><item x="50" y="271" w="39" h="10"><t w="31">象粵搶重</t><t w="31">象即搶重</t><t w="31">象粵贫重</t><t w="31">象粵擔重</t><t w="31">象即贫重</t><t w="31">象即擔重</t><t w="30">象粵當重</t><t w="30">象即當重</t><t w="30">象卑搶重</t><t w="30">象烏搶重</t></item><item x="306" y="242" w="7" h="8"><t w="38">关</t><t w="38">美</t><t w="33">姜</t><t w="31">晏</t></item><item x="316" y="242" w="10" h="10"><t w="30">慰</t><t w="28">耿</t><t w="27">凰</t><t w="27">取</t></item><item x="327" y="242" w="19" h="10"><t w="30">攀攏!</t><t w="30">攀拔!</t><t w="30">攀秀!</t><t w="30">綠攏!</t><t w="30">攀捌!</t><t w="30">綠拔!</t><t w="29">綠秀!</t><t w="29">綠捌!</t><t w="29">鱗攏!</t><t w="29">鱗拔!</t></item><item x="132" y="232" w="391" h="103"><t w="31">gf Fe靈俞</t><t w="31">GE Fe靈俞</t><t w="31">GE Fe麗俞</t><t w="31">gf Fe麗俞</t><t w="31">gf Fe疆俞</t><t w="31">GE Fe疆俞</t><t w="31">gf Fe靈處</t><t w="31">GE Fe靈扭</t><t w="31">gf Fe靈扭</t><t w="31">GE Fe麗扭</t></item><item x="457" y="288" w="31" h="9"><t w="36">的关駛</t><t w="35">的美駛</t><t w="35">的关耿</t><t w="35">的关聯</t><t w="35">的美耿</t><t w="35">的蕉駛</t><t w="35">的美聯</t><t w="35">的芙駛</t><t w="35">的关琅</t><t w="35">的蕉耿</t></item><item x="489" y="289" w="23" h="9"><t w="32">对氯,</t><t w="32">對氯,</t><t w="32">对氯。</t><t w="32">對氯。</t><t w="32">琦氯,</t><t w="32">琦氯。</t><t w="31">对氟,</t><t w="31">對氟,</t><t w="31">对氟。</t><t w="31">對氟。</t></item><item x="306" y="288" w="9" h="9"><t w="36">延</t><t w="34">廷</t><t w="28">貳</t><t w="28">蕙</t></item><item x="316" y="289" w="40" h="9"><t w="36">遮加氟与</t><t w="36">遮加羲与</t><t w="36">遮加載与</t><t w="36">遮加裁与</t><t w="35">遮加羲與</t><t w="35">遮加氟與</t><t w="35">遮加載與</t><t w="35">遮加裁與</t><t w="33">追加羲与</t><t w="33">追加氟与</t></item><item x="359" y="289" w="9" h="9"><t w="30">拴</t><t w="29">栓</t><t w="29">捡</t><t w="29">桂</t></item><item x="370" y="289" w="9" h="8"><t w="33">業</t><t w="29">暈</t><t w="27">隶</t><t w="26">彙</t></item><item x="381" y="288" w="51" h="9"><t w="38">方燒指定的</t><t w="38">方油指定的</t><t w="37">方盐指定的</t><t w="37">方連指定的</t><t w="36">方燒插定的</t><t w="36">方燒恭定的</t><t w="36">方油插定的</t><t w="36">方油恭定的</t><t w="36">方盐插定的</t><t w="36">方連插定的</t></item><item x="435" y="288" w="19" h="9"><t w="37">對氯</t><t w="37">对氯</t><t w="36">對氣</t><t w="36">對氟</t><t w="36">對象</t><t w="35">对氣</t><t w="35">对氟</t><t w="35">对象</t><t w="33">琦氯</t><t w="31">琦氣</t></item><item x="147" y="300" w="20" h="10"><t w="34">選操</t><t w="32">選损</t><t w="32">遙操</t><t w="32">選婆</t><t w="32">選遙</t><t w="31">陽操</t><t w="31">稚操</t><t w="29">遙损</t><t w="29">遙婆</t><t w="29">遙遙</t></item><item x="168" y="300" w="19" h="10"><t w="32">無董</t><t w="32">無妻</t><t w="32">無需</t><t w="31">無靂</t><t w="31">加董</t><t w="31">加妻</t><t w="31">加需</t><t w="31">游董</t><t w="30">加靂</t><t w="30">游妻</t></item><item x="190" y="300" w="20" h="10"><t w="31">捡畫</t><t w="31">捡遺</t><t w="31">拴畫</t><t w="31">推畫</t><t w="30">拴遺</t><t w="30">推遺</t><t w="30">捡盧</t><t w="29">捡晝</t><t w="29">挽畫</t><t w="29">拴盧</t></item><item x="212" y="300" w="8" h="10"><t w="31">奋</t><t w="29">急</t><t w="29">畜</t><t w="28">密</t></item><item x="223" y="300" w="20" h="10"><t w="31">塗捆</t><t w="30">塗盤</t><t w="30">盤捆</t><t w="30">塗堇</t><t w="30">塗盏</t><t w="29">盤盤</t><t w="29">盤堇</t><t w="29">盤盏</t><t w="29">遮捆</t><t w="28">瘟捆</t></item><item x="244" y="300" w="9" h="10"><t w="31">崖</t><t w="28">庶</t><t w="27">涅</t><t w="27">宮</t></item><item x="255" y="300" w="9" h="10"><t w="35">检</t><t w="28">暢</t><t w="27">筑</t><t w="27">粮</t></item><item x="266" y="300" w="18" h="10"><t w="30">廠畫</t><t w="30">廠盞</t><t w="30">廠麼</t><t w="29">廠豊</t><t w="28">片畫</t><t w="28">片盞</t><t w="28">片麼</t><t w="27">对畫</t><t w="27">对盞</t><t w="27">对麼</t></item><item x="306" y="300" w="18" h="10"><t w="36">可%</t><t w="35">可塔</t><t w="35">可啟</t><t w="34">可營</t><t w="11">考塔</t></item><item x="327" y="301" w="10" h="10"><t w="31">逸</t><t w="30">逮</t><t w="28">繪</t><t w="28">諡</t></item><item x="338" y="300" w="8" h="10"><t w="28">禀</t><t w="25">涅</t><t w="23">嵩</t><t w="22">慮</t></item><item x="349" y="300" w="9" h="10"><t w="33">也</t><t w="32">迪</t><t w="31">世</t><t w="28">佳</t></item><item x="360" y="300" w="8" h="10"><t w="30">霍</t><t w="27">重</t><t w="26">靈</t><t w="26">輩</t></item><item x="370" y="300" w="9" h="10"><t w="31">攏</t><t w="30">挖</t><t w="29">憧</t><t w="29">惟</t></item><item x="381" y="300" w="30" h="10"><t w="32">遺罪霍</t><t w="31">遺靜霍</t><t w="31">遺營霍</t><t w="31">遺靂霍</t><t w="31">遺罪輩</t><t w="31">遺罪曹</t><t w="31">遺靜輩</t><t w="30">遺罪賈</t><t w="30">遺營輩</t><t w="30">遺靜曹</t></item><item x="306" y="318" w="19" h="8"><t w="34">通过</t><t w="33">通遂</t><t w="33">通雄</t><t w="31">通謎</t><t w="30">巍过</t><t w="29">巍遂</t><t w="29">巍雄</t><t w="28">遞过</t><t w="28">猛过</t><t w="28">遞遂</t></item><item x="327" y="318" w="41" h="8"><t w="35">塞外連接</t><t w="34">塞井連接</t><t w="34">塞外连接</t><t w="34">塞外達接</t><t w="34">塞外連搂</t><t w="34">塞外違接</t><t w="34">塞井连接</t><t w="34">塞姓連接</t><t w="34">塞井達接</t><t w="33">塞并連接</t></item><item x="370" y="318" w="29" h="8"><t w="38">加載与</t><t w="37">加載週</t><t w="37">加載車</t><t w="37">加載巧</t><t w="36">加絨与</t><t w="36">加戴与</t><t w="35">加戴週</t><t w="35">加絨週</t><t w="35">加戴車</t><t w="35">加絨車</t></item><item x="402" y="318" w="42" h="8"><t w="32">搔幸方法</t><t w="32">榕幸方法</t><t w="32">榕季方法</t><t w="32">搔季方法</t><t w="32">榕素方法</t><t w="32">榕索方法</t><t w="32">搔素方法</t><t w="32">搔索方法</t><t w="31">检幸方法</t><t w="31">检季方法</t></item><item x="446" y="318" w="9" h="8"><t w="29">擋</t><t w="27">框</t><t w="26">眷</t><t w="26">恪</t></item><item x="456" y="318" w="20" h="8"><t w="33">震-的</t><t w="32">蓝-的</t><t w="31">灵-的</t><t w="31">笼-的</t><t w="30">定的</t><t w="27">岚的</t><t w="27">嵐的</t><t w="23">震轟</t><t w="23">震,</t><t w="21">蓝轟</t></item><item x="478" y="318" w="40" h="8"><t w="37">对蓋的關</t><t w="36">对蓋的关</t><t w="36">对蓋的美</t><t w="36">对淼的關</t><t w="36">对叡的關</t><t w="36">对蓋的失</t><t w="36">对蠢的關</t><t w="36">对淼的关</t><t w="36">对叡的关</t><t w="36">对蠢的关</t></item><item x="48" y="329" w="8" h="8"><t w="25">兩</t><t w="21">兼</t><t w="20">磕</t></item><item x="58" y="330" w="8" h="7"><t w="39">切</t><t w="32">初</t><t w="32">销</t></item><item x="70" y="329" w="19" h="10"><t w="32">左營</t><t w="31">注營</t><t w="31">左蟄</t><t w="30">左螢</t><t w="30">畫營</t><t w="29">晝營</t><t w="29">注蟄</t><t w="29">注螢</t><t w="28">畫蟄</t><t w="28">畫螢</t></item><item x="91" y="329" w="30" h="10"><t w="32">桥接推</t><t w="32">這接推</t><t w="32">桥接檔</t><t w="32">這接檔</t><t w="31">桥接撞</t><t w="31">這接撞</t><t w="31">桥推推</t><t w="31">這推推</t><t w="31">桥接拴</t><t w="31">這接拴</t></item><item x="123" y="330" w="8" h="8"><t w="30">素</t><t w="30">業</t><t w="27">氰</t><t w="27">槃</t></item><item x="146" y="330" w="29" h="9"><t w="34">不考用</t><t w="34">不考翔</t><t w="34">不墩用</t><t w="33">不考擇</t><t w="33">不缴用</t><t w="33">不選用</t><t w="33">不墩翔</t><t w="32">不缴翔</t><t w="32">不墩擇</t><t w="32">不選翔</t></item></recoIndex>
]]></recognition></resource><resource><data encoding="base64">
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
</data><mime>image/png</mime><width>452</width><height>331</height><recognition><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE recoIndex PUBLIC "SYSTEM" "http://xml.evernote.com/pub/recoIndex.dtd"><recoIndex docType="unknown" objType="image" objID="d3a21b10179eef346f0b951494999de6" engineVersion="7.0.24.1" recoType="service" lang="zh" objWidth="452" objHeight="331"><item x="79" y="5" w="54" h="21"><t w="68">XML</t><t w="34">天mL</t><t w="33">冥mL</t><t w="32">鷥mL</t><t w="32">天制卜</t><t w="32">天噸卜</t><t w="32">天纲卜</t><t w="32">天制釘</t><t w="32">天噸釘</t></item><item x="141" y="2" w="306" h="27"><t w="50">中可以使用的特文字符如下</t><t w="47">申可以使用的特文字符如下</t><t w="47">中可以使用的特災字符如下</t><t w="47">中可以使用的提文字符如下</t><t w="46">转义字符如下</t><t w="46">中可以使用的特艾字符如下</t><t w="46">中可以使用間特文字符如下</t><t w="39">中可以使用</t><t w="38">转义宇符如下</t><t w="37">转义字待如下</t></item><item x="79" y="53" w="161" h="25"><t w="60">&amp;It﹔〈小于哥</t><t w="49">&amp;It1 《 小于哥</t><t w="47">&amp;It1 《 小于粵</t><t w="47">&amp;It1 《 小于夸</t><t w="46">&amp;It1 《 小于尋</t><t w="46">&amp;It1 《 小于嘻</t><t w="44">&amp;ItJc 小于哥</t><t w="44">&amp;It1 《 小手哥</t><t w="44">&amp;It1 《 小子哥</t><t w="36">&lt;小于号</t></item><item x="79" y="104" w="77" h="27"><t w="59">&amp;gt﹔〉</t><t w="29">敬</t><t w="28">駛</t><t w="27">劉</t><t w="27">敏</t><t w="25">兮TI</t><t w="25">9 TI</t><t w="24">兮旬</t><t w="24">9旬</t><t w="24">兮黏</t></item><item x="165" y="103" w="84" h="25"><t w="29">于</t><t w="27">号</t><t w="27">損</t><t w="26">頻</t><t w="25">担</t><t w="25">蛾</t><t w="25">弓</t><t w="23">暨</t><t w="23">唇</t><t w="22">聶體</t></item><item x="79" y="154" w="113" h="26"><t w="56">&amp;amp﹔＆</t><t w="38">&amp;ampJa</t><t w="37">&amp;ampia</t><t w="35">&amp;ampla</t><t w="31">&amp;am口Ja</t><t w="30">&amp;ampi包</t><t w="25">敬</t><t w="25">議Jill 11 -</t><t w="25">議Lili 11 -</t><t w="24">程</t></item><item x="203" y="154" w="26" h="23"><t w="62">和</t></item><item x="80" y="205" w="20" h="19"><t w="37">程</t><t w="35">敬</t><t w="34">畿</t><t w="32">&amp;</t><t w="32">＆</t></item><item x="101" y="211" w="44" h="22"><t w="28">ep 9</t><t w="27">ep費</t><t w="27">ep搜</t><t w="26">3 pg</t><t w="25">3 pp</t><t w="25">Epp</t><t w="25">架9</t><t w="24">GP 9</t><t w="24">AP 9</t><t w="24">3農9</t></item><item x="147" y="211" w="16" h="22"><t w="35">呂</t><t w="27">簽</t></item><item x="193" y="204" w="75" h="23"><t w="47">单引号</t><t w="35">单gl号</t><t w="35">单GI号</t><t w="35">单侧号</t><t w="34">单El号</t><t w="31">单弓!号</t><t w="31">单弓」号</t><t w="27">单弓=</t><t w="23">单g !号</t><t w="23">单g 」号</t></item><item x="79" y="254" w="143" h="27"><t w="51">&amp;quot﹔﹒~</t><t w="30">Qu OT嵩</t><t w="30">Qu载衍</t><t w="30">Qu OT 」</t><t w="30">Qu OT #</t><t w="30">Qu 。衍</t><t w="29">Qu OT ,</t><t w="29">Qu载咏</t><t w="29">Qu 。咏</t><t w="29">quo衍</t></item><item x="223" y="253" w="51" h="25"><t w="41">引哥</t><t w="35">引夸</t><t w="34">引粵</t><t w="33">双引号</t><t w="29">引尋</t><t w="29">引嘻</t><t w="22">双5 !号</t><t w="22">双5 」号</t><t w="17">双5房</t><t w="12">双引lg ?</t></item><item x="0" y="53" w="32" h="21"><t w="30">當,</t><t w="28">醫,</t><t w="25">当,</t><t w="24">娶响</t><t w="24">娶祠</t><t w="24">娶磷</t><t w="24">獸响</t><t w="24">娶础</t><t w="24">獸祠</t><t w="24">斷祠</t></item></recoIndex>
]]></recognition></resource></note></en-export>
